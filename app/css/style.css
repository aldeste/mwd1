/**
 * Raise number to the nth power
 *
 * @param {number} $base      The base number
 * @param {number} $exponents The exponent to which to raise $base
 */
/**
 * Remove unit from numbers
 */
/**
 * The line algorythm is based on pixel size, so we're converting presumed for use
 *
 * @param {string/number} $number             Number to convert to unitless px
 * @param {string/number} $font-size-root     Number for REM conversion.
 * @param {string}        $font-or-width      Determines which default to fall back to
 */
/**
 * The line height is calculated to match relative widths to font sizes.
 *
 * The formula is from http:/*www.pearsonified.com/2011/12/golden-ratio-typography.php
 * RATIO - 1 / ( 2 * RATIO ) * ( 1 - WIDTH / ( ( FONT-SIZE * RATIO ) ^ 2 ) )
 * The formula has been simplified as such:
 * RATIO - ( - WIDTH / ( FONT-SIZE * RATIO ^ 2 + 1 ) ) / ( 2 * RATIO );
 *
 * @param {string/number} $font-size            Font size to calculate by
 * @param {string/number} $width                Width to calculate by.
 * @param {number}        $radio                Harmonic ratio used on site
 * @param {string/number} $font-size-root       PX size applied to base
 */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden],
template {
  display: none; }

a {
  background-color: transparent; }

a:active,
a:hover {
  outline: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b,
strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

h1 {
  font-size: 2em; }

mark {
  background: #ff0;
  color: #000; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -.5em; }

sub {
  bottom: -.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

hr {
  box-sizing: content-box;
  height: 0; }

pre {
  overflow: auto; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit; }

button {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled],
html input[disabled] {
  cursor: default; }

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input {
  line-height: normal; }

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0; }

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"] {
  -webkit-appearance: textfield; }

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

fieldset {
  border: 1px solid #c0c0c0;
  padding: .35em .625em .75em; }

legend {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto; }

optgroup {
  font-weight: bold; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

::-moz-selection {
  color: rgba(245, 240, 237, 0.87);
  background: #146a6c; }

::selection {
  color: rgba(245, 240, 237, 0.87);
  background: #146a6c; }

html {
  font-size: 18px; }

body {
  font: 400 1em / 1.5 'Lato', 'Helvetica Neue', Helvetica, Arial, 'Lucida Grande', sans-serif;
  color: #322c28;
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0.35); }

p,
li,
input,
textarea,
select,
label {
  font-weight: inherit;
  color: inherit;
  -webkit-font-kerning: normal;
          font-kerning: normal;
  -webkit-font-variant-ligatures: normal;
          font-variant-ligatures: normal; }

.billboard__title,
.metablock__title,
.card__title {
  font-size: 1.41421rem;
  font-weight: 400;
  line-height: 1.39846;
  letter-spacing: -.06em;
  -webkit-font-variant-ligatures: common-ligatures;
          font-variant-ligatures: common-ligatures;
  -webkit-font-kerning: normal;
          font-kerning: normal; }

.billboard__title {
  text-transform: capitalize; }

.footer, .header, .card__cta, .card__meta--country,
.card__meta--tag, .nav__action,
.nav__form, .nav--hamburger, .form__cta, .billboard {
  color: rgba(245, 240, 237, 0.87); }

.form__label {
  font-weight: 700; }

.card__meta--country,
.card__meta--tag {
  font-size: 0.70711rem; }

* {
  margin: 0; }
  * + * {
    margin-top: 1.41421em; }

header, .social > *, .list--default > *, .list--unstyled > *,
.card__meta--country,
.card__meta--tag,
.switch ~ label:first-of-type,
.footer {
  margin-top: 0; }

.browse-wrap,
.wrap {
  max-width: 1215px;
  -webkit-flex: 0 86.292vw;
      -ms-flex: 0 86.292vw;
          flex: 0 86.292vw; }


.grid, .grid--column, .grid--row, .grid--center, body, .card__cta, .card__meta--country,
.card__meta--tag, .nav, .nav__dropdown, .nav__form, .header, .billboard, .metablock {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.header, .billboard {
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }


.grid {
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }

.grid,.grid--column {
  -webkit-flex-flow: column wrap;
      -ms-flex-flow: column wrap;
          flex-flow: column wrap; }

.grid--column,.grid--row {
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.grid--row {
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap; }

.grid--space-around {
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around; }

.grid--center {
          flex-flow: row wrap;
  -webkit-flex: 1 100vw;
      -ms-flex: 1 100vw;
          flex: 1 100vw; }

.grid--center,body {
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }

body {
          flex-flow: row wrap; }

.card__cta, .card__meta--country,
.card__meta--tag {
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.grid--initial {
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -webkit-align-content: flex-start;
      -ms-flex-line-pack: start;
          align-content: flex-start; }

.grid--end {
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  -webkit-align-content: flex-end;
      -ms-flex-line-pack: end;
          align-content: flex-end; }

.grid__width--1 {
  -webkit-flex: 0 calc(33.33333% - 2rem);
      -ms-flex: 0 calc(33.33333% - 2rem);
          flex: 0 calc(33.33333% - 2rem); }

.grid__width--2 {
  -webkit-flex: 0 calc(66.66667% - 2rem);
      -ms-flex: 0 calc(66.66667% - 2rem);
          flex: 0 calc(66.66667% - 2rem); }

.grid__width--3 {
  -webkit-flex: 0 calc(100% - 2rem);
      -ms-flex: 0 calc(100% - 2rem);
          flex: 0 calc(100% - 2rem); }

.grid__block--1 {
  -webkit-flex: 1.41421;
      -ms-flex: 1.41421;
          flex: 1.41421; }

.grid__block--2 {
  -webkit-flex: 2;
      -ms-flex: 2;
          flex: 2; }

.grid__block--3 {
  -webkit-flex: 2.82843;
      -ms-flex: 2.82843;
          flex: 2.82843; }

.nav--hamburger, .form__cta, .form__input, .nav__input, .link, .card__cta, .card__meta--country,
.card__meta--tag, .nav__action,
.nav__form, .card__action {
  transition: box-shadow ease-in-out 150ms;
  box-shadow: 0 0 1rem 1.41421rem transparent, inset 0 0 1rem 1.41421rem transparent; }

.nav--hamburger:focus, .form__cta:focus, .form__input:focus, .nav__input:focus, .link:focus, .card__cta:focus, .card__meta--country:focus,
.card__meta--tag:focus, .nav__action:focus,
.nav__form:focus, .card__action:focus {
  border-color: #146a6c;
  outline: none;
  box-shadow: 0 0 2rem #499671, inset 0 0 0.17678rem #499671; }

.nav--hamburger, .form__cta, .form__input, .nav__input {
  border-radius: 0.70711rem; }

.form__input, .nav__input {
  padding: 0.35355rem 0.5rem; }

.card {
  margin: 1.41421rem 0;
  -webkit-flex-flow: column nowrap;
      -ms-flex-flow: column nowrap;
          flex-flow: column nowrap;
  -webkit-align-content: flex-start;
      -ms-flex-line-pack: start;
          align-content: flex-start; }

.card,.card__action {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.card__action {
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  -webkit-flex-flow: column wrap;
      -ms-flex-flow: column wrap;
          flex-flow: column wrap; }

.card__imgblock {
  width: 100%; }

.card__about {
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1; }

.card__footer {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
      -ms-flex-align: start;
          align-items: flex-start;
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap; }

.card__cta {
  height: 2.82843rem;
  white-space: nowrap;
  border-radius: 2.82843rem;
  background: #9f2e32; }

.card__meta {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
  -webkit-align-items: flex-start;
      -ms-flex-align: start;
          align-items: flex-start;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }

.card__meta--country,
.card__meta--tag {
  height: 1.41421rem;
  margin-right: 0.17678rem;
  margin-bottom: 0.17678rem;
  text-transform: uppercase;
  border-radius: 2.82843rem;
  -webkit-flex: 1 2.82843rem;
      -ms-flex: 1 2.82843rem;
          flex: 1 2.82843rem; }

.card__meta--tag {
  background: #146a6c; }

.card__meta--country {
  background: #499671; }

.switch {
  position: absolute;
  opacity: 0; }

.menu-label {
  -webkit-align-self: flex-end;
      -ms-flex-item-align: end;
          align-self: flex-end; }

.switch:checked ~ .nav--hamburger .hamburger-icon {
  -webkit-transform: scale(0);
      -ms-transform: scale(0);
          transform: scale(0); }

.switch:checked ~ .nav--hamburger .hamburger::before {
  -webkit-transform: translateY(0.4em) rotate(90deg);
      -ms-transform: translateY(0.4em) rotate(90deg);
          transform: translateY(0.4em) rotate(90deg); }

.switch:checked ~ .nav--hamburger .hamburger::after {
  -webkit-transform: translateY(-0.4em) rotate(180deg);
      -ms-transform: translateY(-0.4em) rotate(180deg);
          transform: translateY(-0.4em) rotate(180deg); }

.hamburger {
  font-size: 1rem;
  display: inline-block;
  width: 1em;
  height: 1em;
  padding: 0;
  cursor: pointer;
  transition: -webkit-transform 200ms ease-in-out;
  transition: transform 200ms ease-in-out;
  vertical-align: middle;
  border: 0 none;
  background: transparent; }

.hamburger::before,
.hamburger::after {
  content: ''; }

.hamburger::before,
.hamburger::after,
.hamburger-icon {
  display: block;
  width: 100%;
  height: .1em;
  margin: 0 0 .29em;
  transition: -webkit-transform 200ms cubic-bezier(0, 1.3, 1, 1.2);
  transition: transform 200ms cubic-bezier(0, 1.3, 1, 1.2);
  border-radius: .5em;
  background: rgba(245, 240, 237, 0.87); }

.nav {
  top: -10rem;
  width: 30vw;
  height: 0;
  transition: all 400ms cubic-bezier(0, 1.3, 1, 1.2);
  -webkit-transform: translateZ(0);
          transform: translateZ(0);
  opacity: 0;
  -webkit-flex-flow: column nowrap;
      -ms-flex-flow: column nowrap;
          flex-flow: column nowrap; }

.switch:checked ~ .nav {
  top: 0;
  width: 30vw;
  height: 100vh;
  padding: 1.41421rem;
  opacity: 1; }

.switch:not(:checked) ~ .nav {
  margin: 0; }

.nav--hamburger {
  position: fixed;
  top: 1vh;
  right: 7vw;
  background: rgba(7, 7, 6, 0.9); }

.nav__action {
  display: inline-block; }

.nav__dropdown {
  display: none;
  margin-top: 1.41421rem;
  -webkit-flex-flow: column nowrap;
      -ms-flex-flow: column nowrap;
          flex-flow: column nowrap; }

.switch:checked ~ .nav__dropdown {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.nav__input {
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1; }

.footer {
  padding: 0.25rem 0;
  background: #322c28; }

.header {
  position: fixed;
  left: 0;
  background: rgba(7, 7, 6, 0.9);
  -webkit-flex: 0 10vw;
      -ms-flex: 0 10vw;
          flex: 0 10vw; }

.nav--hamburger, .form__cta {
  padding: 0.5em 1.41421em;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  text-align: center;
  vertical-align: baseline;
  white-space: nowrap;
  border: 0; }

.form__cta {
  background: #710707; }

.form__cta:hover,
.form__cta:focus {
  background: #a10a0a; }

.form__cta:active {
  background: #b90b0b; }

.form__fieldset {
  position: relative;
  border-collapse: separate; }

.form__input,
.nav__input {
  color: #322c28;
  display: block;
  border: 1px solid rgba(20, 13, 10, 0.2);
  background-color: #fff;
  -webkit-appearance: none;
  -moz-appearance: none; }

.link,
.card__cta,
.card__meta--country,
.card__meta--tag,
.nav__action,
.nav__form,
.nav--hamburger,
.form__cta,
.card__action {
  text-decoration: none; }

.card__cta:hover, .card__meta--country:hover,
.card__meta--tag:hover, .nav__action:hover,
.nav__form:hover, .nav--hamburger:hover, .form__cta:hover,
.card__cta:focus,
.card__meta--country:focus,
.card__meta--tag:focus,
.nav__action:focus,
.nav__form:focus,
.nav--hamburger:focus,
.form__cta:focus,
.card__cta:active,
.card__meta--country:active,
.card__meta--tag:active,
.nav__action:active,
.nav__form:active,
.nav--hamburger:active,
.form__cta:active {
  color: #f5f0ed; }

.card__action {
  text-decoration: none;
  color: inherit; }

.list--unstyled {
  padding: 0;
  list-style: none; }

.list__link--spacious {
  display: block; }

.list__item--spacious,
.list__link--spacious {
  padding: 0.70711em 0; }

.img {
  width: 100%;
  height: auto;
  vertical-align: middle; }

.img--round {
  border-radius: 50%; }

.svghide {
  display: none; }

.icon {
  border-radius: 50%; }

.icon--small {
  width: 0.5rem;
  height: 0.5rem;
  margin: 0 0.25rem; }

.icon--medium {
  width: 2rem;
  height: 2rem;
  margin: 0.25rem; }

.icon--large {
  width: 2.82843rem;
  height: 2.82843rem; }

.icon--logo {
  width: 2rem;
  height: 1.41421rem;
  vertical-align: middle;
  fill: rgba(245, 240, 237, 0.87);
  mix-blend-mode: difference; }

.icon--facebook, .icon--googleplus, .icon--twitter {
  background: rgba(245, 240, 237, 0.87); }

.icon--facebook {
  fill: #3b5998; }

.icon--googleplus {
  fill: #d34836; }

.icon--twitter {
  fill: #4090ff; }

@font-face {
  font-family: 'icomoon';
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/icomoon.eot");
  src: url("../fonts/icomoon.eot#iefix") format("embedded-opentype"), url("../fonts/icomoon.ttf") format("truetype"), url("../fonts/icomoon.woff") format("woff"), url("../fonts/icomoon.svg#icomoon") format("svg"); }

.ficon::before {
  font-family: 'icomoon';
  line-height: 1;
  margin-right: .3rem;
  vertical-align: middle;
  speak: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.ficon--list::before {
  content: '\e900'; }

.ficon--location::before {
  content: '\e901'; }

.ficon--heart::before {
  content: '\e902'; }

.ficon--user::before {
  content: '\e903'; }

.ficon--gift::before {
  content: '\e904'; }

.ficon--shopping-cart::before {
  content: '\e905'; }

.billboard {
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
  padding: 2.82843em 0;
  -webkit-flex: 100vw;
      -ms-flex: 100vw;
          flex: 100vw;
  fill: rgba(245, 240, 237, 0.87); }

.billboard--default {
  background: #9f2e32; }

.billboard--attention {
  background: #322c28; }

.metablock {
  -webkit-flex-flow: column wrap;
      -ms-flex-flow: column wrap;
          flex-flow: column wrap;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

@media (min-width: 708px) {
  .billboard__title,
    .metablock__title,
    .card__title {
    line-height: 1.45379; }
  .billboard__title {
    font-size: 2rem;
    line-height: 1.38141; }
  .metablock__title {
    line-height: 1.45379; }
  .grid {
    -webkit-flex-flow: row wrap;
    -ms-flex-flow: row wrap;
    flex-flow: row wrap; }
  .grid--center--v {
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
  .grid__block {
    margin-top: 0; }
  .block--fullspan--large {
    -webkit-flex: 100vw;
    -ms-flex: 100vw;
    flex: 100vw; }
  .priority--last {
    -webkit-order: 10;
    -ms-flex-order: 10;
    order: 10; }
  .priority--important {
    -webkit-order: -10;
    -ms-flex-order: -10;
    order: -10; }
  .browse-wrap {
    max-width: calc(1215px + (1.41421rem * 2));
    -webkit-flex: 0 calc(86.292vw + (1.41421rem * 2));
    -ms-flex: 0 calc(86.292vw + (1.41421rem * 2));
    flex: 0 calc(86.292vw + (1.41421rem * 2)); }
  .card {
    margin: 1.41421rem;
    -webkit-flex: 1 calc(33.33333% - (1.41421rem * 2));
    -ms-flex: 1 calc(33.33333% - (1.41421rem * 2));
    flex: 1 calc(33.33333% - (1.41421rem * 2)); }
  .card:nth-of-type(5n+1) {
    -webkit-flex: 1 calc(66.66667% - (1.41421rem * 2));
    -ms-flex: 1 calc(66.66667% - (1.41421rem * 2));
    flex: 1 calc(66.66667% - (1.41421rem * 2)); }
  .card:nth-of-type(10n+0) {
    -webkit-flex: 1 calc(100% - (1.41421rem * 2));
    -ms-flex: 1 calc(100% - (1.41421rem * 2));
    flex: 1 calc(100% - (1.41421rem * 2)); }
  .menu-label {
    display: none; }
  .nav,
  .switch:checked ~ .nav {
    top: 0;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 86vw;
    height: inherit;
    margin: 0;
    padding: inherit;
    transition: none;
    opacity: 1;
    -webkit-flex-flow: row wrap;
    -ms-flex-flow: row wrap;
    flex-flow: row wrap;
    -webkit-align-items: stretch;
    -ms-flex-align: stretch;
    align-items: stretch; }
  .nav__action,
  .nav__form {
    margin: 0;
    text-align: center; }
  .nav__action {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    padding: 0;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
  .nav__action,.nav__action--has-dropdown {
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1; }
  .nav__action--has-dropdown {
    -webkit-flex-flow: column wrap;
    -ms-flex-flow: column wrap;
    flex-flow: column wrap; }
  .nav__action--dropdown-action {
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1; }
  .nav__dropdown {
    margin: 0;
    padding: 2rem; }
  .switch:checked ~ .nav__dropdown {
    position: absolute;
    background: rgba(7, 7, 6, 0.9); }
  .nav__form {
    margin: 0.25rem 0;
    -webkit-order: 10;
    -ms-flex-order: 10;
    order: 10;
    -webkit-flex: 2;
    -ms-flex: 2;
    flex: 2; }
  .footer {
    margin-top: 5.65685rem; }
  .header {
    -webkit-flex: 1 100vw;
    -ms-flex: 1 100vw;
    flex: 1 100vw;
    max-width: 100vw;
    z-index: 1;
    top: 0;
    right: 0;
    width: 100vw;
    padding: 0; }
  .header ~ .header--after {
    margin-top: 0;
    padding-top: 4rem; }
  .list__item--spacious,
    .list__link--spacious {
    padding: 0.70711em 1em; }
  .list__form--spacious {
    padding-right: 0.70711em;
    padding-left: 0.70711em; }
  .metablock {
    -webkit-flex: 0 calc(33% - 2rem);
    -ms-flex: 0 calc(33% - 2rem);
    flex: 0 calc(33% - 2rem);
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start; } }

@media (min-width: 831px) {
  .billboard__title {
    font-size: 2.82843rem;
    line-height: 1.3523;
    letter-spacing: -.03em; }
  .metablock__title {
    line-height: 1.48215; } }

@media (min-width: 1096px) {
  .billboard__title {
    line-height: 1.36757; }
  .metablock__title {
    line-height: 1.54324; } }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxpdGllcy9hbGV4YW5kZXJkZXN0ZS9fbGluZS1oZWlnaHQtaGFybW9ueS5zY3NzIiwiYmFzZS9fbm9ybWFsaXplLnNjc3MiLCJzdHlsZS5jc3MiLCJiYXNlL19iYXNlLnNjc3MiLCJ1dGlsaXRpZXMvX3ZhcmlhYmxlcy5zY3NzIiwiYmFzZS9fdHlwb2dyYXBoeS5zY3NzIiwibW9kdWxlcy9fYmlsbGJvYXJkLnNjc3MiLCJsYXlvdXQvX2Zvb3Rlci5zY3NzIiwibW9kdWxlcy9fZm9ybXMuc2NzcyIsImxheW91dC9fY2FyZC5zY3NzIiwiYmFzZS9fZ3JpZC5zY3NzIiwidXRpbGl0aWVzL19mdW5jdGlvbnMuc2NzcyIsImxheW91dC9faGVhZGVyLnNjc3MiLCJsYXlvdXQvX25hdi5zY3NzIiwibGF5b3V0L19jb25zdGFudHMuc2NzcyIsImxheW91dC9fZHJvcGRvd24uc2NzcyIsIm1vZHVsZXMvX2J1dHRvbnMuc2NzcyIsIm1vZHVsZXMvX2xpbmtzLnNjc3MiLCJtb2R1bGVzL19saXN0cy5zY3NzIiwibW9kdWxlcy9fbWVkaWEuc2NzcyIsIm1vZHVsZXMvX2ljb24uc2NzcyIsInV0aWxpdGllcy9lZHVhcmRvYm91Y2FzL19pbmNsdWRlLW1lZGlhLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUNBOzs7OztHQUtHO0FBZ0JIOztHQUVHO0FBTUg7Ozs7OztHQU1HO0FBK0JIOzs7Ozs7Ozs7Ozs7R0FZRztBQ3RGSDtFQUNFLHdCQUF3QjtFQUN4QiwyQkFBMkI7RUFDM0IsK0JBQStCLEVBSWhDOztBQUlEO0VBQ0UsVUFBVSxFQUNYOztBQVNEOzs7Ozs7Ozs7Ozs7O0VBYUUsZUFBZSxFQUNoQjs7QUFLRDs7OztFQUtJLHNCQUFzQjtFQUV4Qix5QkFBeUIsRUFLMUI7O0FBS0Q7RUFDRSxjQUFjO0VBQ2QsVUFBVSxFQUNYOztBQ3ZCRDs7RURvQ0UsY0FBYyxFQUNmOztBQVFDO0VBQ0UsOEJBQThCLEVBQy9COztBQUtIOztFQUVFLFdBQVcsRUFDWjs7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aURYO0VBR0Q7SUFJSSxtQkFBbUI7SUFDbkIsK0JUekJpQixFUzJCcEI7RUFFRDtJQUlJLGtCQUF3QjtJQUN4QixrQkFBVTtJQUFWLG1CQUFVO0lBQVYsVUFBVTtJQUNWLGdCRm5FUTtJRW1FUixZRm5FUTtJRW1FUixRRm5FUSxFRXFFWDtFTmxIRDtJQVFJLHVCSXFDUSxFSm5DWDtFS1JEO0lBV0ksc0JBQWM7SUFBZCxrQkFBYztJQUFkLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsV0FBYztJQUNkLE9BQU87SUFDUCxTQUFTO0lBQ1QsYUFBYTtJQUNiLFdBQVcsRUFRZDtFQXpCRDtJQXFCTSxjQUFjO0lBQ2Qsa0JEcUJNLEVDcEJQO0VNUEw7O0lBS0ksdUJBQTBCLEVBRTdCO0VBRUQ7SUFFSSx5QlBnQlE7SU9mUix3QlBlUSxFT2JYO0VaR0Q7SUFNSSxpQ0FBWTtJQUFaLDZCQUFZO0lBQVoseUJBQVk7SUFDWixvQ0FBNEI7SUFBNUIscUJBQTRCO0lBQTVCLDRCQUE0QixFQUUvQixFRERBOztBZ0IyZkc7RWYzZ0JKO0lEMkJJLHNCQUFXO0lBQ1gsb0JMdERvQjtJS3VEcEIsdUJBQXVCLEVBTTFCO0VDaEJEO0lEdUNJLHFCTHBGb0IsRUswRnZCLEVBN0JBOztBZ0J3ZUc7RWYzZ0JKO0lEaUNJLHFCTDNEb0IsRUs2RHZCO0VDaEJEO0lEMkNJLHFCTHhGb0IsRUswRnZCLEVBN0JBIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiRsaW5lLWhlaWdodC1oYXJtb255LXNldHRpbmdzOiAoXG4gICAgcmF0aW86IDEuNjE4MDMzOTg4NzUsXG4gICAgZm9udC1zaXplLXJvb3Q6IDE2cHhcbik7XG5cbkBmdW5jdGlvbiBsaW5lLWhlaWdodC1oYXJtb255LWdldFJhdGlvKCRyYXRpbzogbnVsbCkge1xuICAgIEBpZiAoJHJhdGlvID09IG51bGwgYW5kIG1hcC1oYXMta2V5KCRsaW5lLWhlaWdodC1oYXJtb255LXNldHRpbmdzLCByYXRpbykgPT0gdHJ1ZSkge1xuICAgICAgICBAcmV0dXJuIG1hcC1nZXQoJGxpbmUtaGVpZ2h0LWhhcm1vbnktc2V0dGluZ3MsIHJhdGlvKTtcbiAgICB9XG4gICAgQGVsc2UgaWYgbm90ICgkcmF0aW8gPT0gbnVsbCkge1xuICAgICAgICBAcmV0dXJuICRyYXRpbztcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgICBAd2FybiBcIidyYXRpbycgbm90IGZvdW5kIGluIGxpbmUtaGVpZ2h0LWhhcm1vbnktc2V0dGluZ3MuIEdvbGRlbiByYXRpbyBhc3N1bWVkLlwiO1xuICAgICAgICBAcmV0dXJuIDEuNjE4MDMzOTg4NzU7XG4gICAgfVxufVxuXG5AZnVuY3Rpb24gbGluZS1oZWlnaHQtaGFybW9ueS1nZXRGb250U2l6ZVJvb3QoJGZvbnQtc2l6ZS1yb290KSB7XG4gICAgQGlmIChtYXAtaGFzLWtleSgkbGluZS1oZWlnaHQtaGFybW9ueS1zZXR0aW5ncywgZm9udC1zaXplLXJvb3QpID09IHRydWUpIHtcbiAgICAgICAgJGRlZmF1bHQ6IG1hcC1nZXQoJGxpbmUtaGVpZ2h0LWhhcm1vbnktc2V0dGluZ3MsIGZvbnQtc2l6ZS1yb290KTtcbiAgICAgICAgQGlmICgkZGVmYXVsdCA9PSAkZm9udC1zaXplLXJvb3QpIG9yICgkZm9udC1zaXplLXJvb3QgPT0gbnVsbCkge1xuICAgICAgICAgICAgQHJldHVybiAkZGVmYXVsdDtcbiAgICAgICAgfVxuICAgICAgICBAZWxzZSB7XG4gICAgICAgICAgICBAcmV0dXJuIGxpbmUtaGVpZ2h0LWhhcm1vbnktY29udmVydC10by1weCgkZm9udC1zaXplLXJvb3QsICRkZWZhdWx0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICAgIEB3YXJuIFwiJ2ZvbnQtc2l6ZS1yb290JyBub3QgZm91bmQgaW4geW91ciBsaW5lLWhlaWdodC1oYXJtb255LXNldHRpbmdzLiAxNnB4IHJvb3QgYXNzdW1lZC5cIjtcbiAgICAgICAgQHJldHVybiAxNnB4O1xuICAgIH1cbn1cbi8qKlxuICogUmFpc2UgbnVtYmVyIHRvIHRoZSBudGggcG93ZXJcbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gJGJhc2UgICAgICBUaGUgYmFzZSBudW1iZXJcbiAqIEBwYXJhbSB7bnVtYmVyfSAkZXhwb25lbnRzIFRoZSBleHBvbmVudCB0byB3aGljaCB0byByYWlzZSAkYmFzZVxuICovXG5AZnVuY3Rpb24gcG93KCRiYXNlLCAkZXhwb25lbnRzKSB7XG4gICAkcmFpc2VkOiAxO1xuICAgQGlmICRleHBvbmVudHMgPiAwIHtcbiAgICAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoICRleHBvbmVudHMge1xuICAgICAgICAgICAkcmFpc2VkOiAkcmFpc2VkICogJGJhc2U7XG4gICAgICAgfVxuICAgfVxuICAgQGVsc2UgaWYgJGV4cG9uZW50cyA8IDAge1xuICAgICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggLSRleHBvbmVudHMge1xuICAgICAgICAgICAkcmFpc2VkOiAkcmFpc2VkIC8gJGJhc2U7XG4gICAgICAgfVxuICAgfVxuICAgQHJldHVybiAkcmFpc2VkO1xufVxuXG4vKipcbiAqIFJlbW92ZSB1bml0IGZyb20gbnVtYmVyc1xuICovXG5AZnVuY3Rpb24gc3RyaXAtdW5pdCgkbnVtYmVyKSB7XG4gICAgJG46ICRudW1iZXIgLyAoJG51bWJlciAqIDAgKyAxKTtcbiAgICBAcmV0dXJuICRuO1xufVxuXG4vKipcbiAqIFRoZSBsaW5lIGFsZ29yeXRobSBpcyBiYXNlZCBvbiBwaXhlbCBzaXplLCBzbyB3ZSdyZSBjb252ZXJ0aW5nIHByZXN1bWVkIGZvciB1c2VcbiAqXG4gKiBAcGFyYW0ge3N0cmluZy9udW1iZXJ9ICRudW1iZXIgICAgICAgICAgICAgTnVtYmVyIHRvIGNvbnZlcnQgdG8gdW5pdGxlc3MgcHhcbiAqIEBwYXJhbSB7c3RyaW5nL251bWJlcn0gJGZvbnQtc2l6ZS1yb290ICAgICBOdW1iZXIgZm9yIFJFTSBjb252ZXJzaW9uLlxuICogQHBhcmFtIHtzdHJpbmd9ICAgICAgICAkZm9udC1vci13aWR0aCAgICAgIERldGVybWluZXMgd2hpY2ggZGVmYXVsdCB0byBmYWxsIGJhY2sgdG9cbiAqL1xuQGZ1bmN0aW9uIGxpbmUtaGVpZ2h0LWhhcm1vbnktY29udmVydC10by1weCgkbnVtYmVyLCAkZm9udC1zaXplLXJvb3QsICRmb250LW9yLXdpZHRoOiBudWxsKSB7XG4gICAgJHVuaXQ6IHVuaXQoJG51bWJlcik7XG4gICAgJG51bWJlcjogc3RyaXAtdW5pdCgkbnVtYmVyKTtcblxuICAgIEBpZigkZm9udC1vci13aWR0aCA9PSAnZm9udCcgYW5kICR1bml0ID09ICcnKSB7XG4gICAgICAgIEBpZiBtYXAtaGFzLWtleSgkbGluZS1oZWlnaHQtaGFybW9ueS1zZXR0aW5ncywgZmFsbGJhY2stZm9udC1zaXplLXVuaXQpIHtcbiAgICAgICAgICAgICR1bml0OiBtYXAtZ2V0KCRsaW5lLWhlaWdodC1oYXJtb255LXNldHRpbmdzLCBmYWxsYmFjay1mb250LXNpemUtdW5pdCk7XG4gICAgICAgIH0gQGVsc2Uge1xuICAgICAgICAgICAgJHVuaXQ6ICdlbSc7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBAaWYoJGZvbnQtb3Itd2lkdGggPT0gJ3dpZHRoJyBhbmQgJHVuaXQgPT0gJycpIHtcbiAgICAgICAgQGlmIG1hcC1oYXMta2V5KCRsaW5lLWhlaWdodC1oYXJtb255LXNldHRpbmdzLCBmYWxsYmFjay13aWR0aC11bml0KSB7XG4gICAgICAgICAgICAkdW5pdDogbWFwLWdldCgkbGluZS1oZWlnaHQtaGFybW9ueS1zZXR0aW5ncywgZmFsbGJhY2std2lkdGgtdW5pdCk7XG4gICAgICAgIH0gQGVsc2Uge1xuICAgICAgICAgICAgJHVuaXQ6ICdweCc7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBAaWYgbm90ICgkdW5pdCA9PSAncHgnIG9yICR1bml0ID09ICdlbScgb3IgJHVuaXQgPT0gJ3JlbScpIHtcbiAgICAgICAgQGVycm9yIFwiVW5zdXBwb3J0ZWQgdW5pdCB1c2VkOiAjeyR1bml0fS5cIjtcbiAgICB9XG5cbiAgICBAaWYgKCR1bml0ID09IGVtIG9yICR1bml0ID09IHJlbSkge1xuICAgICAgICAkbnVtYmVyOiAkbnVtYmVyICogJGZvbnQtc2l6ZS1yb290O1xuICAgIH1cbiAgICBAcmV0dXJuICRudW1iZXI7XG59XG5cbi8qKlxuICogVGhlIGxpbmUgaGVpZ2h0IGlzIGNhbGN1bGF0ZWQgdG8gbWF0Y2ggcmVsYXRpdmUgd2lkdGhzIHRvIGZvbnQgc2l6ZXMuXG4gKlxuICogVGhlIGZvcm11bGEgaXMgZnJvbSBodHRwOi8qd3d3LnBlYXJzb25pZmllZC5jb20vMjAxMS8xMi9nb2xkZW4tcmF0aW8tdHlwb2dyYXBoeS5waHBcbiAqIFJBVElPIC0gMSAvICggMiAqIFJBVElPICkgKiAoIDEgLSBXSURUSCAvICggKCBGT05ULVNJWkUgKiBSQVRJTyApIF4gMiApIClcbiAqIFRoZSBmb3JtdWxhIGhhcyBiZWVuIHNpbXBsaWZpZWQgYXMgc3VjaDpcbiAqIFJBVElPIC0gKCAtIFdJRFRIIC8gKCBGT05ULVNJWkUgKiBSQVRJTyBeIDIgKyAxICkgKSAvICggMiAqIFJBVElPICk7XG4gKlxuICogQHBhcmFtIHtzdHJpbmcvbnVtYmVyfSAkZm9udC1zaXplICAgICAgICAgICAgRm9udCBzaXplIHRvIGNhbGN1bGF0ZSBieVxuICogQHBhcmFtIHtzdHJpbmcvbnVtYmVyfSAkd2lkdGggICAgICAgICAgICAgICAgV2lkdGggdG8gY2FsY3VsYXRlIGJ5LlxuICogQHBhcmFtIHtudW1iZXJ9ICAgICAgICAkcmFkaW8gICAgICAgICAgICAgICAgSGFybW9uaWMgcmF0aW8gdXNlZCBvbiBzaXRlXG4gKiBAcGFyYW0ge3N0cmluZy9udW1iZXJ9ICRmb250LXNpemUtcm9vdCAgICAgICBQWCBzaXplIGFwcGxpZWQgdG8gYmFzZVxuICovXG5AZnVuY3Rpb24gbGluZS1oZWlnaHQtaGFybW9ueSgkZm9udC1zaXplLCAkd2lkdGgsICRyYXRpbzogbnVsbCwgJGZvbnQtc2l6ZS1yb290OiBudWxsKSB7XG4gICAgJHJhdGlvOiBsaW5lLWhlaWdodC1oYXJtb255LWdldFJhdGlvKCRyYXRpbyk7XG4gICAgJGZvbnQtc2l6ZS1yb290OiBzdHJpcC11bml0KGxpbmUtaGVpZ2h0LWhhcm1vbnktZ2V0Rm9udFNpemVSb290KCRmb250LXNpemUtcm9vdCkpO1xuXG4gICAgJGZvbnQtc2l6ZTogbGluZS1oZWlnaHQtaGFybW9ueS1jb252ZXJ0LXRvLXB4KCRmb250LXNpemUsICRmb250LXNpemUtcm9vdCwgJ2ZvbnQnKTtcbiAgICAkd2lkdGg6IGxpbmUtaGVpZ2h0LWhhcm1vbnktY29udmVydC10by1weCgkd2lkdGgsICRmb250LXNpemUtcm9vdCwgJ3dpZHRoJyk7XG5cbiAgICBAcmV0dXJuICRyYXRpbyAtICggLSAkd2lkdGggLyBwb3coJGZvbnQtc2l6ZSAqICRyYXRpbywgMikgKyAxKSAvICggMiAqICRyYXRpbyApO1xufVxuIiwiLy8gQmFzZWQgb246XG4vLyBub3JtYWxpemUuY3NzIHYzLjAuMyB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3Ncbi8vXG4vLyBIYXZlIGZ1bi5cblxuXG4vLyBTZXR0aW5nc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gQ2hhbmdlIHZhbHVlIGlmIHlvdSB3YW50IHRvIHN1cHBvcnQgZWFybGllciB2ZXJzaW9ucyBvZiBJbnRlcm5ldCBFeHBsb3Jlci5cbiRvbGRlc3Qtc3VwcG9ydGVkLWllLXZlcnNpb246IDkgIWRlZmF1bHQ7XG5cbi8vXG4vLyBDaGFuZ2UgdmFsdWUgaWYgeW91IHdhbnQgdG8gY29udHJvbGwgeW91ciBvd24gbWFyZ2lucy5cbiRsb2JvdG9taXplZC1vd2w6IGZhbHNlICFkZWZhdWx0O1xuXG4vLyBCYXNlXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuLy8gMi4gUHJldmVudCBpT1MgYW5kIElFIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgZGV2aWNlIG9yaWVudGF0aW9uIGNoYW5nZSxcbi8vICAgIHdpdGhvdXQgZGlzYWJsaW5nIHVzZXIgem9vbS5cbi8vIDMuIENvcnJlY3RzIHRleHQgcmVzaXppbmcgb2RkbHkgaW4gSUUgNi83IHdoZW4gYm9keSBgZm9udC1zaXplYCBpcyBzZXQgdXNpbmdcbi8vICBgZW1gIHVuaXRzLlxuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8vIDFcbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8vIDJcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvLyAyXG4gIEBpZiAkb2xkZXN0LXN1cHBvcnRlZC1pZS12ZXJzaW9uIDwgOCB7XG4gICAgKmZvbnQtc2l6ZTogMTAwJTsgLy8gM1xuICB9XG59XG5cbi8vIFJlbW92ZSBkZWZhdWx0IG1hcmdpbi5cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cbi8vIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4vLyBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuLy8gYW5kIEZpcmVmb3guXG4vLyBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLy8gMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbi8vIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cblxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgQGlmICRvbGRlc3Qtc3VwcG9ydGVkLWllLXZlcnNpb24gPCAxMCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvLyAxXG4gIH1cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvLyAyXG4gIEBpZiAkb2xkZXN0LXN1cHBvcnRlZC1pZS12ZXJzaW9uIDwgOCB7XG4gICAgKmRpc3BsYXk6IGlubGluZTtcbiAgICAqem9vbTogMTtcbiAgfVxufVxuXG4vLyBQcmV2ZW50cyBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbi8vIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLy8gQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuLy8gSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuXG5AaWYgJG9sZGVzdC1zdXBwb3J0ZWQtaWUtdmVyc2lvbiA8IDExIHtcbiAgW2hpZGRlbl0ge1xuICAgIEBleHRlbmQgJW5vcm1hbGl6ZS1oaWRkZW4tZXh0ZW5kZXI7XG4gIH1cbn1cblxuJW5vcm1hbGl6ZS1oaWRkZW4tZXh0ZW5kZXIsXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8vIExpbmtzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cblxuQGlmICRvbGRlc3Qtc3VwcG9ydGVkLWllLXZlcnNpb24gPCAxMSB7XG4gIGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICB9XG59XG5cbi8vIEltcHJvdmUgcmVhZGFiaWxpdHkgd2hlbiBmb2N1c2VkIGFuZCBhbHNvIG1vdXNlIGhvdmVyZWQgaW4gYWxsIGJyb3dzZXJzLlxuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lOiAwO1xufTtcblxuLy8gVGV4dC1sZXZlbCBzZW1hbnRpY3Ncbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xufVxuXG4vLyBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLy8gU2V0IDEgdW5pdCBvZiB2ZXJ0aWNhbCByaHl0aG0gb24gdGhlIHRvcCBhbmQgYm90dG9tIG1hcmdpbi5cblxuQGlmICRsb2JvdG9taXplZC1vd2wgPT0gZmFsc2Uge1xuICBAaWYgJG9sZGVzdC1zdXBwb3J0ZWQtaWUtdmVyc2lvbiA8IDgge1xuICAgIGJsb2NrcXVvdGUge1xuICAgICAgbWFyZ2luOiAxZW0gNDBweDtcbiAgICB9XG4gIH1cbn1cblxuLy8gQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8vIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbi8vIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgQGlmICRsb2JvdG9taXplZC1vd2wgPT0gZmFsc2Uge1xuICAgIG1hcmdpbjogLjY3ZW0gMDtcbiAgfVxufVxuXG5AaWYgJG9sZGVzdC1zdXBwb3J0ZWQtaWUtdmVyc2lvbiA8IDgge1xuICBoMiB7XG4gICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICBAaWYgJGxvYm90b21pemVkLW93bCA9PSBmYWxzZSB7XG4gICAgICBtYXJnaW46IC44M2VtIDA7XG4gICAgfVxuICB9XG5cbiAgaDMge1xuICAgIGZvbnQtc2l6ZTogMS4xN2VtO1xuICAgIEBpZiAkbG9ib3RvbWl6ZWQtb3dsID09IGZhbHNlIHtcbiAgICAgIG1hcmdpbjogMWVtIDA7XG4gICAgfVxuICB9XG5cbiAgaDQge1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIEBpZiAkbG9ib3RvbWl6ZWQtb3dsID09IGZhbHNlIHtcbiAgICAgIG1hcmdpbjogMS4zM2VtIDA7XG4gICAgfVxuICB9XG5cbiAgaDUge1xuICAgIGZvbnQtc2l6ZTogLjgzZW07XG4gICAgQGlmICRsb2JvdG9taXplZC1vd2wgPT0gZmFsc2Uge1xuICAgICAgbWFyZ2luOiAxLjY3ZW0gMDtcbiAgICB9XG4gIH1cblxuICBoNiB7XG4gICAgZm9udC1zaXplOiAuNjdlbTtcbiAgICBAaWYgJGxvYm90b21pemVkLW93bCA9PSBmYWxzZSB7XG4gICAgICBtYXJnaW46IDIuMzNlbSAwO1xuICAgIH1cbiAgfVxufVxuXG4vLyBBZGRyZXNzZXMgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG5cbkBpZiAkb2xkZXN0LXN1cHBvcnRlZC1pZS12ZXJzaW9uIDwgMTAge1xuICBtYXJrIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmYwO1xuICAgIGNvbG9yOiAjMDAwO1xuICB9XG59XG5cbi8vIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vLyBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gIHRvcDogLS41ZW07XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLS4yNWVtO1xufVxuXG5AaWYgJG9sZGVzdC1zdXBwb3J0ZWQtaWUtdmVyc2lvbiA8IDgge1xuICAvLyBMaXN0c1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIC8vIEFkZHJlc3NlcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRSA2LzcuXG4gIC8vXG5cbiAgQGlmICRsb2JvdG9taXplZC1vd2wgPT0gZmFsc2Uge1xuICAgIGRsLFxuICAgIG1lbnUsXG4gICAgb2wsXG4gICAgdWwge1xuICAgICAgbWFyZ2luOiAxZW0gMDtcbiAgICB9XG5cbiAgICBkZCB7XG4gICAgICBtYXJnaW46IDAgMCAwIDQwcHg7XG4gICAgfVxuICB9XG5cbiAgLy8gQWRkcmVzc2VzIHBhZGRpbmdzIHNldCBkaWZmZXJlbnRseSBpbiBJRSA2LzcuXG4gIC8vXG5cbiAgbWVudSxcbiAgb2wsXG4gIHVsIHtcbiAgICBwYWRkaW5nOiAwIDAgMCA0MHB4O1xuICB9XG5cbiAgLy8gQ29ycmVjdHMgbGlzdCBpbWFnZXMgaGFuZGxlZCBpbmNvcnJlY3RseSBpbiBJRSA3LlxuICAvL1xuXG4gIG5hdiB1bCxcbiAgbmF2IG9sIHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIGxpc3Qtc3R5bGUtaW1hZ2U6IG5vbmU7XG4gIH1cbn1cblxuLy8gRW1iZWRkZWQgY29udGVudFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gMS4gUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXG4vLyAyLiBJbXByb3ZlcyBpbWFnZSBxdWFsaXR5IHdoZW4gc2NhbGVkIGluIElFIDcuXG5cbmltZyB7XG4gIGJvcmRlcjogMDtcbiAgQGlmICRvbGRlc3Qtc3VwcG9ydGVkLWllLXZlcnNpb24gPCA4IHtcbiAgICAqLW1zLWludGVycG9sYXRpb24tbW9kZTogYmljdWJpYzsgLyogMiAqL1xuICB9XG59XG5cbi8vIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8vIEdyb3VwaW5nIGNvbnRlbnRcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuXG5AaWYgJGxvYm90b21pemVkLW93bCA9PSBmYWxzZSB7XG4gIGZpZ3VyZSB7XG4gICAgbWFyZ2luOiAxZW0gNDBweDtcbiAgfVxufVxuXG4vLyBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDtcbn1cblxuLy8gQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG5cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vLyBBZGRyZXNzIG9kZCBgZW1gLXVuaXQgZm9udCBzaXplIHJlbmRlcmluZyBpbiBhbGwgYnJvd3NlcnMuXG4vLyBDb3JyZWN0IGZvbnQgZmFtaWx5IHNldCBvZGRseSBpbiBJRSA2LCBTYWZhcmkgNC81LCBhbmQgQ2hyb21lLlxuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgQGlmICRvbGRlc3Qtc3VwcG9ydGVkLWllLXZlcnNpb24gPCA3IHtcbiAgICBfZm9udC1mYW1pbHk6ICdjb3VyaWVyIG5ldycsIG1vbm9zcGFjZTtcbiAgfVxuICBmb250LXNpemU6IDFlbTtcbn1cblxuLy8gRm9ybXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4vLyBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG5cbi8vIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cbi8vICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuLy8gMi4gQ29ycmVjdCBmb250IHByb3BlcnRpZXMgbm90IGJlaW5nIGluaGVyaXRlZC5cbi8vIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuLy8gNC4gSW1wcm92ZXMgYXBwZWFyYW5jZSBhbmQgY29uc2lzdGVuY3kgaW4gYWxsIGJyb3dzZXJzLlxuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDsgLy8gMVxuICBmb250OiBpbmhlcml0OyAvLyAyXG4gIEBpZiAkbG9ib3RvbWl6ZWQtb3dsID09IGZhbHNlIHtcbiAgICBtYXJnaW46IDA7IC8vIDNcbiAgfVxuICBAaWYgJG9sZGVzdC1zdXBwb3J0ZWQtaWUtdmVyc2lvbiA8IDgge1xuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLy8gM1xuICAgICp2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyAvLyAzXG4gIH1cbn1cblxuLy8gQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEuXG5cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vLyBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4vLyBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuLy8gQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbi8vIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cblxuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8vIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4vLyAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbi8vIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbi8vIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4vLyAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4vLyA0LiBSZW1vdmVzIGlubmVyIHNwYWNpbmcgaW4gSUUgNyB3aXRob3V0IGFmZmVjdGluZyBub3JtYWwgdGV4dCBpbnB1dHMuXG4vLyAgICBLbm93biBpc3N1ZTogaW5uZXIgc3BhY2luZyByZW1haW5zIGluIElFIDYuXG5cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgLy8gMVxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvLyAyXG4gIGN1cnNvcjogcG9pbnRlcjsgLy8gM1xuICBAaWYgJG9sZGVzdC1zdXBwb3J0ZWQtaWUtdmVyc2lvbiA8IDgge1xuICAgICpvdmVyZmxvdzogdmlzaWJsZTsgLy8gNFxuICB9XG59XG5cbi8vIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG5cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLy8gUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLy8gQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuLy8gdGhlIFVBIHN0eWxlc2hlZXQuXG5cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLy8gSXQncyByZWNvbW1lbmRlZCB0aGF0IHlvdSBkb24ndCBhdHRlbXB0IHRvIHN0eWxlIHRoZXNlIGVsZW1lbnRzLlxuLy8gRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbi8vXG4vLyAxLiBBZGRyZXNzIGJveCBzaXppbmcgc2V0IHRvIGBjb250ZW50LWJveGAgaW4gSUUgOC85LzEwLlxuLy8gMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbi8vICAgIEtub3duIGlzc3VlOiBleGNlc3MgcGFkZGluZyByZW1haW5zIGluIElFIDYuXG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8vIDFcbiAgcGFkZGluZzogMDsgLy8gMlxuICBAaWYgJG9sZGVzdC1zdXBwb3J0ZWQtaWUtdmVyc2lvbiA8IDgge1xuICAgICpoZWlnaHQ6IDEzcHg7IC8vIDNcbiAgICAqd2lkdGg6IDEzcHg7IC8vIDNcbiAgfVxufVxuXG4vLyBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuLy8gYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbi8vIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cblxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8vIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuLy8gMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgYW5kIENocm9tZS5cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvLyAxXG4gIC8vIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvLyAyXG59XG5cbi8vIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuLy8gU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuLy8gcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLy8gRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIEBpZiAkbG9ib3RvbWl6ZWQtb3dsID09IGZhbHNlIHtcbiAgICBtYXJnaW46IDAgMnB4O1xuICB9XG4gIHBhZGRpbmc6IC4zNWVtIC42MjVlbSAuNzVlbTtcbn1cblxuLy8gMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuLy8gMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuLy8gMy4gQ29ycmVjdHMgdGV4dCBub3Qgd3JhcHBpbmcgaW4gRmlyZWZveCAzLlxuLy8gNC4gQ29ycmVjdHMgYWxpZ25tZW50IGRpc3BsYXllZCBvZGRseSBpbiBJRSA2LzcuXG5cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDsgLy8gMVxuICBwYWRkaW5nOiAwOyAvLyAyXG4gIEBpZiAkb2xkZXN0LXN1cHBvcnRlZC1pZS12ZXJzaW9uIDwgOCB7XG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLy8gM1xuICAgICptYXJnaW4tbGVmdDogLTdweDsgLy8gNFxuICB9XG59XG5cbi8vIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA4LzkvMTAvMTEuXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8vXG4vLyBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4vLyBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbi8vXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8vIFRhYmxlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDtcbn1cbiIsIi8qKlxuICogUmFpc2UgbnVtYmVyIHRvIHRoZSBudGggcG93ZXJcbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gJGJhc2UgICAgICBUaGUgYmFzZSBudW1iZXJcbiAqIEBwYXJhbSB7bnVtYmVyfSAkZXhwb25lbnRzIFRoZSBleHBvbmVudCB0byB3aGljaCB0byByYWlzZSAkYmFzZVxuICovXG4vKipcbiAqIFJlbW92ZSB1bml0IGZyb20gbnVtYmVyc1xuICovXG4vKipcbiAqIFRoZSBsaW5lIGFsZ29yeXRobSBpcyBiYXNlZCBvbiBwaXhlbCBzaXplLCBzbyB3ZSdyZSBjb252ZXJ0aW5nIHByZXN1bWVkIGZvciB1c2VcbiAqXG4gKiBAcGFyYW0ge3N0cmluZy9udW1iZXJ9ICRudW1iZXIgICAgICAgICAgICAgTnVtYmVyIHRvIGNvbnZlcnQgdG8gdW5pdGxlc3MgcHhcbiAqIEBwYXJhbSB7c3RyaW5nL251bWJlcn0gJGZvbnQtc2l6ZS1yb290ICAgICBOdW1iZXIgZm9yIFJFTSBjb252ZXJzaW9uLlxuICogQHBhcmFtIHtzdHJpbmd9ICAgICAgICAkZm9udC1vci13aWR0aCAgICAgIERldGVybWluZXMgd2hpY2ggZGVmYXVsdCB0byBmYWxsIGJhY2sgdG9cbiAqL1xuLyoqXG4gKiBUaGUgbGluZSBoZWlnaHQgaXMgY2FsY3VsYXRlZCB0byBtYXRjaCByZWxhdGl2ZSB3aWR0aHMgdG8gZm9udCBzaXplcy5cbiAqXG4gKiBUaGUgZm9ybXVsYSBpcyBmcm9tIGh0dHA6Lyp3d3cucGVhcnNvbmlmaWVkLmNvbS8yMDExLzEyL2dvbGRlbi1yYXRpby10eXBvZ3JhcGh5LnBocFxuICogUkFUSU8gLSAxIC8gKCAyICogUkFUSU8gKSAqICggMSAtIFdJRFRIIC8gKCAoIEZPTlQtU0laRSAqIFJBVElPICkgXiAyICkgKVxuICogVGhlIGZvcm11bGEgaGFzIGJlZW4gc2ltcGxpZmllZCBhcyBzdWNoOlxuICogUkFUSU8gLSAoIC0gV0lEVEggLyAoIEZPTlQtU0laRSAqIFJBVElPIF4gMiArIDEgKSApIC8gKCAyICogUkFUSU8gKTtcbiAqXG4gKiBAcGFyYW0ge3N0cmluZy9udW1iZXJ9ICRmb250LXNpemUgICAgICAgICAgICBGb250IHNpemUgdG8gY2FsY3VsYXRlIGJ5XG4gKiBAcGFyYW0ge3N0cmluZy9udW1iZXJ9ICR3aWR0aCAgICAgICAgICAgICAgICBXaWR0aCB0byBjYWxjdWxhdGUgYnkuXG4gKiBAcGFyYW0ge251bWJlcn0gICAgICAgICRyYWRpbyAgICAgICAgICAgICAgICBIYXJtb25pYyByYXRpbyB1c2VkIG9uIHNpdGVcbiAqIEBwYXJhbSB7c3RyaW5nL251bWJlcn0gJGZvbnQtc2l6ZS1yb290ICAgICAgIFBYIHNpemUgYXBwbGllZCB0byBiYXNlXG4gKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgfVxuXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG5baGlkZGVuXSxcbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDsgfVxuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7IH1cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtOyB9XG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3VwIHtcbiAgdG9wOiAtLjVlbTsgfVxuXG5zdWIge1xuICBib3R0b206IC0uMjVlbTsgfVxuXG5pbWcge1xuICBib3JkZXI6IDA7IH1cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDsgfVxuXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07IH1cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQ6IGluaGVyaXQ7IH1cblxuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLFxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0OyB9XG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsgfVxuXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwYWRkaW5nOiAwOyB9XG5cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgfVxuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIHBhZGRpbmc6IC4zNWVtIC42MjVlbSAuNzVlbTsgfVxuXG5sZWdlbmQge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7IH1cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuKixcbio6YmVmb3JlLFxuKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuOjpzZWxlY3Rpb24ge1xuICBjb2xvcjogcmdiYSgyNDUsIDI0MCwgMjM3LCAwLjg3KTtcbiAgYmFja2dyb3VuZDogIzE0NmE2YzsgfVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiAxOHB4OyB9XG5cbmJvZHkge1xuICBmb250OiA0MDAgMWVtIC8gMS41ICdMYXRvJywgJ0hlbHZldGljYSBOZXVlJywgSGVsdmV0aWNhLCBBcmlhbCwgJ0x1Y2lkYSBHcmFuZGUnLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogIzMyMmMyODtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMzUpOyB9XG5cbnAsXG5saSxcbmlucHV0LFxudGV4dGFyZWEsXG5zZWxlY3QsXG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1rZXJuaW5nOiBub3JtYWw7XG4gIGZvbnQtdmFyaWFudC1saWdhdHVyZXM6IG5vcm1hbDsgfVxuXG4uYmlsbGJvYXJkX190aXRsZSxcbi5tZXRhYmxvY2tfX3RpdGxlLFxuLmNhcmRfX3RpdGxlIHtcbiAgZm9udC1zaXplOiAxLjQxNDIxcmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMS4zOTg0NjtcbiAgbGV0dGVyLXNwYWNpbmc6IC0uMDZlbTtcbiAgZm9udC12YXJpYW50LWxpZ2F0dXJlczogY29tbW9uLWxpZ2F0dXJlcztcbiAgZm9udC1rZXJuaW5nOiBub3JtYWw7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gICAgLmJpbGxib2FyZF9fdGl0bGUsXG4gICAgLm1ldGFibG9ja19fdGl0bGUsXG4gICAgLmNhcmRfX3RpdGxlIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ1Mzc5OyB9IH1cblxuLmJpbGxib2FyZF9fdGl0bGUge1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzA4cHgpIHtcbiAgICAuYmlsbGJvYXJkX190aXRsZSB7XG4gICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICBsaW5lLWhlaWdodDogMS4zODE0MTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA4MzFweCkge1xuICAgIC5iaWxsYm9hcmRfX3RpdGxlIHtcbiAgICAgIGZvbnQtc2l6ZTogMi44Mjg0M3JlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjM1MjM7XG4gICAgICBsZXR0ZXItc3BhY2luZzogLS4wM2VtOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwOTZweCkge1xuICAgIC5iaWxsYm9hcmRfX3RpdGxlIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjM2NzU3OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gIC5tZXRhYmxvY2tfX3RpdGxlIHtcbiAgICBsaW5lLWhlaWdodDogMS40NTM3OTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4MzFweCkge1xuICAubWV0YWJsb2NrX190aXRsZSB7XG4gICAgbGluZS1oZWlnaHQ6IDEuNDgyMTU7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTA5NnB4KSB7XG4gIC5tZXRhYmxvY2tfX3RpdGxlIHtcbiAgICBsaW5lLWhlaWdodDogMS41NDMyNDsgfSB9XG5cbi5mb290ZXIsIC5oZWFkZXIsIC5jYXJkX19jdGEsIC5jYXJkX19tZXRhLS1jb3VudHJ5LFxuLmNhcmRfX21ldGEtLXRhZywgLm5hdl9fYWN0aW9uLFxuLm5hdl9fZm9ybSwgLm5hdi0taGFtYnVyZ2VyLCAuZm9ybV9fY3RhLCAuYmlsbGJvYXJkIHtcbiAgY29sb3I6IHJnYmEoMjQ1LCAyNDAsIDIzNywgMC44Nyk7IH1cblxuLmZvcm1fX2xhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuXG4uY2FyZF9fbWV0YS0tY291bnRyeSxcbi5jYXJkX19tZXRhLS10YWcge1xuICBmb250LXNpemU6IDAuNzA3MTFyZW07IH1cblxuKiB7XG4gIG1hcmdpbjogMDsgfVxuICAqICsgKiB7XG4gICAgbWFyZ2luLXRvcDogMS40MTQyMWVtOyB9XG5cbmhlYWRlciwgLnNvY2lhbCA+ICosIC5saXN0LS1kZWZhdWx0ID4gKiwgLmxpc3QtLXVuc3R5bGVkID4gKixcbi5jYXJkX19tZXRhLS1jb3VudHJ5LFxuLmNhcmRfX21ldGEtLXRhZyxcbi5zd2l0Y2ggfiBsYWJlbDpmaXJzdC1vZi10eXBlLFxuLmZvb3RlciB7XG4gIG1hcmdpbi10b3A6IDA7IH1cblxuLmJyb3dzZS13cmFwLFxuLndyYXAge1xuICBtYXgtd2lkdGg6IDEyMTVweDtcbiAgZmxleDogMCA4Ni4yOTJ2dzsgfVxuXG5cbi5ncmlkLCAuZ3JpZC0tY29sdW1uLCAuZ3JpZC0tcm93LCAuZ3JpZC0tY2VudGVyLCBib2R5LCAuY2FyZF9fY3RhLCAuY2FyZF9fbWV0YS0tY291bnRyeSxcbi5jYXJkX19tZXRhLS10YWcsIC5uYXYsIC5uYXZfX2Ryb3Bkb3duLCAubmF2X19mb3JtLCAuaGVhZGVyLCAuYmlsbGJvYXJkLCAubWV0YWJsb2NrIHtcbiAgZGlzcGxheTogZmxleDsgfVxuXG4uaGVhZGVyLCAuYmlsbGJvYXJkIHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cblxuXG4uZ3JpZCB7XG4gIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzA4cHgpIHtcbiAgICBcbiAgICAuZ3JpZCB7XG4gICAgICBmbGV4LWZsb3c6IHJvdyB3cmFwOyB9IH1cblxuLmdyaWQtLWNvbHVtbiB7XG4gIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLmdyaWQtLXJvdyB7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLmdyaWQtLXNwYWNlLWFyb3VuZCB7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kOyB9XG5cbi5ncmlkLS1jZW50ZXIge1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBmbGV4OiAxIDEwMHZ3O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuXG5ib2R5IHtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cblxuLmNhcmRfX2N0YSwgLmNhcmRfX21ldGEtLWNvdW50cnksXG4uY2FyZF9fbWV0YS0tdGFnIHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLmdyaWQtLWluaXRpYWwge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQ7IH1cblxuLmdyaWQtLWVuZCB7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIGFsaWduLWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAuZ3JpZC0tY2VudGVyLS12IHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gIC5ncmlkX19ibG9jayB7XG4gICAgbWFyZ2luLXRvcDogMDsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAuYmxvY2stLWZ1bGxzcGFuLS1sYXJnZSB7XG4gICAgZmxleDogMTAwdnc7IH0gfVxuXG4uZ3JpZF9fd2lkdGgtLTEge1xuICBmbGV4OiAwIGNhbGMoMzMuMzMzMzMlIC0gMnJlbSk7IH1cblxuLmdyaWRfX3dpZHRoLS0yIHtcbiAgZmxleDogMCBjYWxjKDY2LjY2NjY3JSAtIDJyZW0pOyB9XG5cbi5ncmlkX193aWR0aC0tMyB7XG4gIGZsZXg6IDAgY2FsYygxMDAlIC0gMnJlbSk7IH1cblxuLmdyaWRfX2Jsb2NrLS0xIHtcbiAgZmxleDogMS40MTQyMTsgfVxuXG4uZ3JpZF9fYmxvY2stLTIge1xuICBmbGV4OiAyOyB9XG5cbi5ncmlkX19ibG9jay0tMyB7XG4gIGZsZXg6IDIuODI4NDM7IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gIC5wcmlvcml0eS0tbGFzdCB7XG4gICAgb3JkZXI6IDEwOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gIC5wcmlvcml0eS0taW1wb3J0YW50IHtcbiAgICBvcmRlcjogLTEwOyB9IH1cblxuLm5hdi0taGFtYnVyZ2VyLCAuZm9ybV9fY3RhLCAuZm9ybV9faW5wdXQsIC5uYXZfX2lucHV0LCAubGluaywgLmNhcmRfX2N0YSwgLmNhcmRfX21ldGEtLWNvdW50cnksXG4uY2FyZF9fbWV0YS0tdGFnLCAubmF2X19hY3Rpb24sXG4ubmF2X19mb3JtLCAuY2FyZF9fYWN0aW9uIHtcbiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyBlYXNlLWluLW91dCAxNTBtcztcbiAgYm94LXNoYWRvdzogMCAwIDFyZW0gMS40MTQyMXJlbSB0cmFuc3BhcmVudCwgaW5zZXQgMCAwIDFyZW0gMS40MTQyMXJlbSB0cmFuc3BhcmVudDsgfVxuXG4ubmF2LS1oYW1idXJnZXI6Zm9jdXMsIC5mb3JtX19jdGE6Zm9jdXMsIC5mb3JtX19pbnB1dDpmb2N1cywgLm5hdl9faW5wdXQ6Zm9jdXMsIC5saW5rOmZvY3VzLCAuY2FyZF9fY3RhOmZvY3VzLCAuY2FyZF9fbWV0YS0tY291bnRyeTpmb2N1cyxcbi5jYXJkX19tZXRhLS10YWc6Zm9jdXMsIC5uYXZfX2FjdGlvbjpmb2N1cyxcbi5uYXZfX2Zvcm06Zm9jdXMsIC5jYXJkX19hY3Rpb246Zm9jdXMge1xuICBib3JkZXItY29sb3I6ICMxNDZhNmM7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJveC1zaGFkb3c6IDAgMCAycmVtICM0OTk2NzEsIGluc2V0IDAgMCAwLjE3Njc4cmVtICM0OTk2NzE7IH1cblxuLm5hdi0taGFtYnVyZ2VyLCAuZm9ybV9fY3RhLCAuZm9ybV9faW5wdXQsIC5uYXZfX2lucHV0IHtcbiAgYm9yZGVyLXJhZGl1czogMC43MDcxMXJlbTsgfVxuXG4uZm9ybV9faW5wdXQsIC5uYXZfX2lucHV0IHtcbiAgcGFkZGluZzogMC4zNTM1NXJlbSAwLjVyZW07IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gIC5icm93c2Utd3JhcCB7XG4gICAgbWF4LXdpZHRoOiBjYWxjKDEyMTVweCArICgxLjQxNDIxcmVtICogMikpO1xuICAgIGZsZXg6IDAgY2FsYyg4Ni4yOTJ2dyArICgxLjQxNDIxcmVtICogMikpOyB9IH1cblxuLmNhcmQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW46IDEuNDE0MjFyZW0gMDtcbiAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICBhbGlnbi1jb250ZW50OiBmbGV4LXN0YXJ0OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAgIC5jYXJkIHtcbiAgICAgIG1hcmdpbjogMS40MTQyMXJlbTtcbiAgICAgIGZsZXg6IDEgY2FsYygzMy4zMzMzMyUgLSAoMS40MTQyMXJlbSAqIDIpKTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAuY2FyZDpudGgtb2YtdHlwZSg1bisxKSB7XG4gICAgZmxleDogMSBjYWxjKDY2LjY2NjY3JSAtICgxLjQxNDIxcmVtICogMikpOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gIC5jYXJkOm50aC1vZi10eXBlKDEwbiswKSB7XG4gICAgZmxleDogMSBjYWxjKDEwMCUgLSAoMS40MTQyMXJlbSAqIDIpKTsgfSB9XG5cbi5jYXJkX19hY3Rpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4OiAxO1xuICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwOyB9XG5cbi5jYXJkX19pbWdibG9jayB7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5jYXJkX19hYm91dCB7XG4gIGZsZXg6IDE7IH1cblxuLmNhcmRfX2Zvb3RlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwOyB9XG5cbi5jYXJkX19jdGEge1xuICBoZWlnaHQ6IDIuODI4NDNyZW07XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJvcmRlci1yYWRpdXM6IDIuODI4NDNyZW07XG4gIGJhY2tncm91bmQ6ICM5ZjJlMzI7IH1cblxuLmNhcmRfX21ldGEge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG5cbi5jYXJkX19tZXRhLS1jb3VudHJ5LFxuLmNhcmRfX21ldGEtLXRhZyB7XG4gIGhlaWdodDogMS40MTQyMXJlbTtcbiAgbWFyZ2luLXJpZ2h0OiAwLjE3Njc4cmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjE3Njc4cmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBib3JkZXItcmFkaXVzOiAyLjgyODQzcmVtO1xuICBmbGV4OiAxIDIuODI4NDNyZW07IH1cblxuLmNhcmRfX21ldGEtLXRhZyB7XG4gIGJhY2tncm91bmQ6ICMxNDZhNmM7IH1cblxuLmNhcmRfX21ldGEtLWNvdW50cnkge1xuICBiYWNrZ3JvdW5kOiAjNDk5NjcxOyB9XG5cbi5zd2l0Y2gge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIG9wYWNpdHk6IDA7IH1cblxuLm1lbnUtbGFiZWwge1xuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzA4cHgpIHtcbiAgICAubWVudS1sYWJlbCB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLnN3aXRjaDpjaGVja2VkIH4gLm5hdi0taGFtYnVyZ2VyIC5oYW1idXJnZXItaWNvbiB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMCk7IH1cblxuLnN3aXRjaDpjaGVja2VkIH4gLm5hdi0taGFtYnVyZ2VyIC5oYW1idXJnZXI6OmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwLjRlbSkgcm90YXRlKDkwZGVnKTsgfVxuXG4uc3dpdGNoOmNoZWNrZWQgfiAubmF2LS1oYW1idXJnZXIgLmhhbWJ1cmdlcjo6YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTAuNGVtKSByb3RhdGUoMTgwZGVnKTsgfVxuXG4uaGFtYnVyZ2VyIHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxZW07XG4gIGhlaWdodDogMWVtO1xuICBwYWRkaW5nOiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAyMDBtcyBlYXNlLWluLW91dDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgYm9yZGVyOiAwIG5vbmU7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OyB9XG5cbi5oYW1idXJnZXI6OmJlZm9yZSxcbi5oYW1idXJnZXI6OmFmdGVyIHtcbiAgY29udGVudDogJyc7IH1cblxuLmhhbWJ1cmdlcjo6YmVmb3JlLFxuLmhhbWJ1cmdlcjo6YWZ0ZXIsXG4uaGFtYnVyZ2VyLWljb24ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogLjFlbTtcbiAgbWFyZ2luOiAwIDAgLjI5ZW07XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAyMDBtcyBjdWJpYy1iZXppZXIoMCwgMS4zLCAxLCAxLjIpO1xuICBib3JkZXItcmFkaXVzOiAuNWVtO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI0NSwgMjQwLCAyMzcsIDAuODcpOyB9XG5cbi5uYXYge1xuICB0b3A6IC0xMHJlbTtcbiAgd2lkdGg6IDMwdnc7XG4gIGhlaWdodDogMDtcbiAgdHJhbnNpdGlvbjogYWxsIDQwMG1zIGN1YmljLWJlemllcigwLCAxLjMsIDEsIDEuMik7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgb3BhY2l0eTogMDtcbiAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwOyB9XG5cbi5zd2l0Y2g6Y2hlY2tlZCB+IC5uYXYge1xuICB0b3A6IDA7XG4gIHdpZHRoOiAzMHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xuICBwYWRkaW5nOiAxLjQxNDIxcmVtO1xuICBvcGFjaXR5OiAxOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAubmF2LFxuICAuc3dpdGNoOmNoZWNrZWQgfiAubmF2IHtcbiAgICB0b3A6IDA7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogODZ2dztcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IGluaGVyaXQ7XG4gICAgdHJhbnNpdGlvbjogbm9uZTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7IH0gfVxuXG4uc3dpdGNoOm5vdCg6Y2hlY2tlZCkgfiAubmF2IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi5uYXYtLWhhbWJ1cmdlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAxdmg7XG4gIHJpZ2h0OiA3dnc7XG4gIGJhY2tncm91bmQ6IHJnYmEoNywgNywgNiwgMC45KTsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzA4cHgpIHtcbiAgLm5hdl9fYWN0aW9uLFxuICAubmF2X19mb3JtIHtcbiAgICBtYXJnaW46IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9IH1cblxuLm5hdl9fYWN0aW9uIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAgIC5uYXZfX2FjdGlvbiB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIGZsZXg6IDE7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzA4cHgpIHtcbiAgLm5hdl9fYWN0aW9uLS1oYXMtZHJvcGRvd24ge1xuICAgIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XG4gICAgZmxleDogMTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAubmF2X19hY3Rpb24tLWRyb3Bkb3duLWFjdGlvbiB7XG4gICAgZmxleDogMTsgfSB9XG5cbi5uYXZfX2Ryb3Bkb3duIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgbWFyZ2luLXRvcDogMS40MTQyMXJlbTtcbiAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAgIC5uYXZfX2Ryb3Bkb3duIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmc6IDJyZW07IH0gfVxuXG4uc3dpdGNoOmNoZWNrZWQgfiAubmF2X19kcm9wZG93biB7XG4gIGRpc3BsYXk6IGZsZXg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gICAgLnN3aXRjaDpjaGVja2VkIH4gLm5hdl9fZHJvcGRvd24ge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYmFja2dyb3VuZDogcmdiYSg3LCA3LCA2LCAwLjkpOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gIC5uYXZfX2Zvcm0ge1xuICAgIG1hcmdpbjogMC4yNXJlbSAwO1xuICAgIG9yZGVyOiAxMDtcbiAgICBmbGV4OiAyOyB9IH1cblxuLm5hdl9faW5wdXQge1xuICBmbGV4OiAxOyB9XG5cbi5mb290ZXIge1xuICBwYWRkaW5nOiAwLjI1cmVtIDA7XG4gIGJhY2tncm91bmQ6ICMzMjJjMjg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gICAgLmZvb3RlciB7XG4gICAgICBtYXJnaW4tdG9wOiA1LjY1Njg1cmVtOyB9IH1cblxuLmhlYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZDogcmdiYSg3LCA3LCA2LCAwLjkpO1xuICBmbGV4OiAwIDEwdnc7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gICAgLmhlYWRlciB7XG4gICAgICBmbGV4OiAxIDEwMHZ3O1xuICAgICAgbWF4LXdpZHRoOiAxMDB2dztcbiAgICAgIHotaW5kZXg6IDEwMDA7XG4gICAgICB0b3A6IDA7XG4gICAgICByaWdodDogMDtcbiAgICAgIHdpZHRoOiAxMDB2dztcbiAgICAgIHBhZGRpbmc6IDA7IH1cbiAgICAgIC5oZWFkZXIgfiAuaGVhZGVyLS1hZnRlciB7XG4gICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgIHBhZGRpbmctdG9wOiA0cmVtOyB9IH1cblxuLm5hdi0taGFtYnVyZ2VyLCAuZm9ybV9fY3RhIHtcbiAgcGFkZGluZzogMC41ZW0gMS40MTQyMWVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHVzZXItc2VsZWN0OiBub25lO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgYm9yZGVyOiAwOyB9XG5cbi5mb3JtX19jdGEge1xuICBiYWNrZ3JvdW5kOiAjNzEwNzA3OyB9XG5cbi5mb3JtX19jdGE6aG92ZXIsXG4uZm9ybV9fY3RhOmZvY3VzIHtcbiAgYmFja2dyb3VuZDogI2ExMGEwYTsgfVxuXG4uZm9ybV9fY3RhOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6ICNiOTBiMGI7IH1cblxuLmZvcm1fX2ZpZWxkc2V0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlOyB9XG5cbi5mb3JtX19pbnB1dCxcbi5uYXZfX2lucHV0IHtcbiAgY29sb3I6ICMzMjJjMjg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDIwLCAxMywgMTAsIDAuMik7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi5saW5rLFxuLmNhcmRfX2N0YSxcbi5jYXJkX19tZXRhLS1jb3VudHJ5LFxuLmNhcmRfX21ldGEtLXRhZyxcbi5uYXZfX2FjdGlvbixcbi5uYXZfX2Zvcm0sXG4ubmF2LS1oYW1idXJnZXIsXG4uZm9ybV9fY3RhLFxuLmNhcmRfX2FjdGlvbiB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uY2FyZF9fY3RhOmhvdmVyLCAuY2FyZF9fbWV0YS0tY291bnRyeTpob3Zlcixcbi5jYXJkX19tZXRhLS10YWc6aG92ZXIsIC5uYXZfX2FjdGlvbjpob3Zlcixcbi5uYXZfX2Zvcm06aG92ZXIsIC5uYXYtLWhhbWJ1cmdlcjpob3ZlciwgLmZvcm1fX2N0YTpob3Zlcixcbi5jYXJkX19jdGE6Zm9jdXMsXG4uY2FyZF9fbWV0YS0tY291bnRyeTpmb2N1cyxcbi5jYXJkX19tZXRhLS10YWc6Zm9jdXMsXG4ubmF2X19hY3Rpb246Zm9jdXMsXG4ubmF2X19mb3JtOmZvY3VzLFxuLm5hdi0taGFtYnVyZ2VyOmZvY3VzLFxuLmZvcm1fX2N0YTpmb2N1cyxcbi5jYXJkX19jdGE6YWN0aXZlLFxuLmNhcmRfX21ldGEtLWNvdW50cnk6YWN0aXZlLFxuLmNhcmRfX21ldGEtLXRhZzphY3RpdmUsXG4ubmF2X19hY3Rpb246YWN0aXZlLFxuLm5hdl9fZm9ybTphY3RpdmUsXG4ubmF2LS1oYW1idXJnZXI6YWN0aXZlLFxuLmZvcm1fX2N0YTphY3RpdmUge1xuICBjb2xvcjogI2Y1ZjBlZDsgfVxuXG4uY2FyZF9fYWN0aW9uIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDsgfVxuXG4ubGlzdC0tdW5zdHlsZWQge1xuICBwYWRkaW5nOiAwO1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbi5saXN0X19saW5rLS1zcGFjaW91cyB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi5saXN0X19pdGVtLS1zcGFjaW91cyxcbi5saXN0X19saW5rLS1zcGFjaW91cyB7XG4gIHBhZGRpbmc6IDAuNzA3MTFlbSAwOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAgIC5saXN0X19pdGVtLS1zcGFjaW91cyxcbiAgICAubGlzdF9fbGluay0tc3BhY2lvdXMge1xuICAgICAgcGFkZGluZzogMC43MDcxMWVtIDFlbTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAubGlzdF9fZm9ybS0tc3BhY2lvdXMge1xuICAgIHBhZGRpbmctcmlnaHQ6IDAuNzA3MTFlbTtcbiAgICBwYWRkaW5nLWxlZnQ6IDAuNzA3MTFlbTsgfSB9XG5cbi5pbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbi5pbWctLXJvdW5kIHtcbiAgYm9yZGVyLXJhZGl1czogNTAlOyB9XG5cbi5zdmdoaWRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4uaWNvbiB7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTsgfVxuXG4uaWNvbi0tc21hbGwge1xuICB3aWR0aDogMC41cmVtO1xuICBoZWlnaHQ6IDAuNXJlbTtcbiAgbWFyZ2luOiAwIDAuMjVyZW07IH1cblxuLmljb24tLW1lZGl1bSB7XG4gIHdpZHRoOiAycmVtO1xuICBoZWlnaHQ6IDJyZW07XG4gIG1hcmdpbjogMC4yNXJlbTsgfVxuXG4uaWNvbi0tbGFyZ2Uge1xuICB3aWR0aDogMi44Mjg0M3JlbTtcbiAgaGVpZ2h0OiAyLjgyODQzcmVtOyB9XG5cbi5pY29uLS1sb2dvIHtcbiAgd2lkdGg6IDJyZW07XG4gIGhlaWdodDogMS40MTQyMXJlbTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgZmlsbDogcmdiYSgyNDUsIDI0MCwgMjM3LCAwLjg3KTtcbiAgbWl4LWJsZW5kLW1vZGU6IGRpZmZlcmVuY2U7IH1cblxuLmljb24tLWZhY2Vib29rLCAuaWNvbi0tZ29vZ2xlcGx1cywgLmljb24tLXR3aXR0ZXIge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI0NSwgMjQwLCAyMzcsIDAuODcpOyB9XG5cbi5pY29uLS1mYWNlYm9vayB7XG4gIGZpbGw6ICMzYjU5OTg7IH1cblxuLmljb24tLWdvb2dsZXBsdXMge1xuICBmaWxsOiAjZDM0ODM2OyB9XG5cbi5pY29uLS10d2l0dGVyIHtcbiAgZmlsbDogIzQwOTBmZjsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdpY29tb29uJztcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL2ljb21vb24uZW90XCIpO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL2ljb21vb24uZW90I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9pY29tb29uLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvaWNvbW9vbi53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnRzL2ljb21vb24uc3ZnI2ljb21vb25cIikgZm9ybWF0KFwic3ZnXCIpOyB9XG5cbi5maWNvbjo6YmVmb3JlIHtcbiAgZm9udC1mYW1pbHk6ICdpY29tb29uJztcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIG1hcmdpbi1yaWdodDogLjNyZW07XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHNwZWFrOiBub25lO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsgfVxuXG4uZmljb24tLWxpc3Q6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU5MDAnOyB9XG5cbi5maWNvbi0tbG9jYXRpb246OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU5MDEnOyB9XG5cbi5maWNvbi0taGVhcnQ6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU5MDInOyB9XG5cbi5maWNvbi0tdXNlcjo6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTkwMyc7IH1cblxuLmZpY29uLS1naWZ0OjpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlOTA0JzsgfVxuXG4uZmljb24tLXNob3BwaW5nLWNhcnQ6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU5MDUnOyB9XG5cbi5iaWxsYm9hcmQge1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBwYWRkaW5nOiAyLjgyODQzZW0gMDtcbiAgZmxleDogMTAwdnc7XG4gIGZpbGw6IHJnYmEoMjQ1LCAyNDAsIDIzNywgMC44Nyk7IH1cblxuLmJpbGxib2FyZC0tZGVmYXVsdCB7XG4gIGJhY2tncm91bmQ6ICM5ZjJlMzI7IH1cblxuLmJpbGxib2FyZC0tYXR0ZW50aW9uIHtcbiAgYmFja2dyb3VuZDogIzMyMmMyODsgfVxuXG4ubWV0YWJsb2NrIHtcbiAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzA4cHgpIHtcbiAgICAubWV0YWJsb2NrIHtcbiAgICAgIGZsZXg6IDAgY2FsYygzMyUgLSAycmVtKTtcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsgfSB9XG4iLCIvLyBNb2Rlcm4gYm9yZGVyLWJveCBhcHBsaWVkIGV2ZXJ5d2hlcmUuXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuKixcbio6YmVmb3JlLFxuKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbi8vIE1hbmRhdG9yeSBzZWxlY3Qgc3R5bGluZy5cbjo6c2VsZWN0aW9uIHtcbiAgY29sb3I6IG1hcC1nZXQoJGNvbG9yLCBicmlnaHQpO1xuICBiYWNrZ3JvdW5kOiBtYXAtZ2V0KCRjb2xvciwgZGFyay1hY2NlbnQpO1xufVxuIiwiXG4vLyBDb21tb24gUmF0aW9zXG4vL1xuLy8gUXVhZHJhdCAob3IgU3F1YXJlL0V2ZW4pXG4vLyBIZW1pZGlhZ29uXHQxOjEuMTE4XG4vLyBUcmlvblx0MToxLjE1NFxuLy8gUXVhZHJpYWdvblx0MToxLjIwN1xuLy8gQmlhdXJvblx0MToxLjIzNlxuLy8gUGVudG9uXHQxOjEuMjcyXG4vLyBEaWFnb25cdDE6MS40MTRcbi8vIEJpcGVudG9uXHQxOjEuNDU4XG4vLyBIZW1pb2xpb25cdDE6MS41XG4vLyBBdXJvbiAodGhlIGdvbGRlbiByYXRpbylcbi8vIEhlY3RvbiAob3IgU2l4dG9uKVxuLy8gRG9wcGVscXVhZHJhdCAoSGFsdmVzKVxuLy9cbi8vIEZvbGxvd2VkIGJ5IGNvbW1vbiByYXRpb25hbCByYXRpb3MuXG4kcmF0aW86IChcbiAgcXVhcmF0OiAxLFxuICBoZW1pZGlhZ29uOiAxLjExODAzMzk4ODc0OTg5NDgsXG4gIHRyaW9uOiAxLjE1NDcwMDUzODM3OTI1MTUsXG4gIHF1YWRyaWFnb246IDEuMjA3MTA2NzgxMTg2NTQ3NSxcbiAgYmlhdXJvbjogMS4yMzYwNjc5Nzc0OTk3ODk2LFxuICBwZW50b246IDEuMjcyMDE5NjQ5NTE0MTEwMyxcbiAgZGlhZ29uOiAxLjQxNDIxMzU2MjM3MzA5NSxcbiAgYmlwZW50b246IDEuNDU4LFxuICBoZW1pb2xpb246IDEuNSxcbiAgYXVyb246IDEuNjE4MDMzOTg4NzQ5ODk0LFxuICBoZWN0b246IDEuNzMyMDUwODA3NTY4ODc3MyxcbiAgZG9wcGVscXVhZHJhdDogMixcbiAgZ29sZGVuLXJhdGlvOiAxLjYxODAzMzk4ODc0OTg5NCxcbiAgdW5pc29uOiAxLFxuICBtaW5vci1zZWNvbmQ6IDEuMDY3LFxuICBtYWpvci1zZWNvbmQ6IDEuMTI1LFxuICBtaW5vci10aGlyZDogMS4yLFxuICBtYWpvci10aGlyZDogMS4yNSxcbiAgcGVyZmVjdC1mb3VydGg6IDEuMzMzLFxuICBhdXRtZW50ZWQtZm91cnRoOiAxLjQxNCxcbiAgZGltaW5pc2hlZC1maWZ0aDogMS40MTQsXG4gIHBlcmZlY3QtZmlmdGg6IDEuNSxcbiAgbWlub3Itc2l4dGg6IDEuNixcbiAgbWFqb3Itc2l4dGg6IDEuNjY3LFxuICBtaW5vci1zZXZlbnRoOiAxLjc3OCxcbiAgbWFqb3Itc2V2ZW50aDogMS44NzUsXG4gIG9jdGF2ZTogMixcbiAgbWFqb3ItdGVudGg6IDIuNSxcbiAgbWFqb3ItZWxldmVudGg6IDIuNjY3LFxuICBtYWpvci10d2VsZnRoOiAzLFxuICBkb3VibGUtb2N0YXZlOiA0XG4pICFkZWZhdWx0O1xuXG4vLyBWYXJpYWJsZSBtYXBzXG4kaGFybW9uaWMtcmF0aW86IG1hcC1nZXQoJHJhdGlvLCBkaWFnb24pO1xuXG4kdGV4dDogKFxuICByb290OiAxOHB4LFxuICBub3JtYWwtcmVtOiAxLFxuICBzbWFsbDogMSAvICRoYXJtb25pYy1yYXRpbyxcbiAgbGFyZ2U6IHJhdGlvKDEpLFxuICBsYXJnZXI6IHJhdGlvKDIpLFxuICBsYXJnZXN0OiByYXRpbygzKVxuKSAhZGVmYXVsdDtcblxuJGNvbG9yOiAoXG4gIG1haW46ICM5ZjJlMzIsXG4gIGRhcmstbWFpbjogIzcxMDcwNyxcbiAgYWNjZW50OiAjNDk5NjcxLFxuICBicmlnaHQtYWNjZW50OiAjODc5NjhjLFxuICBkYXJrLWFjY2VudDogIzE0NmE2YyxcbiAgZGFyazogcmdiYSg1MCwgNDQsIDQwLCAxKSxcbiAgbWVkaXVtLWdyZXk6IHJnYmEoMjAsIDE0LCAxMCwgLjU3KSxcbiAgYnJpZ2h0LWdyZXk6IHJnYmEoMjAsIDEzLCAxMCwgLjIpLFxuICBicmlnaHQ6IHJnYmEoMjQ1LCAyNDAsIDIzNywgLjg3KSxcbiAgYnJpZ2h0ZXN0OiAjZmZmXG4pICFkZWZhdWx0O1xuXG4kY29sb3ItZGVmczogKFxuICBoZWFkZXI6IHJnYmEoZGFya2VuKG1hcC1nZXQoJGNvbG9yLGRhcmspLCAxNSUpLCAuOSksXG4pICFkZWZhdWx0O1xuXG4kY29udGFpbmVyOiAoXG4gIG1pbmk6IDM4OCxcbiAgc21hbGw6IDYyOCxcbiAgbWVkaXVtOiA3NTEsXG4gIGxhcmdlOiAxMDE2LFxuICB4bGFyZ2U6IDEyMTVcbikgIWRlZmF1bHQ7XG5cbi8vIE5vIG5lZWQgZm9yIFwib25seSBzY3JlZW4gYW5kXCIsIGRpc3BsYXkgYW5kIGRlbGl2ZXIgc2FtZSBjb250ZW50IHRvIHByaW50IGFuZCBzY3JlZW4sIGRvbid0IGhpZGUgZnJvbSBvbGQgYnJvd3NlcnMuXG4kYnJlYWtwb2ludHM6IChcbiAgeG1pbmk6IG1hcC1nZXQoJGNvbnRhaW5lciwgbWluaSksXG4gIG1pbmk6IG1hcC1nZXQoJGNvbnRhaW5lciwgbWluaSkgKyA1MHB4LFxuICBzbWFsbDogbWFwLWdldCgkY29udGFpbmVyLCBzbWFsbCkgKyA4MHB4LFxuICBtZWRpdW06IG1hcC1nZXQoJGNvbnRhaW5lciwgbWVkaXVtKSArIDgwcHgsXG4gIGxhcmdlOiBtYXAtZ2V0KCRjb250YWluZXIsIGxhcmdlKSArIDgwcHgsXG4gIHhsYXJnZTogbWFwLWdldCgkY29udGFpbmVyLCB4bGFyZ2UpICsgODBweFxuKTtcblxuLy8gU2V0dGluZ3NcblxuLy8gTm9ybWFsaXplclxuJGxvYm90b21pemVkLW93bDogdHJ1ZTtcbiRvbGRlc3Qtc3VwcG9ydGVkLWllLXZlcnNpb246IDk7XG4iLCIvLyBJTVBPUlRTXG5cbi8vIEBpbXBvcnQgdXJsKGh0dHA6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9wZW4rU2Fuczo0MDBpdGFsaWMsNDAwLDcwMCwzMDAmc3Vic2V0PWxhdGluLWV4dCx2aWV0bmFtZXNlLGdyZWVrLGN5cmlsbGljKTtcblxuLy8gU2V0IGJhc2UgZm9udCBzaXplIG9uIGh0bWwgZm9yIGVhc2llc3QgUkVNIHVzZVxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogbWFwLWdldCgkdGV4dCwgcm9vdCk7XG59XG5cbi8vIEluc3RpbGwgYm9keSBjb25zdGFudHNcbmJvZHkge1xuICBmb250OiA0MDAgMWVtIC8gMS41ICdMYXRvJywgJ0hlbHZldGljYSBOZXVlJywgSGVsdmV0aWNhLCBBcmlhbCwgJ0x1Y2lkYSBHcmFuZGUnLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogbWFwLWdldCgkY29sb3IsIGRhcmspO1xuICAvLyBiYWNrZ3JvdW5kOiBtYXAtZ2V0KCRjb2xvciwgYnJpZ2h0KTtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIC4zNSk7XG59XG5cbnAsXG5saSxcbmlucHV0LFxudGV4dGFyZWEsXG5zZWxlY3QsXG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1rZXJuaW5nOiBub3JtYWw7XG4gIGZvbnQtdmFyaWFudC1saWdhdHVyZXM6IG5vcm1hbDtcbn1cblxuJXRleHQtLWxhcmdlc3QsXG4ldGV4dC0tbGFyZ2VyLFxuJXRleHQtLWxhcmdlLFxuJXRleHQtLWJpZyB7XG4gIGZvbnQtc2l6ZTogI3ttYXAtZ2V0KCR0ZXh0LCBsYXJnZSl9cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogbGluZS1oZWlnaHQtaGFybW9ueShtYXAtZ2V0KCR0ZXh0LCBsYXJnZSksIG1hcC1nZXQoJGNvbnRhaW5lciwgbWluaSkpO1xuICBsZXR0ZXItc3BhY2luZzogLS4wNmVtO1xuICBmb250LXZhcmlhbnQtbGlnYXR1cmVzOiBjb21tb24tbGlnYXR1cmVzO1xuICBmb250LWtlcm5pbmc6IG5vcm1hbDtcblxuICBAaW5jbHVkZSBtZWRpYSgnPj1zbWFsbCcpIHtcbiAgICBsaW5lLWhlaWdodDogbGluZS1oZWlnaHQtaGFybW9ueShtYXAtZ2V0KCR0ZXh0LCBsYXJnZSksIG1hcC1nZXQoJGNvbnRhaW5lciwgc21hbGwpKTtcbiAgfVxufVxuXG4ldGV4dC0tbGFyZ2VzdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuXG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIGZvbnQtc2l6ZTogI3ttYXAtZ2V0KCR0ZXh0LCBsYXJnZXIpfXJlbTtcbiAgICBsaW5lLWhlaWdodDogbGluZS1oZWlnaHQtaGFybW9ueShtYXAtZ2V0KCR0ZXh0LCBsYXJnZXIpLCBtYXAtZ2V0KCRjb250YWluZXIsIHNtYWxsKSk7XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYSgnPj1tZWRpdW0nKSB7XG4gICAgZm9udC1zaXplOiAje21hcC1nZXQoJHRleHQsIGxhcmdlc3QpfXJlbTtcbiAgICBsaW5lLWhlaWdodDogbGluZS1oZWlnaHQtaGFybW9ueShtYXAtZ2V0KCR0ZXh0LCBsYXJnZXN0KSwgbWFwLWdldCgkY29udGFpbmVyLCBtZWRpdW0pKTtcbiAgICBsZXR0ZXItc3BhY2luZzogLS4wM2VtO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWEoJz49bGFyZ2UnKSB7XG4gICAgbGluZS1oZWlnaHQ6IGxpbmUtaGVpZ2h0LWhhcm1vbnkobWFwLWdldCgkdGV4dCwgbGFyZ2VzdCksIG1hcC1nZXQoJGNvbnRhaW5lciwgbGFyZ2UpKTtcbiAgfVxufVxuXG4ldGV4dC0tbGFyZ2VyIHtcbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgbGluZS1oZWlnaHQ6IGxpbmUtaGVpZ2h0LWhhcm1vbnkobWFwLWdldCgkdGV4dCwgbGFyZ2UpLCBtYXAtZ2V0KCRjb250YWluZXIsIHNtYWxsKSk7XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYSgnPj1tZWRpdW0nKSB7XG4gICAgZm9udC1zaXplOiAje21hcC1nZXQoJHRleHQsIGxhcmdlcil9cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiBsaW5lLWhlaWdodC1oYXJtb255KG1hcC1nZXQoJHRleHQsIGxhcmdlciksIG1hcC1nZXQoJGNvbnRhaW5lciwgbWVkaXVtKSk7XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYSgnPj1sYXJnZScpIHtcbiAgICBsaW5lLWhlaWdodDogbGluZS1oZWlnaHQtaGFybW9ueShtYXAtZ2V0KCR0ZXh0LCBsYXJnZXIpLCBtYXAtZ2V0KCRjb250YWluZXIsIGxhcmdlKSk7XG4gIH1cbn1cblxuJXRleHQtLWxhcmdlIHtcbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgbGluZS1oZWlnaHQ6IGxpbmUtaGVpZ2h0LWhhcm1vbnkobWFwLWdldCgkdGV4dCwgbGFyZ2UpLCBtYXAtZ2V0KCRjb250YWluZXIsIHNtYWxsKSk7XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYSgnPj1tZWRpdW0nKSB7XG4gICAgbGluZS1oZWlnaHQ6IGxpbmUtaGVpZ2h0LWhhcm1vbnkobWFwLWdldCgkdGV4dCwgbGFyZ2UpLCBtYXAtZ2V0KCRjb250YWluZXIsIG1lZGl1bSkpO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWEoJz49bGFyZ2UnKSB7XG4gICAgbGluZS1oZWlnaHQ6IGxpbmUtaGVpZ2h0LWhhcm1vbnkobWFwLWdldCgkdGV4dCwgbGFyZ2UpLCBtYXAtZ2V0KCRjb250YWluZXIsIGxhcmdlKSk7XG4gIH1cbn1cblxuJWJyaWdodC10ZXh0LWNvbG9yIHtcbiAgY29sb3I6IG1hcC1nZXQoJGNvbG9yLCBicmlnaHQpO1xufVxuXG4lbWVkaXVtLWdyZXktdGV4dC1jb2xvciB7XG4gIGNvbG9yOiBtYXAtZ2V0KCRjb2xvciwgbWVkaXVtLWdyZXkpO1xufVxuXG4vLyBib2xkIGZvbnQgZGVmaW5lZCBoZXJlLCBzbyBmb250IGlzIGVhc2lseSBleGNoYW5nYWJsZSBhbmQgdG8gYXZvaWQgZmF1eCBib2xkXG4lYm9sZC1mb250IHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuJXRleHQtLXNtYWxsIHtcbiAgZm9udC1zaXplOiAocmF0aW8oMSkgLyAyKSN7cmVtfTtcbn1cblxuLy8gV2lsbCBvbmx5IGJlIHNwb2tlbiBieSBzY3JlZW4gcmVhZGVycy5cbiV0ZXh0LS1zcGVhayB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIHBhZGRpbmc6IDA7XG59XG4iLCIuYmlsbGJvYXJkIHtcbiAgQGV4dGVuZCAlYnJpZ2h0LXRleHQtY29sb3I7XG4gIEBleHRlbmQgJWZsZXg7XG4gIEBleHRlbmQgJWpjLWNlbnRlcjtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgcGFkZGluZzogcmF0aW8oMywgZW0pIDA7XG4gIGZsZXg6IDEwMHZ3O1xuICBmaWxsOiBtYXAtZ2V0KCRjb2xvciwgYnJpZ2h0KTtcbn1cblxuLmJpbGxib2FyZC0tZGVmYXVsdCB7XG4gIGJhY2tncm91bmQ6IG1hcC1nZXQoJGNvbG9yLCBtYWluKTtcbn1cblxuLmJpbGxib2FyZC0tYXR0ZW50aW9uIHtcbiAgYmFja2dyb3VuZDogbWFwLWdldCgkY29sb3IsIGRhcmspO1xufVxuXG4vLyAuYmlsbGJvYXJkLS1pbWFnZSB7XG4vLyAgIG1pbi1oZWlnaHQ6IDEwdmg7XG4vLyAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgLjUpIHVybCgnaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE0NDM1MjcyMTYzMjAtN2U3NDQwODRmNWE3P2ZpdD1jcm9wJmZtPWpwZyZoPTExNTAmaXhsaWI9cmItMC4zLjUmcT04MCZ3PTEwMjUnKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlciBmaXhlZDtcbi8vICAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbi8vICAgYmFja2dyb3VuZC1ibGVuZC1tb2RlOiBtdWx0aXBseTtcbi8vICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuLy8gfVxuXG5cbi5iaWxsYm9hcmRfX3RpdGxlIHtcbiAgQGV4dGVuZCAldGV4dC0tbGFyZ2VzdDtcbn1cblxuLmJpbGxib2FyZF9fY29udGVudCB7XG4gIC8vIGZsZXg6IDEwMHZ3O1xufVxuXG4ubWV0YWJsb2NrIHtcbiAgQGV4dGVuZCAlZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICBAaW5jbHVkZSBtZWRpYSgnPj1zbWFsbCcpIHtcbiAgICBmbGV4OiAwIGNhbGMoMzMlIC0gI3tyYXRpbygyLCByZW0pfSk7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICB9XG59XG5cbi5tZXRhYmxvY2tfX3RpdGxlIHtcbiAgQGV4dGVuZCAldGV4dC0tbGFyZ2U7XG59XG4iLCIuZm9vdGVyIHtcbiAgQGV4dGVuZCAlYnJpZ2h0LXRleHQtY29sb3I7XG4gIEBleHRlbmQgJXRvcC1tYXJnaW4tb2ZmO1xuICBwYWRkaW5nOiByYXRpbygtNCwgcmVtKSAwOyAvLyBwYWRkaW5nIGluc3RlYWQgb2YgaGVpZ2h0LCBzbyBjb250ZW50IGNhbiBiZSB2YXJpZWRcbiAgLy8gZm9udC1zaXplOiByYXRpbygtMSwgcmVtKTtcbiAgYmFja2dyb3VuZDogbWFwLWdldCgkY29sb3IsIGRhcmspO1xuXG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIG1hcmdpbi10b3A6IHJhdGlvKDUsIHJlbSk7XG4gIH1cbn1cbiIsIi5mb3JtX19maWVsZHNldCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm9yZGVyLWNvbGxhcHNlOiBzZXBhcmF0ZTtcbn1cblxuLmZvcm1fX2lucHV0LFxuJWZvcm1fX2lucHV0IHtcbiAgQGV4dGVuZCAlaXMtcm91bmRlZDtcbiAgQGV4dGVuZCAlaGFzLXNoYWRvdy1mb2N1cy1lZmZlY3Q7XG4gIEBleHRlbmQgJXBhZGRpbmctLWNvbW1vbjtcbiAgY29sb3I6IG1hcC1nZXQoJGNvbG9yLCBkYXJrKTtcbiAgZGlzcGxheTogYmxvY2s7IC8vIHRleHRhcmVhXG4gIGJvcmRlcjogMXB4IHNvbGlkIG1hcC1nZXQoJGNvbG9yLCBicmlnaHQtZ3JleSk7XG4gIGJhY2tncm91bmQtY29sb3I6IG1hcC1nZXQoJGNvbG9yLCBicmlnaHRlc3QpO1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IC8vIGZvciBzZWFyY2ggZmllbGRzIGFuZCBzZWxlY3RcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lOyAvLyBmb3Igc2VhcmNoIGZpZWxkcyBhbmQgc2VsZWN0XG59XG5cbi5mb3JtX19sYWJlbCB7XG4gIEBleHRlbmQgJWJvbGQtZm9udDtcbn1cblxuLmZvcm1fX2N0YSB7XG4gIEBleHRlbmQgJWJ1dHRvbjtcbiAgQGV4dGVuZCAlYnV0dG9uLS1hY3Rpb247XG59XG4iLCIvLyBCcm93c2UgZ3JpZFxuLmJyb3dzZS13cmFwIHtcbiAgQGV4dGVuZCAld3JhcDtcblxuICBAaW5jbHVkZSBtZWRpYSgnPj1zbWFsbCcpIHtcbiAgICBtYXgtd2lkdGg6IGNhbGMoI3ttYXAtZ2V0KCRjb250YWluZXIsIHhsYXJnZSl9cHggKyAoI3tyYXRpbygxLCByZW0pfSAqIDIpKTtcbiAgICBmbGV4OiAwIGNhbGMoODYuMjkydncgKyAoI3tyYXRpbygxLCByZW0pfSAqIDIpKTtcbiAgfVxufVxuXG4uY2FyZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbjogcmF0aW8oMSwgcmVtKSAwO1xuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG5cbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgbWFyZ2luOiByYXRpbygxLCByZW0pO1xuICAgIGZsZXg6IDEgY2FsYygje3BlcmNlbnRhZ2UoMSAvIDMpfSAtICgje3JhdGlvKDEsIHJlbSl9ICogMikpO1xuICB9XG59XG5cbi5jYXJkOm50aC1vZi10eXBlKDVuKzEpIHtcbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgZmxleDogMSBjYWxjKCN7cGVyY2VudGFnZSgyIC8gMyl9IC0gKCN7cmF0aW8oMSwgcmVtKX0gKiAyKSk7XG4gIH1cbn1cblxuLmNhcmQ6bnRoLW9mLXR5cGUoMTBuKzApIHtcbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgZmxleDogMSBjYWxjKDEwMCUgLSAoI3tyYXRpbygxLCByZW0pfSAqIDIpKTtcbiAgfVxufVxuXG5cbi5jYXJkX19hY3Rpb24ge1xuICBAZXh0ZW5kICVsaW5rLS1uZXV0cmFsO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4OiAxO1xuICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xufVxuXG4uY2FyZF9faW1nYmxvY2sge1xuICB3aWR0aDogMTAwJTsgLy8gZml4ZXMgYnVnIHdoZXJlIGRpdiB3b24ndCBpbmNsdWRlIGFsbCBvZiB0aGUgcGljdHVyZTtcbn1cblxuLmNhcmRfX3RpdGxlIHtcbiAgQGV4dGVuZCAldGV4dC0tYmlnO1xufVxuXG4uY2FyZF9fYWJvdXQge1xuICBmbGV4OiAxO1xufVxuXG4uY2FyZF9fZm9vdGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG59XG5cbi5jYXJkX19jdGEge1xuICBAZXh0ZW5kICVsaW5rO1xuICBAZXh0ZW5kICVsaW5rLS1icmlnaHQ7XG4gIEBleHRlbmQgJWdyaWQtLWNlbnRlci0tZXZlcnl0aGluZztcbiAgaGVpZ2h0OiByYXRpbygzLCByZW0pO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBib3JkZXItcmFkaXVzOiByYXRpbygzLCByZW0pO1xuICBiYWNrZ3JvdW5kOiAobWFwLWdldCgkY29sb3IsIG1haW4pKTtcbn1cblxuLmNhcmRfX21ldGEge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4uY2FyZF9fbWV0YS0tY291bnRyeSxcbi5jYXJkX19tZXRhLS10YWcge1xuICBAZXh0ZW5kICVsaW5rO1xuICBAZXh0ZW5kICVsaW5rLS1icmlnaHQ7XG4gIEBleHRlbmQgJWdyaWQtLWNlbnRlci0tZXZlcnl0aGluZztcbiAgQGV4dGVuZCAldG9wLW1hcmdpbi1vZmY7XG4gIEBleHRlbmQgJXRleHQtLXNtYWxsO1xuICBoZWlnaHQ6IHJhdGlvKDEsIHJlbSk7XG4gIG1hcmdpbi1yaWdodDogcmF0aW8oLTUsIHJlbSk7XG4gIG1hcmdpbi1ib3R0b206IHJhdGlvKC01LCByZW0pO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBib3JkZXItcmFkaXVzOiByYXRpbygzLCByZW0pO1xuICBmbGV4OiAxIHJhdGlvKDMsIHJlbSk7XG59XG5cblxuLmNhcmRfX21ldGEtLXRhZyB7XG4gIGJhY2tncm91bmQ6IG1hcC1nZXQoJGNvbG9yLCBkYXJrLWFjY2VudCk7XG59XG5cbi5jYXJkX19tZXRhLS1jb3VudHJ5IHtcbiAgYmFja2dyb3VuZDogbWFwLWdldCgkY29sb3IsIGFjY2VudCk7XG59XG4iLCIvLyBMb2JvdG9taXplZCBvd2wgYXBwbGllcyBtYXJnaW4gdG9wIHRvIGV2ZXJ5IGNoaWxkIGVsZW1lbnQuXG4vLyBodHRwOi8vYWxpc3RhcGFydC5jb20vYXJ0aWNsZS9heGlvbWF0aWMtY3NzLWFuZC1sb2JvdG9taXplZC1vd2xzXG4qIHtcbiAgbWFyZ2luOiAwO1xuXG4gICsgKiB7XG4gICAgbWFyZ2luLXRvcDogcmF0aW8oMSwgZW0pO1xuICB9XG59XG5cbmhlYWRlcixcbiV0b3AtbWFyZ2luLW9mZi1vbi1jaGlsZHJlbiA+ICosXG4ldG9wLW1hcmdpbi1vZmYge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuXG4ld3JhcCxcbi53cmFwIHtcbiAgbWF4LXdpZHRoOiAje21hcC1nZXQoJGNvbnRhaW5lciwgeGxhcmdlKX1weDtcbiAgZmxleDogMCA4Ni4yOTJ2dztcbn1cblxuLy8gZmxleGJveCBiYXNlZCBncmlkIHN5c3RlbS5cbi8vIENvbnRhaW5lcnNcbiVmbGV4IHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuJWpjLXNwYWNlLWJldHdlZW4ge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbiVqYy1jZW50ZXIge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuJWZsZXgtZmxvdy1jb2x1bW4td3JhcCB7XG4gIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XG59XG5cbiVncmlkLFxuLmdyaWQge1xuICBAZXh0ZW5kICVmbGV4O1xuICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgfVxufVxuXG4uZ3JpZC0tY29sdW1uIHtcbiAgQGV4dGVuZCAlZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmdyaWQtLXJvdyB7XG4gIEBleHRlbmQgJWZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5ncmlkLS1zcGFjZS1hcm91bmQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbn1cblxuLmdyaWQtLWNlbnRlciB7XG4gIEBleHRlbmQgJWZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIGZsZXg6IDEgMTAwdnc7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG5ib2R5IHtcbiAgQGV4dGVuZCAlZmxleDtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbiVncmlkLS1jZW50ZXItLWV2ZXJ5dGhpbmcge1xuICBAZXh0ZW5kICVmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmdyaWQtLWluaXRpYWwge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG59XG5cbi5ncmlkLS1lbmQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBhbGlnbi1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmdyaWQtLWNlbnRlci0tdixcbiVncmlkLS1jZW50ZXItLXYge1xuICBAaW5jbHVkZSBtZWRpYSgnPj1zbWFsbCcpIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG59XG5cbi8vIEJsb2Nrc1xuLmdyaWRfX2Jsb2NrIHtcbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxufVxuXG4uYmxvY2stLWZ1bGxzcGFuLS1sYXJnZSB7XG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIGZsZXg6IDEwMHZ3O1xuICB9XG59XG5cbiRjb2x1bW5zOiAzO1xuQGZvciAkaSBmcm9tIDEgdG8gJGNvbHVtbnMgKyAxIHtcbiAgLmdyaWRfX3dpZHRoLS0jeyRpfSB7XG4gICAgZmxleDogMCBjYWxjKCN7cGVyY2VudGFnZSgkaSAvICRjb2x1bW5zKX0gLSAje3JhdGlvKDIsIHJlbSl9KTtcbiAgfVxufVxuXG5AZm9yICRpIGZyb20gMSB0byAkY29sdW1ucyArIDEge1xuICAuZ3JpZF9fYmxvY2stLSN7JGl9IHtcbiAgICBmbGV4OiByYXRpbygkaSk7XG4gIH1cbn1cblxuLnByaW9yaXR5LS1sYXN0IHtcbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgb3JkZXI6IDEwO1xuICB9XG59XG5cbi5wcmlvcml0eS0taW1wb3J0YW50IHtcbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgb3JkZXI6IC0xMDtcbiAgfVxufVxuIiwiLy9cbi8vIFJlbW92ZSB1bml0IChQWCwgRU0gZXRjKSBmcm9tIG51bWJlcnNcbi8vXG5AZnVuY3Rpb24gdW5pdGxlc3MoJG51bWJlcikge1xuICAkbjogJG51bWJlciAvICgkbnVtYmVyICogMCArIDEpO1xuICBAcmV0dXJuICRuO1xufVxuXG4vL1xuLy8gQ29udmVydCBQWCB0byBSRU0gc2l6ZS5cbi8vXG5AZnVuY3Rpb24gY2FsY3VsYXRlLXJlbSgkcHgtc2l6ZSkge1xuICAkcmVtLXNpemU6ICRweC1zaXplIC8gJGZvbnQtc2l6ZTtcbiAgQHJldHVybiAjeyRyZW0tc2l6ZX1yZW07XG59XG5cbi8vXG4vLyBDb252ZXJ0IFBYIHRvIFJFTSB1bml0bGVzcy5cbi8vXG5AZnVuY3Rpb24gY2FsY3VsYXRlLWhlYWRsaW5lLWxpbmUtaGVpZ2h0KCRiYXNlLWxpbmUtaGVpZ2h0LCAkaGVhZGxpbmUtcHgtc2l6ZSkge1xuICAkcmVtLXNpemU6ICRoZWFkbGluZS1weC1zaXplIC8gJGZvbnQtc2l6ZTtcbiAgQHJldHVybiAkYmFzZS1saW5lLWhlaWdodCAvICRyZW0tc2l6ZTtcbn1cblxuLy9cbi8vIENvbnZlcnQgRU0gdG8gUFgsIHVuaXRsZXNzLlxuLy9cbkBmdW5jdGlvbiBjb252ZXJ0LWVtLXRvLXB4KCR1bml0bGVzcy1lbSkge1xuICBAcmV0dXJuICR1bml0bGVzcy1lbSAqIHVuaXRsZXNzKCRmb250LXNpemUpO1xufVxuXG4vL1xuLy8gRm9udCBzaXplIHdpdGggcHggZmFsbGJhY2sgZm9yIElFOS5cbi8vXG5AbWl4aW4gZm9udC1zaXplKCRweC1zaXplKSB7XG4gIGZvbnQtc2l6ZTogJHB4LXNpemU7XG4gIGZvbnQtc2l6ZTogY2FsY3VsYXRlLXJlbSgkcHgtc2l6ZSk7XG59XG5cbi8vXG4vLyBwb3coKSAtIFJhaXNlIG51bWJlciB0byB0aGUgbnRoIHBvd2VyXG4vLyBAcGFyYW0ge251bWJlcn0gJGJhc2UgICAgICBUaGUgYmFzZSBudW1iZXJcbi8vIEBwYXJhbSB7bnVtYmVyfSAkZXhwb25lbnRzIFRoZSBleHBvbmVudCB0byB3aGljaCB0byByYWlzZSAkYmFzZVxuLy9cbkBmdW5jdGlvbiBwb3coJGJhc2UsICRleHBvbmVudHMpIHtcbiAgJHJhaXNlZDogMTtcbiAgQGlmICRleHBvbmVudHMgPiAwIHtcbiAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoICRleHBvbmVudHMge1xuICAgICAgJHJhaXNlZDogJHJhaXNlZCAqICRiYXNlO1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkZXhwb25lbnRzIDwgMCB7XG4gICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAtJGV4cG9uZW50cyB7XG4gICAgICAkcmFpc2VkOiAkcmFpc2VkIC8gJGJhc2U7XG4gICAgfVxuICB9XG4gIEByZXR1cm4gJHJhaXNlZDtcbn1cbiIsIi8vIC5ncmlkLS1jZW50ZXJcblxuLmhlYWRlciB7XG4gIEBleHRlbmQgJW1hcmdpbi1vZmY7XG4gIEBleHRlbmQgJWJyaWdodC10ZXh0LWNvbG9yO1xuICBAZXh0ZW5kICVmbGV4O1xuICBAZXh0ZW5kICVqYy1jZW50ZXI7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZDogbWFwLWdldCgkY29sb3ItZGVmcywgaGVhZGVyKTtcbiAgZmxleDogMCAxMHZ3O1xuXG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIGZsZXg6IDEgMTAwdnc7XG4gICAgbWF4LXdpZHRoOiAxMDB2dztcbiAgICB6LWluZGV4OiAxMDAwO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICB3aWR0aDogMTAwdnc7XG4gICAgcGFkZGluZzogMDtcblxuICAgIC8vIE1ha2VzIHN1cmUgcGFkZGluZyBpcyBhZGRlZCBhZnRlciBoZWFkZWRzIGZpeGVkIHBvc2l0aW9uXG4gICAgfiAuaGVhZGVyLS1hZnRlciB7XG4gICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgcGFkZGluZy10b3A6IHJhdGlvKDQsIHJlbSk7XG4gICAgfVxuICB9XG59XG5cbi8vIC5oZWFkZXJfX3dyYXAge1xuLy8gICBkaXNwbGF5OiBmbGV4O1xuLy8gICB3aWR0aDogNDB2dztcbi8vICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4vL1xuLy8gICBAaW5jbHVkZSBtZWRpYSgnPj1zbWFsbCcpIHtcbi8vICAgICB3aWR0aDogYXV0bztcbi8vICAgfVxuLy8gfVxuIiwiLm5hdiB7XG4gIEBleHRlbmQgJWZsZXg7XG4gIEBleHRlbmQgJW1hcmdpbi10b3Atb2ZmO1xuICB0b3A6IC0xMHJlbTtcbiAgd2lkdGg6IDMwdnc7XG4gIGhlaWdodDogMDtcbiAgdHJhbnNpdGlvbjogYWxsIDQwMG1zIGN1YmljLWJlemllcigwLCAxLjMsIDEsIDEuMik7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgb3BhY2l0eTogMDtcbiAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xufVxuXG4uc3dpdGNoOmNoZWNrZWQgfiAubmF2IHtcbiAgdG9wOiAwO1xuICB3aWR0aDogMzB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgcGFkZGluZzogcmF0aW8oMSwgcmVtKTtcbiAgb3BhY2l0eTogMTtcbn1cblxuLm5hdixcbi5zd2l0Y2g6Y2hlY2tlZCB+IC5uYXYge1xuICBAaW5jbHVkZSBtZWRpYSgnPj1zbWFsbCcpIHtcbiAgICB0b3A6IDA7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogODZ2dztcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IGluaGVyaXQ7XG4gICAgdHJhbnNpdGlvbjogbm9uZTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gIH1cbn1cblxuLnN3aXRjaDpub3QoOmNoZWNrZWQpIH4gLm5hdiB7XG4gIG1hcmdpbjogMDtcbn1cblxuLm5hdi0taGFtYnVyZ2VyIHtcbiAgQGV4dGVuZCAlYnV0dG9uO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMXZoO1xuICByaWdodDogN3Z3O1xuICBiYWNrZ3JvdW5kOiBtYXAtZ2V0KCRjb2xvci1kZWZzLCBoZWFkZXIpO1xufVxuXG5cbi5uYXZfX2FjdGlvbixcbi5uYXZfX2Zvcm0ge1xuICBAZXh0ZW5kICVsaW5rLS1icmlnaHQ7XG5cbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxufVxuXG4ubmF2X19hY3Rpb24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8vIElFIDEwIGRvZXNuJ3QgcmVjb2duaXplIG9yZGVyLCBzbyB3ZSBkbyB0aGlzIHRvIGF2b2lkIG9kZCBsYXlvdXRzIHRoZXJlLlxuXG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGFkZGluZzogMDtcbiAgICBmbGV4OiAxO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbn1cblxuLm5hdl9fYWN0aW9uLS1oYXMtZHJvcGRvd24ge1xuICBAaW5jbHVkZSBtZWRpYSgnPj1zbWFsbCcpIHtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xuICAgIGZsZXg6IDE7XG4gIH1cbn1cblxuLm5hdl9fYWN0aW9uLS1kcm9wZG93bi1hY3Rpb24ge1xuICBAaW5jbHVkZSBtZWRpYSgnPj1zbWFsbCcpIHtcbiAgICBmbGV4OiAxO1xuICB9XG59XG5cbi5uYXZfX2Ryb3Bkb3duIHtcbiAgQGV4dGVuZCAlZmxleDtcbiAgZGlzcGxheTogbm9uZTtcbiAgbWFyZ2luLXRvcDogcmF0aW8oMSwgcmVtKTtcbiAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuXG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiByYXRpbygyLCByZW0pO1xuICB9XG59XG5cblxuLnN3aXRjaDpjaGVja2VkIH4gLm5hdl9fZHJvcGRvd24ge1xuICBkaXNwbGF5OiBmbGV4O1xuXG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kOiBtYXAtZ2V0KCRjb2xvci1kZWZzLCBoZWFkZXIpO1xuICB9XG59XG5cbi5uYXZfX2Zvcm0ge1xuICBAZXh0ZW5kICVmbGV4O1xuXG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIG1hcmdpbjogcmF0aW8oLTQsIHJlbSkgMDtcbiAgICBvcmRlcjogMTA7XG4gICAgZmxleDogcmF0aW8oMik7XG4gIH1cbn1cblxuLm5hdl9faW5wdXQge1xuICBAZXh0ZW5kICVmb3JtX19pbnB1dDtcbiAgZmxleDogMTtcbn1cbiIsIi8vIFNIT1JUIFFVSUNLIFJFVVNBQkxFIENPTlNUQU5UU1xuLy8gUmVhZGFibGUgaHVtYW5lIG5hbWVzIGNsZWFybHkgZXhwbGFpbnMgd2hhdCBlYWNoIGNsYXNzIGRvLlxuXG4vLyBGYW5jeSBjb2xvciBlZmZlY3Qgb24gZm9jdXNlZCBpdGVtc1xuJWhhcy1zaGFkb3ctZm9jdXMtZWZmZWN0IHtcbiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyBlYXNlLWluLW91dCAxNTBtcztcbiAgYm94LXNoYWRvdzogMCAwIDFyZW0gcmF0aW8oMSwgcmVtKSB0cmFuc3BhcmVudCwgaW5zZXQgMCAwIDFyZW0gcmF0aW8oMSwgcmVtKSB0cmFuc3BhcmVudDtcbn1cblxuJWhhcy1zaGFkb3ctZm9jdXMtZWZmZWN0OmZvY3VzIHtcbiAgYm9yZGVyLWNvbG9yOiBtYXAtZ2V0KCRjb2xvciwgZGFyay1hY2NlbnQpO1xuICBvdXRsaW5lOiBub25lO1xuICBib3gtc2hhZG93OiAwIDAgcmF0aW8oMiwgcmVtKSBtYXAtZ2V0KCRjb2xvciwgYWNjZW50KSwgaW5zZXQgMCAwIHJhdGlvKC01LCByZW0pIG1hcC1nZXQoJGNvbG9yLCBhY2NlbnQpO1xufVxuXG4vLyBFeHRlbmRhYmxlIHJvdW5kZWQgY29ybmVycywgY29uc3RhbnQgcm91bmRlZCBzaGFwZXNcbiVpcy1yb3VuZGVkIHtcbiAgYm9yZGVyLXJhZGl1czogcmF0aW8oLTEsIHJlbSk7XG59XG5cbi8vIENvbW1vbiBwYWRkaW5ncywgY29uc3RhbnQgc3BhY2luZyBhcm91bmQgY2VydGFpbiBlbGVtZW50c1xuJXBhZGRpbmctLWNvbW1vbiB7XG4gIHBhZGRpbmc6IHJhdGlvKC0zLCByZW0pIHJhdGlvKC0yLCByZW0pO1xufVxuIiwiLy8gTWVudVxuXG4vLyBoaWRlIGNoZWNrYm94XG4uc3dpdGNoIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBvcGFjaXR5OiAwO1xuXG4gIH4gbGFiZWw6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgLy8gUmVtb3ZlcyB0aGUgbG9ib3RvbWl6ZWQgb3dsLlxuICAgIEBleHRlbmQgJXRvcC1tYXJnaW4tb2ZmO1xuICB9XG59XG5cbi5tZW51LWxhYmVsIHtcbiAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG5cbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgLy8gSGlkZSBvbiBsYXJnZSBzY3JlZW5cbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi5zd2l0Y2g6Y2hlY2tlZCB+IC5uYXYtLWhhbWJ1cmdlciB7XG4gIC5oYW1idXJnZXItaWNvbiB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcbiAgfVxuXG4gIC5oYW1idXJnZXI6OmJlZm9yZSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC40ZW0pIHJvdGF0ZSg5MGRlZyk7XG4gIH1cblxuICAuaGFtYnVyZ2VyOjphZnRlciB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0uNGVtKSByb3RhdGUoMTgwZGVnKTtcbiAgfVxufVxuXG4uaGFtYnVyZ2VyIHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxZW07XG4gIGhlaWdodDogMWVtO1xuICBwYWRkaW5nOiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAyMDBtcyBlYXNlLWluLW91dDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgYm9yZGVyOiAwIG5vbmU7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4uaGFtYnVyZ2VyOjpiZWZvcmUsXG4uaGFtYnVyZ2VyOjphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xufVxuXG4uaGFtYnVyZ2VyOjpiZWZvcmUsXG4uaGFtYnVyZ2VyOjphZnRlcixcbi5oYW1idXJnZXItaWNvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAuMWVtO1xuICBtYXJnaW46IDAgMCAuMjllbTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDIwMG1zIGN1YmljLWJlemllcigwLCAxLjMsIDEsIDEuMik7XG4gIGJvcmRlci1yYWRpdXM6IC41ZW07XG4gIGJhY2tncm91bmQ6IG1hcC1nZXQoJGNvbG9yLCBicmlnaHQpO1xufVxuIiwiLy9cbi8vIDEuIFJlbW92ZXMgc3VwZXIgc2Vuc2V0aXZlIHNlbGVjdGlvbiBvbiB0b3VjaCBpbnRlcmZhY2VzXG4vL1xuXG4lYnV0dG9uIHtcbiAgQGV4dGVuZCAlbGluay0tYnJpZ2h0O1xuICBAZXh0ZW5kICVpcy1yb3VuZGVkO1xuICBAZXh0ZW5kICVoYXMtc2hhZG93LWZvY3VzLWVmZmVjdDtcbiAgcGFkZGluZzogcmF0aW8oLTIsIGVtKSByYXRpbygxLCBlbSk7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7IC8vIDFcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJvcmRlcjogMDtcbn1cblxuXG5AbWl4aW4gYnV0dG9uKCRjb2xvcikge1xuICBiYWNrZ3JvdW5kOiAkY29sb3I7XG4gIDpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogbGlnaHRlbigkY29sb3IsIDMwJSk7XG4gIH1cbn1cblxuJWJ1dHRvbi0tYWN0aW9uIHtcbiAgYmFja2dyb3VuZDogbWFwLWdldCgkY29sb3IsIGRhcmstbWFpbik7XG59XG5cbiVidXR0b24tLWFjdGlvbjpob3ZlcixcbiVidXR0b24tLWFjdGlvbjpmb2N1cyB7XG4gIGJhY2tncm91bmQ6IGxpZ2h0ZW4obWFwLWdldCgkY29sb3IsIGRhcmstbWFpbiksIDEwKTtcbn1cblxuJWJ1dHRvbi0tYWN0aW9uOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6IGxpZ2h0ZW4obWFwLWdldCgkY29sb3IsIGRhcmstbWFpbiksIDE1KTtcbn1cblxuJWJ1dHRvbi0tZGVjbGluZSB7XG4gIGJhY2tncm91bmQ6IG1hcC1nZXQoJGNvbG9yLCBicmlnaHQtYWNjZW50KTtcbn1cblxuJWJ1dHRvbi0tZGVjbGluZTpob3ZlcixcbiVidXR0b24tLWRlY2xpbmU6Zm9jdXMge1xuICBiYWNrZ3JvdW5kOiBsaWdodGVuKG1hcC1nZXQoJGNvbG9yLCBicmlnaHQtYWNjZW50KSwgMTApO1xuXG59XG5cbiVidXR0b24tLWRlY2xpbmU6YWN0aXZlIHtcbiAgYmFja2dyb3VuZDogbGlnaHRlbihtYXAtZ2V0KCRjb2xvciwgYnJpZ2h0LWFjY2VudCksIDE1KTtcbn1cbiIsIi5saW5rLFxuJWxpbmsge1xuICBAZXh0ZW5kICVoYXMtc2hhZG93LWZvY3VzLWVmZmVjdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4lbGluay0tb3BhY2l0eTpob3ZlcixcbiVsaW5rLS1vcGFjaXR5OmZvY3VzIHtcbiAgb3BhY2l0eTogLjg7XG59XG5cbiVsaW5rLS1icmlnaHQge1xuICBAZXh0ZW5kICVsaW5rO1xuICBAZXh0ZW5kICVicmlnaHQtdGV4dC1jb2xvcjtcbn1cblxuJWxpbmstLWJyaWdodDpob3ZlcixcbiVsaW5rLS1icmlnaHQ6Zm9jdXMsXG4lbGluay0tYnJpZ2h0OmFjdGl2ZSB7XG4gIGNvbG9yOiBvcGFjaWZ5KG1hcC1nZXQoJGNvbG9yLCBicmlnaHQpLCAuMik7XG59XG5cbiVsaW5rLS1uZXV0cmFsIHtcbiAgQGV4dGVuZCAlbGluaztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbn1cbiIsIi5saXN0LS1kZWZhdWx0IHtcbiAgQGV4dGVuZCAldG9wLW1hcmdpbi1vZmYtb24tY2hpbGRyZW47XG59XG5cbi5saXN0LS11bnN0eWxlZCB7XG4gIEBleHRlbmQgJWxpc3QtLXVuc3R5bGVkO1xuICBwYWRkaW5nOiAwO1xuICBsaXN0LXN0eWxlOiBub25lO1xuXG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIEBleHRlbmQgJXRvcC1tYXJnaW4tb2ZmLW9uLWNoaWxkcmVuO1xuICB9XG59XG5cbi5saXN0X19saW5rLS1zcGFjaW91cyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ubGlzdF9faXRlbS0tc3BhY2lvdXMsXG4ubGlzdF9fbGluay0tc3BhY2lvdXMge1xuICBwYWRkaW5nOiByYXRpbygtMSwgZW0pIDA7XG5cbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgcGFkZGluZzogcmF0aW8oLTEsIGVtKSAxZW07XG4gIH1cbn1cblxuLmxpc3RfX2Zvcm0tLXNwYWNpb3VzIHtcbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgcGFkZGluZy1yaWdodDogcmF0aW8oLTEsIGVtKTtcbiAgICBwYWRkaW5nLWxlZnQ6IHJhdGlvKC0xLCBlbSk7XG4gIH1cbn1cbiIsIi5pbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4uaW1nLS1yb3VuZCB7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cbiIsIi8vIFNWRyBpY29uc1xuLnN2Z2hpZGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uaWNvbiB7XG4gIC8vIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cblxuLmljb24tLXNtYWxsIHtcbiAgd2lkdGg6IHJhdGlvKC0yLCByZW0pO1xuICBoZWlnaHQ6IHJhdGlvKC0yLCByZW0pO1xuICBtYXJnaW46IDAgcmF0aW8oLTQsIHJlbSk7XG59XG5cbi5pY29uLS1tZWRpdW0ge1xuICB3aWR0aDogcmF0aW8oMiwgcmVtKTtcbiAgaGVpZ2h0OiByYXRpbygyLCByZW0pO1xuICBtYXJnaW46IHJhdGlvKC00LCByZW0pO1xufVxuXG4uaWNvbi0tbGFyZ2Uge1xuICB3aWR0aDogcmF0aW8oMywgcmVtKTtcbiAgaGVpZ2h0OiByYXRpbygzLCByZW0pO1xufVxuXG4uaWNvbi0tbG9nbyB7XG4gIHdpZHRoOiByYXRpbygyLCByZW0pO1xuICBoZWlnaHQ6IHJhdGlvKDEsIHJlbSk7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIGZpbGw6IG1hcC1nZXQoJGNvbG9yLCBicmlnaHQpO1xuICBtaXgtYmxlbmQtbW9kZTogZGlmZmVyZW5jZTtcbn1cblxuJXdoaXRlLWJhY2tncm91bmQge1xuICBiYWNrZ3JvdW5kOiBtYXAtZ2V0KCRjb2xvciwgYnJpZ2h0KTtcbn1cblxuLmljb24tLWZhY2Vib29rIHtcbiAgQGV4dGVuZCAld2hpdGUtYmFja2dyb3VuZDtcbiAgZmlsbDogIzNiNTk5ODtcbn1cblxuLmljb24tLWdvb2dsZXBsdXMge1xuICBAZXh0ZW5kICV3aGl0ZS1iYWNrZ3JvdW5kO1xuICBmaWxsOiAjZDM0ODM2O1xufVxuXG4uaWNvbi0tdHdpdHRlciB7XG4gIEBleHRlbmQgJXdoaXRlLWJhY2tncm91bmQ7XG4gIGZpbGw6ICM0MDkwZmY7XG59XG5cbi8vIEZvbnQgaWNvbnNcblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnaWNvbW9vbic7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgc3JjOiB1cmwoJy4uL2ZvbnRzL2ljb21vb24uZW90Jyk7XG4gIHNyYzogdXJsKCcuLi9mb250cy9pY29tb29uLmVvdCNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgIHVybCgnLi4vZm9udHMvaWNvbW9vbi50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2ljb21vb24ud29mZicpIGZvcm1hdCgnd29mZicpLFxuICAgICAgICAgdXJsKCcuLi9mb250cy9pY29tb29uLnN2ZyNpY29tb29uJykgZm9ybWF0KCdzdmcnKTtcbn1cblxuLmZpY29uOjpiZWZvcmUge1xuICBmb250LWZhbWlseTogJ2ljb21vb24nO1xuICBsaW5lLWhlaWdodDogMTtcbiAgbWFyZ2luLXJpZ2h0OiAuM3JlbTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgc3BlYWs6IG5vbmU7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xufVxuXG4uZmljb24tLWxpc3Q6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU5MDAnO1xufVxuXG4uZmljb24tLWxvY2F0aW9uOjpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlOTAxJztcbn1cblxuLmZpY29uLS1oZWFydDo6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTkwMic7XG59XG5cbi5maWNvbi0tdXNlcjo6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTkwMyc7XG59XG5cbi5maWNvbi0tZ2lmdDo6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTkwNCc7XG59XG5cbi5maWNvbi0tc2hvcHBpbmctY2FydDo6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTkwNSc7XG59XG4iLCIvLyAgICAgXyAgICAgICAgICAgIF8gICAgICAgICAgIF8gICAgICAgICAgICAgICAgICAgICAgICAgICBfIF9cbi8vICAgIChfKSAgICAgICAgICB8IHwgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICAgICAgICAgfCAoXylcbi8vICAgICBfIF8gX18gICBfX198IHxfICAgXyAgX198IHwgX19fICAgXyBfXyBfX18gICBfX18gIF9ffCB8XyAgX18gX1xuLy8gICAgfCB8ICdfIFxcIC8gX198IHwgfCB8IHwvIF9gIHwvIF8gXFwgfCAnXyBgIF8gXFwgLyBfIFxcLyBfYCB8IHwvIF9gIHxcbi8vICAgIHwgfCB8IHwgfCAoX198IHwgfF98IHwgKF98IHwgIF9fLyB8IHwgfCB8IHwgfCAgX18vIChffCB8IHwgKF98IHxcbi8vICAgIHxffF98IHxffFxcX19ffF98XFxfXyxffFxcX18sX3xcXF9fX3wgfF98IHxffCB8X3xcXF9fX3xcXF9fLF98X3xcXF9fLF98XG4vL1xuLy8gICAgICBTaW1wbGUsIGVsZWdhbnQgYW5kIG1haW50YWluYWJsZSBtZWRpYSBxdWVyaWVzIGluIFNhc3Ncbi8vICAgICAgICAgICAgICAgICAgICAgICAgdjEuNC4xXG4vL1xuLy8gICAgICAgICAgICAgICAgaHR0cDovL2luY2x1ZGUtbWVkaWEuY29tXG4vL1xuLy8gICAgICAgICBBdXRob3JzOiBFZHVhcmRvIEJvdWNhcyAoQGVkdWFyZG9ib3VjYXMpXG4vLyAgICAgICAgICAgICAgICAgIEh1Z28gR2lyYXVkZWwgKEBodWdvZ2lyYXVkZWwpXG4vL1xuLy8gICAgICBUaGlzIHByb2plY3QgaXMgbGljZW5zZWQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBNSVQgbGljZW5zZVxuXG5cbi8vLy9cbi8vLyBpbmNsdWRlLW1lZGlhIGxpYnJhcnkgcHVibGljIGNvbmZpZ3VyYXRpb25cbi8vLyBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLy9cblxuXG4vLy9cbi8vLyBDcmVhdGVzIGEgbGlzdCBvZiBnbG9iYWwgYnJlYWtwb2ludHNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc2luZ2xlIGJyZWFrcG9pbnQgd2l0aCB0aGUgbGFiZWwgYHBob25lYFxuLy8vICAkYnJlYWtwb2ludHM6ICgncGhvbmUnOiAzMjBweCk7XG4vLy9cbiRicmVha3BvaW50czogKFxuICAncGhvbmUnOiAzMjBweCxcbiAgJ3RhYmxldCc6IDc2OHB4LFxuICAnZGVza3RvcCc6IDEwMjRweFxuKSAhZGVmYXVsdDtcblxuXG4vLy9cbi8vLyBDcmVhdGVzIGEgbGlzdCBvZiBzdGF0aWMgZXhwcmVzc2lvbnMgb3IgbWVkaWEgdHlwZXNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc2luZ2xlIG1lZGlhIHR5cGUgKHNjcmVlbilcbi8vLyAgJG1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbic6ICdzY3JlZW4nKTtcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc3RhdGljIGV4cHJlc3Npb24gd2l0aCBsb2dpY2FsIGRpc2p1bmN0aW9uIChPUiBvcGVyYXRvcilcbi8vLyAgJG1lZGlhLWV4cHJlc3Npb25zOiAoXG4vLy8gICAgJ3JldGluYTJ4JzogJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSknXG4vLy8gICk7XG4vLy9cbiRtZWRpYS1leHByZXNzaW9uczogKFxuICAnc2NyZWVuJzogJ3NjcmVlbicsXG4gICdwcmludCc6ICdwcmludCcsXG4gICdoYW5kaGVsZCc6ICdoYW5kaGVsZCcsXG4gICdsYW5kc2NhcGUnOiAnKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpJyxcbiAgJ3BvcnRyYWl0JzogJyhvcmllbnRhdGlvbjogcG9ydHJhaXQpJyxcbiAgJ3JldGluYTJ4JzogJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSknLFxuICAncmV0aW5hM3gnOiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMyksIChtaW4tcmVzb2x1dGlvbjogMzUwZHBpKSdcbikgIWRlZmF1bHQ7XG5cblxuLy8vXG4vLy8gRGVmaW5lcyBhIG51bWJlciB0byBiZSBhZGRlZCBvciBzdWJ0cmFjdGVkIGZyb20gZWFjaCB1bml0IHdoZW4gZGVjbGFyaW5nIGJyZWFrcG9pbnRzIHdpdGggZXhjbHVzaXZlIGludGVydmFsc1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciBwaXhlbHMgaXMgZGVmaW5lZCBhcyBgMWAgYnkgZGVmYXVsdFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPjEyOHB4Jykge31cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIEBtZWRpYSAobWluLXdpZHRoOiAxMjlweCkge31cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgZW1zIGlzIGRlZmluZWQgYXMgYDAuMDFgIGJ5IGRlZmF1bHRcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz4yMGVtJykge31cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIEBtZWRpYSAobWluLXdpZHRoOiAyMC4wMWVtKSB7fVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciByZW1zIGlzIGRlZmluZWQgYXMgYDAuMWAgYnkgZGVmYXVsdCwgdG8gYmUgdXNlZCB3aXRoIGBmb250LXNpemU6IDYyLjUlO2Bcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz4yLjByZW0nKSB7fVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgQG1lZGlhIChtaW4td2lkdGg6IDIuMXJlbSkge31cbi8vL1xuJHVuaXQtaW50ZXJ2YWxzOiAoXG4gICdweCc6IDEsXG4gICdlbSc6IDAuMDEsXG4gICdyZW0nOiAwLjFcbikgIWRlZmF1bHQ7XG5cbi8vL1xuLy8vIERlZmluZXMgd2hldGhlciBzdXBwb3J0IGZvciBtZWRpYSBxdWVyaWVzIGlzIGF2YWlsYWJsZSwgdXNlZnVsIGZvciBjcmVhdGluZyBzZXBhcmF0ZSBzdHlsZXNoZWV0c1xuLy8vIGZvciBicm93c2VycyB0aGF0IGRvbid0IHN1cHBvcnQgbWVkaWEgcXVlcmllcy5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBEaXNhYmxlcyBzdXBwb3J0IGZvciBtZWRpYSBxdWVyaWVzXG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49dGFibGV0Jykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIC5mb28ge1xuLy8vICAgIGNvbG9yOiB0b21hdG87XG4vLy8gIH1cbi8vL1xuJGltLW1lZGlhLXN1cHBvcnQ6IHRydWUgIWRlZmF1bHQ7XG5cbi8vL1xuLy8vIFNlbGVjdHMgd2hpY2ggYnJlYWtwb2ludCB0byBlbXVsYXRlIHdoZW4gc3VwcG9ydCBmb3IgbWVkaWEgcXVlcmllcyBpcyBkaXNhYmxlZC4gTWVkaWEgcXVlcmllcyB0aGF0IHN0YXJ0IGF0IG9yXG4vLy8gaW50ZXJjZXB0IHRoZSBicmVha3BvaW50IHdpbGwgYmUgZGlzcGxheWVkLCBhbnkgb3RoZXJzIHdpbGwgYmUgaWdub3JlZC5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgc2hvdyBiZWNhdXNlIGl0IGludGVyY2VwdHMgdGhlIHN0YXRpYyBicmVha3BvaW50XG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJztcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49dGFibGV0Jykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIC5mb28ge1xuLy8vICAgIGNvbG9yOiB0b21hdG87XG4vLy8gIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgTk9UIHNob3cgYmVjYXVzZSBpdCBkb2VzIG5vdCBpbnRlcmNlcHQgdGhlIGRlc2t0b3AgYnJlYWtwb2ludFxuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gICRpbS1uby1tZWRpYS1icmVha3BvaW50OiAndGFibGV0Jztcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49ZGVza3RvcCcpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgLyogTm8gb3V0cHV0ICovXG4vLy9cbiRpbS1uby1tZWRpYS1icmVha3BvaW50OiAnZGVza3RvcCcgIWRlZmF1bHQ7XG5cbi8vL1xuLy8vIFNlbGVjdHMgd2hpY2ggbWVkaWEgZXhwcmVzc2lvbnMgYXJlIGFsbG93ZWQgaW4gYW4gZXhwcmVzc2lvbiBmb3IgaXQgdG8gYmUgdXNlZCB3aGVuIG1lZGlhIHF1ZXJpZXNcbi8vLyBhcmUgbm90IHN1cHBvcnRlZC5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgc2hvdyBiZWNhdXNlIGl0IGludGVyY2VwdHMgdGhlIHN0YXRpYyBicmVha3BvaW50IGFuZCBjb250YWlucyBvbmx5IGFjY2VwdGVkIG1lZGlhIGV4cHJlc3Npb25zXG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJztcbi8vLyAgJGltLW5vLW1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbicpO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnLCAnc2NyZWVuJykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICAgLmZvbyB7XG4vLy8gICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVGhpcyBtZWRpYSBxdWVyeSB3aWxsIE5PVCBzaG93IGJlY2F1c2UgaXQgaW50ZXJjZXB0cyB0aGUgc3RhdGljIGJyZWFrcG9pbnQgYnV0IGNvbnRhaW5zIGEgbWVkaWEgZXhwcmVzc2lvbiB0aGF0IGlzIG5vdCBhY2NlcHRlZFxuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gICRpbS1uby1tZWRpYS1icmVha3BvaW50OiAnZGVza3RvcCc7XG4vLy8gICRpbS1uby1tZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nKTtcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49dGFibGV0JywgJ3JldGluYTJ4Jykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBObyBvdXRwdXQgKi9cbi8vL1xuJGltLW5vLW1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbicsICdwb3J0cmFpdCcsICdsYW5kc2NhcGUnKSAhZGVmYXVsdDtcblxuLy8vL1xuLy8vIENyb3NzLWVuZ2luZSBsb2dnaW5nIGVuZ2luZVxuLy8vIEBhdXRob3IgSHVnbyBHaXJhdWRlbFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vL1xuXG5cbi8vL1xuLy8vIExvZyBhIG1lc3NhZ2UgZWl0aGVyIHdpdGggYEBlcnJvcmAgaWYgc3VwcG9ydGVkXG4vLy8gZWxzZSB3aXRoIGBAd2FybmAsIHVzaW5nIGBmZWF0dXJlLWV4aXN0cygnYXQtZXJyb3InKWBcbi8vLyB0byBkZXRlY3Qgc3VwcG9ydC5cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbWVzc2FnZSAtIE1lc3NhZ2UgdG8gbG9nXG4vLy9cbkBmdW5jdGlvbiBsb2coJG1lc3NhZ2UpIHtcbiAgQGlmIGZlYXR1cmUtZXhpc3RzKCdhdC1lcnJvcicpIHtcbiAgICBAZXJyb3IgJG1lc3NhZ2U7XG4gIH0gQGVsc2Uge1xuICAgIEB3YXJuICRtZXNzYWdlO1xuICAgICRfOiBub29wKCk7XG4gIH1cblxuICBAcmV0dXJuICRtZXNzYWdlO1xufVxuXG5cbi8vL1xuLy8vIFdyYXBwZXIgbWl4aW4gZm9yIHRoZSBsb2cgZnVuY3Rpb24gc28gaXQgY2FuIGJlIHVzZWQgd2l0aCBhIG1vcmUgZnJpZW5kbHlcbi8vLyBBUEkgdGhhbiBgQGlmIGxvZygnLi4nKSB7fWAgb3IgYCRfOiBsb2coJy4uJylgLiBCYXNpY2FsbHksIHVzZSB0aGUgZnVuY3Rpb25cbi8vLyB3aXRoaW4gZnVuY3Rpb25zIGJlY2F1c2UgaXQgaXMgbm90IHBvc3NpYmxlIHRvIGluY2x1ZGUgYSBtaXhpbiBpbiBhIGZ1bmN0aW9uXG4vLy8gYW5kIHVzZSB0aGUgbWl4aW4gZXZlcnl3aGVyZSBlbHNlIGJlY2F1c2UgaXQncyBtdWNoIG1vcmUgZWxlZ2FudC5cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbWVzc2FnZSAtIE1lc3NhZ2UgdG8gbG9nXG4vLy9cbkBtaXhpbiBsb2coJG1lc3NhZ2UpIHtcbiAgQGlmIGxvZygkbWVzc2FnZSkge31cbn1cblxuXG4vLy9cbi8vLyBGdW5jdGlvbiB3aXRoIG5vIGBAcmV0dXJuYCBjYWxsZWQgbmV4dCB0byBgQHdhcm5gIGluIFNhc3MgMy4zXG4vLy8gdG8gdHJpZ2dlciBhIGNvbXBpbGluZyBlcnJvciBhbmQgc3RvcCB0aGUgcHJvY2Vzcy5cbi8vL1xuQGZ1bmN0aW9uIG5vb3AoKSB7fVxuXG4vLy9cbi8vLyBEZXRlcm1pbmVzIHdoZXRoZXIgYSBsaXN0IG9mIGNvbmRpdGlvbnMgaXMgaW50ZXJjZXB0ZWQgYnkgdGhlIHN0YXRpYyBicmVha3BvaW50LlxuLy8vXG4vLy8gQHBhcmFtIHtBcmdsaXN0fSAgICRjb25kaXRpb25zICAtIE1lZGlhIHF1ZXJ5IGNvbmRpdGlvbnNcbi8vL1xuLy8vIEByZXR1cm4ge0Jvb2xlYW59IC0gUmV0dXJucyB0cnVlIGlmIHRoZSBjb25kaXRpb25zIGFyZSBpbnRlcmNlcHRlZCBieSB0aGUgc3RhdGljIGJyZWFrcG9pbnRcbi8vL1xuQGZ1bmN0aW9uIGltLWludGVyY2VwdHMtc3RhdGljLWJyZWFrcG9pbnQoJGNvbmRpdGlvbnMuLi4pIHtcbiAgJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWU6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludCk7XG5cbiAgQGlmIG5vdCAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZSB7XG4gICAgQGlmIGxvZygnYCN7JGltLW5vLW1lZGlhLWJyZWFrcG9pbnR9YCBpcyBub3QgYSB2YWxpZCBicmVha3BvaW50LicpIHt9XG4gIH1cblxuICBAZWFjaCAkY29uZGl0aW9uIGluICRjb25kaXRpb25zIHtcbiAgICBAaWYgbm90IG1hcC1oYXMta2V5KCRtZWRpYS1leHByZXNzaW9ucywgJGNvbmRpdGlvbikge1xuICAgICAgJG9wZXJhdG9yOiBnZXQtZXhwcmVzc2lvbi1vcGVyYXRvcigkY29uZGl0aW9uKTtcbiAgICAgICRwcmVmaXg6IGdldC1leHByZXNzaW9uLXByZWZpeCgkb3BlcmF0b3IpO1xuICAgICAgJHZhbHVlOiBnZXQtZXhwcmVzc2lvbi12YWx1ZSgkY29uZGl0aW9uLCAkb3BlcmF0b3IpO1xuXG4gICAgICBAaWYgKCRwcmVmaXggPT0gJ21heCcgYW5kICR2YWx1ZSA8PSAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZSkgb3JcbiAgICAgICAgICAoJHByZWZpeCA9PSAnbWluJyBhbmQgJHZhbHVlID4gJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWUpIHtcbiAgICAgICAgQHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmIG5vdCBpbmRleCgkaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnMsICRjb25kaXRpb24pIHtcbiAgICAgIEByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiB0cnVlO1xufVxuXG4vLy8vXG4vLy8gUGFyc2luZyBlbmdpbmVcbi8vLyBAYXV0aG9yIEh1Z28gR2lyYXVkZWxcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLy9cblxuXG4vLy9cbi8vLyBHZXQgb3BlcmF0b3Igb2YgYW4gZXhwcmVzc2lvblxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRleHByZXNzaW9uIC0gRXhwcmVzc2lvbiB0byBleHRyYWN0IG9wZXJhdG9yIGZyb21cbi8vL1xuLy8vIEByZXR1cm4ge1N0cmluZ30gLSBBbnkgb2YgYD49YCwgYD5gLCBgPD1gLCBgPGAsIGDiiaVgLCBg4omkYFxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tb3BlcmF0b3IoJGV4cHJlc3Npb24pIHtcbiAgQGVhY2ggJG9wZXJhdG9yIGluICgnPj0nLCAnPicsICc8PScsICc8JywgJ+KJpScsICfiiaQnKSB7XG4gICAgQGlmIHN0ci1pbmRleCgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKSB7XG4gICAgICBAcmV0dXJuICRvcGVyYXRvcjtcbiAgICB9XG4gIH1cblxuICAvLyBJdCBpcyBub3QgcG9zc2libGUgdG8gaW5jbHVkZSBhIG1peGluIGluc2lkZSBhIGZ1bmN0aW9uLCBzbyB3ZSBoYXZlIHRvXG4gIC8vIHJlbHkgb24gdGhlIGBsb2coLi4pYCBmdW5jdGlvbiByYXRoZXIgdGhhbiB0aGUgYGxvZyguLilgIG1peGluLiBCZWNhdXNlXG4gIC8vIGZ1bmN0aW9ucyBjYW5ub3QgYmUgY2FsbGVkIGFueXdoZXJlIGluIFNhc3MsIHdlIG5lZWQgdG8gaGFjayB0aGUgY2FsbCBpblxuICAvLyBhIGR1bW15IHZhcmlhYmxlLCBzdWNoIGFzIGAkX2AuIElmIGFueWJvZHkgZXZlciByYWlzZSBhIHNjb3BpbmcgaXNzdWUgd2l0aFxuICAvLyBTYXNzIDMuMywgY2hhbmdlIHRoaXMgbGluZSBpbiBgQGlmIGxvZyguLikge31gIGluc3RlYWQuXG4gICRfOiBsb2coJ05vIG9wZXJhdG9yIGZvdW5kIGluIGAjeyRleHByZXNzaW9ufWAuJyk7XG59XG5cblxuLy8vXG4vLy8gR2V0IGRpbWVuc2lvbiBvZiBhbiBleHByZXNzaW9uLCBiYXNlZCBvbiBhIGZvdW5kIG9wZXJhdG9yXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIGV4dHJhY3QgZGltZW5zaW9uIGZyb21cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG9wZXJhdG9yIC0gT3BlcmF0b3IgZnJvbSBgJGV4cHJlc3Npb25gXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gYHdpZHRoYCBvciBgaGVpZ2h0YCAob3IgcG90ZW50aWFsbHkgYW55dGhpbmcgZWxzZSlcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLWRpbWVuc2lvbigkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKSB7XG4gICRvcGVyYXRvci1pbmRleDogc3RyLWluZGV4KCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuICAkcGFyc2VkLWRpbWVuc2lvbjogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAwLCAkb3BlcmF0b3ItaW5kZXggLSAxKTtcbiAgJGRpbWVuc2lvbjogJ3dpZHRoJztcblxuICBAaWYgc3RyLWxlbmd0aCgkcGFyc2VkLWRpbWVuc2lvbikgPiAwIHtcbiAgICAkZGltZW5zaW9uOiAkcGFyc2VkLWRpbWVuc2lvbjtcbiAgfVxuXG4gIEByZXR1cm4gJGRpbWVuc2lvbjtcbn1cblxuXG4vLy9cbi8vLyBHZXQgZGltZW5zaW9uIHByZWZpeCBiYXNlZCBvbiBhbiBvcGVyYXRvclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRvcGVyYXRvciAtIE9wZXJhdG9yXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gYG1pbmAgb3IgYG1heGBcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLXByZWZpeCgkb3BlcmF0b3IpIHtcbiAgQHJldHVybiBpZihpbmRleCgoJzwnLCAnPD0nLCAn4omkJyksICRvcGVyYXRvciksICdtYXgnLCAnbWluJyk7XG59XG5cblxuLy8vXG4vLy8gR2V0IHZhbHVlIG9mIGFuIGV4cHJlc3Npb24sIGJhc2VkIG9uIGEgZm91bmQgb3BlcmF0b3Jcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gZXh0cmFjdCB2YWx1ZSBmcm9tXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRvcGVyYXRvciAtIE9wZXJhdG9yIGZyb20gYCRleHByZXNzaW9uYFxuLy8vXG4vLy8gQHJldHVybiB7TnVtYmVyfSAtIEEgbnVtZXJpYyB2YWx1ZVxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tdmFsdWUoJGV4cHJlc3Npb24sICRvcGVyYXRvcikge1xuICAkb3BlcmF0b3ItaW5kZXg6IHN0ci1pbmRleCgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKTtcbiAgJHZhbHVlOiBzdHItc2xpY2UoJGV4cHJlc3Npb24sICRvcGVyYXRvci1pbmRleCArIHN0ci1sZW5ndGgoJG9wZXJhdG9yKSk7XG5cbiAgQGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJHZhbHVlKSB7XG4gICAgJHZhbHVlOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJHZhbHVlKTtcbiAgfSBAZWxzZSB7XG4gICAgJHZhbHVlOiB0by1udW1iZXIoJHZhbHVlKTtcbiAgfVxuXG4gICRpbnRlcnZhbDogbWFwLWdldCgkdW5pdC1pbnRlcnZhbHMsIHVuaXQoJHZhbHVlKSk7XG5cbiAgQGlmIG5vdCAkaW50ZXJ2YWwge1xuICAgIC8vIEl0IGlzIG5vdCBwb3NzaWJsZSB0byBpbmNsdWRlIGEgbWl4aW4gaW5zaWRlIGEgZnVuY3Rpb24sIHNvIHdlIGhhdmUgdG9cbiAgICAvLyByZWx5IG9uIHRoZSBgbG9nKC4uKWAgZnVuY3Rpb24gcmF0aGVyIHRoYW4gdGhlIGBsb2coLi4pYCBtaXhpbi4gQmVjYXVzZVxuICAgIC8vIGZ1bmN0aW9ucyBjYW5ub3QgYmUgY2FsbGVkIGFueXdoZXJlIGluIFNhc3MsIHdlIG5lZWQgdG8gaGFjayB0aGUgY2FsbCBpblxuICAgIC8vIGEgZHVtbXkgdmFyaWFibGUsIHN1Y2ggYXMgYCRfYC4gSWYgYW55Ym9keSBldmVyIHJhaXNlIGEgc2NvcGluZyBpc3N1ZSB3aXRoXG4gICAgLy8gU2FzcyAzLjMsIGNoYW5nZSB0aGlzIGxpbmUgaW4gYEBpZiBsb2coLi4pIHt9YCBpbnN0ZWFkLlxuICAgICRfOiBsb2coJ1Vua25vd24gdW5pdCBgI3t1bml0KCR2YWx1ZSl9YC4nKTtcbiAgfVxuXG4gIEBpZiAkb3BlcmF0b3IgPT0gJz4nIHtcbiAgICAkdmFsdWU6ICR2YWx1ZSArICRpbnRlcnZhbDtcbiAgfSBAZWxzZSBpZiAkb3BlcmF0b3IgPT0gJzwnIHtcbiAgICAkdmFsdWU6ICR2YWx1ZSAtICRpbnRlcnZhbDtcbiAgfVxuXG4gIEByZXR1cm4gJHZhbHVlO1xufVxuXG5cbi8vL1xuLy8vIFBhcnNlIGFuIGV4cHJlc3Npb24gdG8gcmV0dXJuIGEgdmFsaWQgbWVkaWEtcXVlcnkgZXhwcmVzc2lvblxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRleHByZXNzaW9uIC0gRXhwcmVzc2lvbiB0byBwYXJzZVxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIFZhbGlkIG1lZGlhIHF1ZXJ5XG4vLy9cbkBmdW5jdGlvbiBwYXJzZS1leHByZXNzaW9uKCRleHByZXNzaW9uKSB7XG4gIC8vIElmIGl0IGlzIHBhcnQgb2YgJG1lZGlhLWV4cHJlc3Npb25zLCBpdCBoYXMgbm8gb3BlcmF0b3JcbiAgLy8gdGhlbiB0aGVyZSBpcyBubyBuZWVkIHRvIGdvIGFueSBmdXJ0aGVyLCBqdXN0IHJldHVybiB0aGUgdmFsdWVcbiAgQGlmIG1hcC1oYXMta2V5KCRtZWRpYS1leHByZXNzaW9ucywgJGV4cHJlc3Npb24pIHtcbiAgICBAcmV0dXJuIG1hcC1nZXQoJG1lZGlhLWV4cHJlc3Npb25zLCAkZXhwcmVzc2lvbik7XG4gIH1cblxuICAkb3BlcmF0b3I6IGdldC1leHByZXNzaW9uLW9wZXJhdG9yKCRleHByZXNzaW9uKTtcbiAgJGRpbWVuc2lvbjogZ2V0LWV4cHJlc3Npb24tZGltZW5zaW9uKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuICAkcHJlZml4OiBnZXQtZXhwcmVzc2lvbi1wcmVmaXgoJG9wZXJhdG9yKTtcbiAgJHZhbHVlOiBnZXQtZXhwcmVzc2lvbi12YWx1ZSgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKTtcblxuICBAcmV0dXJuICcoI3skcHJlZml4fS0jeyRkaW1lbnNpb259OiAjeyR2YWx1ZX0pJztcbn1cblxuLy8vXG4vLy8gU2xpY2UgYCRsaXN0YCBiZXR3ZWVuIGAkc3RhcnRgIGFuZCBgJGVuZGAgaW5kZXhlc1xuLy8vXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy9cbi8vLyBAcGFyYW0ge0xpc3R9ICRsaXN0IC0gTGlzdCB0byBzbGljZVxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkc3RhcnQgWzFdIC0gU3RhcnQgaW5kZXhcbi8vLyBAcGFyYW0ge051bWJlcn0gJGVuZCBbbGVuZ3RoKCRsaXN0KV0gLSBFbmQgaW5kZXhcbi8vL1xuLy8vIEByZXR1cm4ge0xpc3R9IFNsaWNlZCBsaXN0XG4vLy9cbkBmdW5jdGlvbiBzbGljZSgkbGlzdCwgJHN0YXJ0OiAxLCAkZW5kOiBsZW5ndGgoJGxpc3QpKSB7XG4gIEBpZiBsZW5ndGgoJGxpc3QpIDwgMSBvciAkc3RhcnQgPiAkZW5kIHtcbiAgICBAcmV0dXJuICgpO1xuICB9XG5cbiAgJHJlc3VsdDogKCk7XG5cbiAgQGZvciAkaSBmcm9tICRzdGFydCB0aHJvdWdoICRlbmQge1xuICAgICRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCBudGgoJGxpc3QsICRpKSk7XG4gIH1cblxuICBAcmV0dXJuICRyZXN1bHQ7XG59XG5cbi8vLy9cbi8vLyBTdHJpbmcgdG8gbnVtYmVyIGNvbnZlcnRlclxuLy8vIEBhdXRob3IgSHVnbyBHaXJhdWRlbFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vL1xuXG5cbi8vL1xuLy8vIENhc3RzIGEgc3RyaW5nIGludG8gYSBudW1iZXJcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nIHwgTnVtYmVyfSAkdmFsdWUgLSBWYWx1ZSB0byBiZSBwYXJzZWRcbi8vL1xuLy8vIEByZXR1cm4ge051bWJlcn1cbi8vL1xuQGZ1bmN0aW9uIHRvLW51bWJlcigkdmFsdWUpIHtcbiAgQGlmIHR5cGUtb2YoJHZhbHVlKSA9PSAnbnVtYmVyJyB7XG4gICAgQHJldHVybiAkdmFsdWU7XG4gIH0gQGVsc2UgaWYgdHlwZS1vZigkdmFsdWUpICE9ICdzdHJpbmcnIHtcbiAgICAkXzogbG9nKCdWYWx1ZSBmb3IgYHRvLW51bWJlcmAgc2hvdWxkIGJlIGEgbnVtYmVyIG9yIGEgc3RyaW5nLicpO1xuICB9XG5cbiAgJHJlc3VsdDogMDtcbiAgJGRpZ2l0czogMDtcbiAgJG1pbnVzOiBzdHItc2xpY2UoJHZhbHVlLCAxLCAxKSA9PSAnLSc7XG4gICRudW1iZXJzOiAoJzAnOiAwLCAnMSc6IDEsICcyJzogMiwgJzMnOiAzLCAnNCc6IDQsICc1JzogNSwgJzYnOiA2LCAnNyc6IDcsICc4JzogOCwgJzknOiA5KTtcblxuICBAZm9yICRpIGZyb20gaWYoJG1pbnVzLCAyLCAxKSB0aHJvdWdoIHN0ci1sZW5ndGgoJHZhbHVlKSB7XG4gICAgJGNoYXJhY3Rlcjogc3RyLXNsaWNlKCR2YWx1ZSwgJGksICRpKTtcblxuICAgIEBpZiBub3QgKGluZGV4KG1hcC1rZXlzKCRudW1iZXJzKSwgJGNoYXJhY3Rlcikgb3IgJGNoYXJhY3RlciA9PSAnLicpIHtcbiAgICAgIEByZXR1cm4gdG8tbGVuZ3RoKGlmKCRtaW51cywgLSRyZXN1bHQsICRyZXN1bHQpLCBzdHItc2xpY2UoJHZhbHVlLCAkaSkpXG4gICAgfVxuXG4gICAgQGlmICRjaGFyYWN0ZXIgPT0gJy4nIHtcbiAgICAgICRkaWdpdHM6IDE7XG4gICAgfSBAZWxzZSBpZiAkZGlnaXRzID09IDAge1xuICAgICAgJHJlc3VsdDogJHJlc3VsdCAqIDEwICsgbWFwLWdldCgkbnVtYmVycywgJGNoYXJhY3Rlcik7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkZGlnaXRzOiAkZGlnaXRzICogMTA7XG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICsgbWFwLWdldCgkbnVtYmVycywgJGNoYXJhY3RlcikgLyAkZGlnaXRzO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gaWYoJG1pbnVzLCAtJHJlc3VsdCwgJHJlc3VsdCk7O1xufVxuXG5cbi8vL1xuLy8vIEFkZCBgJHVuaXRgIHRvIGAkdmFsdWVgXG4vLy9cbi8vLyBAcGFyYW0ge051bWJlcn0gJHZhbHVlIC0gVmFsdWUgdG8gYWRkIHVuaXQgdG9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJHVuaXQgLSBTdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIHVuaXRcbi8vL1xuLy8vIEByZXR1cm4ge051bWJlcn0gLSBgJHZhbHVlYCBleHByZXNzZWQgaW4gYCR1bml0YFxuLy8vXG5AZnVuY3Rpb24gdG8tbGVuZ3RoKCR2YWx1ZSwgJHVuaXQpIHtcbiAgJHVuaXRzOiAoJ3B4JzogMXB4LCAnY20nOiAxY20sICdtbSc6IDFtbSwgJyUnOiAxJSwgJ2NoJzogMWNoLCAncGMnOiAxcGMsICdpbic6IDFpbiwgJ2VtJzogMWVtLCAncmVtJzogMXJlbSwgJ3B0JzogMXB0LCAnZXgnOiAxZXgsICd2dyc6IDF2dywgJ3ZoJzogMXZoLCAndm1pbic6IDF2bWluLCAndm1heCc6IDF2bWF4KTtcblxuICBAaWYgbm90IGluZGV4KG1hcC1rZXlzKCR1bml0cyksICR1bml0KSB7XG4gICAgJF86IGxvZygnSW52YWxpZCB1bml0IGAjeyR1bml0fWAuJyk7XG4gIH1cblxuICBAcmV0dXJuICR2YWx1ZSAqIG1hcC1nZXQoJHVuaXRzLCAkdW5pdCk7XG59XG5cbi8vL1xuLy8vIFRoaXMgbWl4aW4gYWltcyBhdCByZWRlZmluaW5nIHRoZSBjb25maWd1cmF0aW9uIGp1c3QgZm9yIHRoZSBzY29wZSBvZlxuLy8vIHRoZSBjYWxsLiBJdCBpcyBoZWxwZnVsIHdoZW4gaGF2aW5nIGEgY29tcG9uZW50IG5lZWRpbmcgYW4gZXh0ZW5kZWRcbi8vLyBjb25maWd1cmF0aW9uIHN1Y2ggYXMgY3VzdG9tIGJyZWFrcG9pbnRzIChyZWZlcnJlZCB0byBhcyB0d2Vha3BvaW50cylcbi8vLyBmb3IgaW5zdGFuY2UuXG4vLy9cbi8vLyBAYXV0aG9yIEh1Z28gR2lyYXVkZWxcbi8vL1xuLy8vIEBwYXJhbSB7TWFwfSAkdHdlYWtwb2ludHMgWygpXSAtIE1hcCBvZiB0d2Vha3BvaW50cyB0byBiZSBtZXJnZWQgd2l0aCBgJGJyZWFrcG9pbnRzYFxuLy8vIEBwYXJhbSB7TWFwfSAkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnMgWygpXSAtIE1hcCBvZiB0d2Vha2VkIG1lZGlhIGV4cHJlc3Npb25zIHRvIGJlIG1lcmdlZCB3aXRoIGAkbWVkaWEtZXhwcmVzc2lvbmBcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBFeHRlbmQgdGhlIGdsb2JhbCBicmVha3BvaW50cyB3aXRoIGEgdHdlYWtwb2ludFxuLy8vICBAaW5jbHVkZSBtZWRpYS1jb250ZXh0KCgnY3VzdG9tJzogNjc4cHgpKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBAaW5jbHVkZSBtZWRpYSgnPnBob25lJywgJzw9Y3VzdG9tJykge1xuLy8vICAgICAgIC8vIC4uLlxuLy8vICAgICAgfVxuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEV4dGVuZCB0aGUgZ2xvYmFsIG1lZGlhIGV4cHJlc3Npb25zIHdpdGggYSBjdXN0b20gb25lXG4vLy8gIEBpbmNsdWRlIG1lZGlhLWNvbnRleHQoJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zOiAoJ2FsbCc6ICdhbGwnKSkge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgQGluY2x1ZGUgbWVkaWEoJ2FsbCcsICc+cGhvbmUnKSB7XG4vLy8gICAgICAgLy8gLi4uXG4vLy8gICAgICB9XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRXh0ZW5kIGJvdGggY29uZmlndXJhdGlvbiBtYXBzXG4vLy8gIEBpbmNsdWRlIG1lZGlhLWNvbnRleHQoKCdjdXN0b20nOiA2NzhweCksICgnYWxsJzogJ2FsbCcpKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBAaW5jbHVkZSBtZWRpYSgnYWxsJywgJz5waG9uZScsICc8PWN1c3RvbScpIHtcbi8vLyAgICAgICAvLyAuLi5cbi8vLyAgICAgIH1cbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuQG1peGluIG1lZGlhLWNvbnRleHQoJHR3ZWFrcG9pbnRzOiAoKSwgJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zOiAoKSkge1xuICAvLyBTYXZlIGdsb2JhbCBjb25maWd1cmF0aW9uXG4gICRnbG9iYWwtYnJlYWtwb2ludHM6ICRicmVha3BvaW50cztcbiAgJGdsb2JhbC1tZWRpYS1leHByZXNzaW9uczogJG1lZGlhLWV4cHJlc3Npb25zO1xuXG4gIC8vIFVwZGF0ZSBnbG9iYWwgY29uZmlndXJhdGlvblxuICAkYnJlYWtwb2ludHM6IG1hcC1tZXJnZSgkYnJlYWtwb2ludHMsICR0d2Vha3BvaW50cykgIWdsb2JhbDtcbiAgJG1lZGlhLWV4cHJlc3Npb25zOiBtYXAtbWVyZ2UoJG1lZGlhLWV4cHJlc3Npb25zLCAkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnMpICFnbG9iYWw7XG5cbiAgQGNvbnRlbnQ7XG5cbiAgLy8gUmVzdG9yZSBnbG9iYWwgY29uZmlndXJhdGlvblxuICAkYnJlYWtwb2ludHM6ICRnbG9iYWwtYnJlYWtwb2ludHMgIWdsb2JhbDtcbiAgJG1lZGlhLWV4cHJlc3Npb25zOiAkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnMgIWdsb2JhbDtcbn1cblxuLy8vL1xuLy8vIGluY2x1ZGUtbWVkaWEgcHVibGljIGV4cG9zZWQgQVBJXG4vLy8gQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8vXG5cblxuLy8vXG4vLy8gR2VuZXJhdGVzIGEgbWVkaWEgcXVlcnkgYmFzZWQgb24gYSBsaXN0IG9mIGNvbmRpdGlvbnNcbi8vL1xuLy8vIEBwYXJhbSB7QXJnbGlzdH0gICAkY29uZGl0aW9ucyAgLSBNZWRpYSBxdWVyeSBjb25kaXRpb25zXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBhIHNpbmdsZSBzZXQgYnJlYWtwb2ludFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPnBob25lJykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCB0d28gc2V0IGJyZWFrcG9pbnRzXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+cGhvbmUnLCAnPD10YWJsZXQnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIGN1c3RvbSB2YWx1ZXNcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49MzU4cHgnLCAnPDg1MHB4JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBzZXQgYnJlYWtwb2ludHMgd2l0aCBjdXN0b20gdmFsdWVzXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+ZGVza3RvcCcsICc8PTEzNTBweCcpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggYSBzdGF0aWMgZXhwcmVzc2lvblxuLy8vICBAaW5jbHVkZSBtZWRpYSgncmV0aW5hMngnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBNaXhpbmcgZXZlcnl0aGluZ1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj0zNTBweCcsICc8dGFibGV0JywgJ3JldGluYTN4JykgeyB9XG4vLy9cbkBtaXhpbiBtZWRpYSgkY29uZGl0aW9ucy4uLikge1xuICBAaWYgKCRpbS1tZWRpYS1zdXBwb3J0IGFuZCBsZW5ndGgoJGNvbmRpdGlvbnMpID09IDApIG9yXG4gICAgICAobm90ICRpbS1tZWRpYS1zdXBwb3J0IGFuZCBpbS1pbnRlcmNlcHRzLXN0YXRpYy1icmVha3BvaW50KCRjb25kaXRpb25zLi4uKSkge1xuICAgIEBjb250ZW50O1xuICB9IEBlbHNlIGlmICgkaW0tbWVkaWEtc3VwcG9ydCBhbmQgbGVuZ3RoKCRjb25kaXRpb25zKSA+IDApIHtcbiAgICBAbWVkaWEgI3t1bnF1b3RlKHBhcnNlLWV4cHJlc3Npb24obnRoKCRjb25kaXRpb25zLCAxKSkpfSB7XG4gICAgICAvLyBSZWN1cnNpdmUgY2FsbFxuICAgICAgQGluY2x1ZGUgbWVkaWEoc2xpY2UoJGNvbmRpdGlvbnMsIDIpLi4uKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */
