/**
 * Raise number to the nth power
 *
 * @param {number} $base      The base number
 * @param {number} $exponents The exponent to which to raise $base
 */
/**
 * Remove unit from numbers
 */
/**
 * The line algorythm is based on pixel size, so we're converting presumed for use
 *
 * @param {string/number} $number             Number to convert to unitless px
 * @param {string/number} $font-size-root     Number for REM conversion.
 * @param {string}        $font-or-width      Determines which default to fall back to
 */
/**
 * The line height is calculated to match relative widths to font sizes.
 *
 * The formula is from http:/*www.pearsonified.com/2011/12/golden-ratio-typography.php
 * RATIO - 1 / ( 2 * RATIO ) * ( 1 - WIDTH / ( ( FONT-SIZE * RATIO ) ^ 2 ) )
 * The formula has been simplified as such:
 * RATIO - ( - WIDTH / ( FONT-SIZE * RATIO ^ 2 + 1 ) ) / ( 2 * RATIO );
 *
 * @param {string/number} $font-size            Font size to calculate by
 * @param {string/number} $width                Width to calculate by.
 * @param {number}        $radio                Harmonic ratio used on site
 * @param {string/number} $font-size-root       PX size applied to base
 */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden],
template {
  display: none; }

a {
  background-color: transparent; }

a:active,
a:hover {
  outline: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b,
strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

h1 {
  font-size: 2em; }

mark {
  background: #ff0;
  color: #000; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -.5em; }

sub {
  bottom: -.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

hr {
  box-sizing: content-box;
  height: 0; }

pre {
  overflow: auto; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit; }

button {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled],
html input[disabled] {
  cursor: default; }

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input {
  line-height: normal; }

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0; }

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"] {
  -webkit-appearance: textfield; }

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

fieldset {
  border: 1px solid #c0c0c0;
  padding: .35em .625em .75em; }

legend {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto; }

optgroup {
  font-weight: bold; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

::-moz-selection {
  color: rgba(245, 240, 237, 0.87);
  background: #146a6c; }

::selection {
  color: rgba(245, 240, 237, 0.87);
  background: #146a6c; }

html {
  font-size: 18px; }

body {
  font: 400 1em / 1.5 'Lato', 'Helvetica Neue', Helvetica, Arial, 'Lucida Grande', sans-serif;
  color: #322c28;
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0.35); }

p,
li,
input,
textarea,
select,
label {
  font-weight: inherit;
  color: inherit;
  -webkit-font-kerning: normal;
          font-kerning: normal;
  -webkit-font-variant-ligatures: normal;
          font-variant-ligatures: normal; }

.billboard__title,
.metablock__title,
.card__title {
  font-size: 1.41421rem;
  font-weight: 400;
  line-height: 1.39846;
  letter-spacing: -.06em;
  -webkit-font-variant-ligatures: common-ligatures;
          font-variant-ligatures: common-ligatures;
  -webkit-font-kerning: normal;
          font-kerning: normal; }

.billboard__title {
  text-transform: capitalize; }

.footer, .header, .card__cta, .card__meta--country,
.card__meta--tag, .nav__action,
.nav__form, .form__cta, .billboard {
  color: rgba(245, 240, 237, 0.87); }

.form__label {
  font-weight: 700; }

.card__meta--country,
.card__meta--tag {
  font-size: 0.70711rem; }

* {
  margin: 0; }
  * + * {
    margin-top: 1.41421em; }

header, .social > *, .list--default > *, .list--unstyled > *,
.card__meta--country,
.card__meta--tag,
.switch ~ label:first-of-type,
.footer {
  margin-top: 0; }

.browse-wrap,
.wrap {
  max-width: 1215px;
  -webkit-flex: 0 86.292vw;
      -ms-flex: 0 86.292vw;
          flex: 0 86.292vw; }


.grid, .grid--column, .grid--row, .grid--center, body, .card__cta, .card__meta--country,
.card__meta--tag, .nav, .nav--hamburger, .nav__dropdown, .nav__form, .header, .billboard, .metablock {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.header, .billboard {
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }


.grid {
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }

.grid,.grid--column {
  -webkit-flex-flow: column wrap;
      -ms-flex-flow: column wrap;
          flex-flow: column wrap; }

.grid--column,.grid--row {
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.grid--row {
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap; }

.grid--space-around {
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around; }

.grid--center {
          flex-flow: row wrap;
  -webkit-flex: 1 100vw;
      -ms-flex: 1 100vw;
          flex: 1 100vw; }

.grid--center,body {
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }

body {
          flex-flow: row wrap; }

.card__cta, .card__meta--country,
.card__meta--tag {
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.grid--initial {
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -webkit-align-content: flex-start;
      -ms-flex-line-pack: start;
          align-content: flex-start; }

.grid--end {
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  -webkit-align-content: flex-end;
      -ms-flex-line-pack: end;
          align-content: flex-end; }

.grid__width--1 {
  -webkit-flex: 0 calc(33.33333% - 2rem);
      -ms-flex: 0 calc(33.33333% - 2rem);
          flex: 0 calc(33.33333% - 2rem); }

.grid__width--2 {
  -webkit-flex: 0 calc(66.66667% - 2rem);
      -ms-flex: 0 calc(66.66667% - 2rem);
          flex: 0 calc(66.66667% - 2rem); }

.grid__width--3 {
  -webkit-flex: 0 calc(100% - 2rem);
      -ms-flex: 0 calc(100% - 2rem);
          flex: 0 calc(100% - 2rem); }

.grid__block--1 {
  -webkit-flex: 1.41421;
      -ms-flex: 1.41421;
          flex: 1.41421; }

.grid__block--2 {
  -webkit-flex: 2;
      -ms-flex: 2;
          flex: 2; }

.grid__block--3 {
  -webkit-flex: 2.82843;
      -ms-flex: 2.82843;
          flex: 2.82843; }

.form__cta, .form__input, .nav__input, .link, .card__cta, .card__meta--country,
.card__meta--tag, .nav__action,
.nav__form, .card__action {
  transition: box-shadow ease-in-out 150ms;
  box-shadow: 0 0 1rem 1.41421rem transparent, inset 0 0 1rem 1.41421rem transparent; }

.form__cta:focus, .form__input:focus, .nav__input:focus, .link:focus, .card__cta:focus, .card__meta--country:focus,
.card__meta--tag:focus, .nav__action:focus,
.nav__form:focus, .card__action:focus {
  border-color: #146a6c;
  outline: none;
  box-shadow: 0 0 2rem #499671, inset 0 0 0.17678rem #499671; }

.form__cta, .form__input, .nav__input {
  border-radius: 0.70711rem; }

.form__input, .nav__input {
  padding: 0.35355rem 0.5rem; }

.card {
  margin: 1.41421rem 0;
  -webkit-flex-flow: column nowrap;
      -ms-flex-flow: column nowrap;
          flex-flow: column nowrap;
  -webkit-align-content: flex-start;
      -ms-flex-line-pack: start;
          align-content: flex-start; }

.card,.card__action {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.card__action {
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  -webkit-flex-flow: column wrap;
      -ms-flex-flow: column wrap;
          flex-flow: column wrap; }

.card__imgblock {
  width: 100%; }

.card__about {
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1; }

.card__footer {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
      -ms-flex-align: start;
          align-items: flex-start;
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap; }

.card__cta {
  height: 2.82843rem;
  white-space: nowrap;
  border-radius: 2.82843rem;
  background: #9f2e32; }

.card__meta {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
  -webkit-align-items: flex-start;
      -ms-flex-align: start;
          align-items: flex-start;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }

.card__meta--country,
.card__meta--tag {
  height: 1.41421rem;
  margin-right: 0.17678rem;
  margin-bottom: 0.17678rem;
  text-transform: uppercase;
  border-radius: 2.82843rem;
  -webkit-flex: 1 2.82843rem;
      -ms-flex: 1 2.82843rem;
          flex: 1 2.82843rem; }

.card__meta--tag {
  background: #146a6c; }

.card__meta--country {
  background: #499671; }

.switch {
  position: absolute;
  opacity: 0; }

.menu-label {
  -webkit-align-self: flex-end;
      -ms-flex-item-align: end;
          align-self: flex-end; }

.switch:checked ~ .nav--hamburger .hamburger-icon {
  -webkit-transform: scale(0);
      -ms-transform: scale(0);
          transform: scale(0); }

.switch:checked ~ .nav--hamburger .hamburger::before {
  -webkit-transform: translateY(0.4em) rotate(90deg);
      -ms-transform: translateY(0.4em) rotate(90deg);
          transform: translateY(0.4em) rotate(90deg); }

.switch:checked ~ .nav--hamburger .hamburger::after {
  -webkit-transform: translateY(-0.4em) rotate(180deg);
      -ms-transform: translateY(-0.4em) rotate(180deg);
          transform: translateY(-0.4em) rotate(180deg); }

.hamburger {
  font-size: 1rem;
  display: inline-block;
  width: 1em;
  height: 1em;
  padding: 0;
  cursor: pointer;
  transition: -webkit-transform 200ms ease-in-out;
  transition: transform 200ms ease-in-out;
  vertical-align: middle;
  border: 0 none;
  background: transparent; }

.hamburger::before,
.hamburger::after {
  content: ''; }

.hamburger::before,
.hamburger::after,
.hamburger-icon {
  display: block;
  width: 100%;
  height: .1em;
  margin: 0 0 .29em;
  transition: -webkit-transform 200ms cubic-bezier(0, 1.3, 1, 1.2);
  transition: transform 200ms cubic-bezier(0, 1.3, 1, 1.2);
  border-radius: .5em;
  background: rgba(245, 240, 237, 0.87); }

.nav {
  top: -10rem;
  width: 30vw;
  height: 0;
  transition: all 400ms cubic-bezier(0, 1.3, 1, 1.2);
  -webkit-transform: translateZ(0);
          transform: translateZ(0);
  opacity: 0;
  -webkit-flex-flow: column nowrap;
      -ms-flex-flow: column nowrap;
          flex-flow: column nowrap; }

.switch:checked ~ .nav {
  top: 0;
  width: 30vw;
  height: 100vh;
  padding: 1.41421rem;
  opacity: 1; }

.switch:not(:checked) ~ .nav {
  margin: 0; }

.nav--hamburger {
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  position: fixed;
  height: 2rem;
  padding: 0 1rem;
  width: 100vw;
  background: rgba(50, 44, 40, 0.9);
  -webkit-backdrop-filter: blur(10px) saturate(150%);
          backdrop-filter: blur(10px) saturate(150%); }

.nav__action {
  display: inline-block; }

.nav__dropdown {
  display: none;
  margin-top: 1.41421rem;
  -webkit-flex-flow: column nowrap;
      -ms-flex-flow: column nowrap;
          flex-flow: column nowrap; }

.switch:checked ~ .nav__dropdown {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.nav__input {
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1; }

.footer {
  padding: 0.25rem 0;
  background: #322c28; }

.header {
  position: fixed;
  left: 0;
  background: rgba(50, 44, 40, 0.9);
  -webkit-flex: 0 10vw;
      -ms-flex: 0 10vw;
          flex: 0 10vw;
  -webkit-backdrop-filter: blur(10px) saturate(150%);
          backdrop-filter: blur(10px) saturate(150%); }

.form__cta {
  padding: 0.5em 1.41421em;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  text-align: center;
  vertical-align: baseline;
  white-space: nowrap;
  border: 0;
  background: #710707; }

.form__cta:hover,
.form__cta:focus {
  background: #a10a0a; }

.form__cta:active {
  background: #b90b0b; }

.form__fieldset {
  position: relative;
  border-collapse: separate; }

.form__input,
.nav__input {
  color: #322c28;
  display: block;
  border: 1px solid rgba(20, 13, 10, 0.2);
  background-color: #fff;
  -webkit-appearance: none;
  -moz-appearance: none; }

.link,
.card__cta,
.card__meta--country,
.card__meta--tag,
.nav__action,
.nav__form,
.form__cta,
.card__action {
  text-decoration: none; }

.card__cta:hover, .card__meta--country:hover,
.card__meta--tag:hover, .nav__action:hover,
.nav__form:hover, .form__cta:hover,
.card__cta:focus,
.card__meta--country:focus,
.card__meta--tag:focus,
.nav__action:focus,
.nav__form:focus,
.form__cta:focus,
.card__cta:active,
.card__meta--country:active,
.card__meta--tag:active,
.nav__action:active,
.nav__form:active,
.form__cta:active {
  color: #f5f0ed; }

.card__action {
  text-decoration: none;
  color: inherit; }

.list--unstyled {
  padding: 0;
  list-style: none; }

.list__link--spacious {
  display: block; }

.list__item--spacious,
.list__link--spacious {
  padding: 0.70711em 0; }

.img {
  width: 100%;
  height: auto;
  vertical-align: middle; }

.img--round {
  border-radius: 50%; }

.svghide {
  display: none; }

.icon {
  border-radius: 50%; }

.icon--small {
  width: 0.5rem;
  height: 0.5rem;
  margin: 0 0.25rem; }

.icon--medium {
  width: 2rem;
  height: 2rem;
  margin: 0.25rem; }

.icon--large {
  width: 2.82843rem;
  height: 2.82843rem; }

.icon--logo {
  width: 2rem;
  height: 1.41421rem;
  vertical-align: middle;
  fill: rgba(245, 240, 237, 0.87);
  mix-blend-mode: difference; }

.icon--facebook, .icon--googleplus, .icon--twitter {
  background: rgba(245, 240, 237, 0.87); }

.icon--facebook {
  fill: #3b5998; }

.icon--googleplus {
  fill: #d34836; }

.icon--twitter {
  fill: #4090ff; }

@font-face {
  font-family: 'icomoon';
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/icomoon.eot");
  src: url("../fonts/icomoon.eot#iefix") format("embedded-opentype"), url("../fonts/icomoon.ttf") format("truetype"), url("../fonts/icomoon.woff") format("woff"), url("../fonts/icomoon.svg#icomoon") format("svg"); }

.ficon::before {
  font-family: 'icomoon';
  line-height: 1;
  margin-right: .3rem;
  vertical-align: middle;
  speak: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.ficon--list::before {
  content: '\e900'; }

.ficon--location::before {
  content: '\e901'; }

.ficon--heart::before {
  content: '\e902'; }

.ficon--user::before {
  content: '\e903'; }

.ficon--gift::before {
  content: '\e904'; }

.ficon--shopping-cart::before {
  content: '\e905'; }

.billboard {
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
  padding: 2.82843em 0;
  -webkit-flex: 100vw;
      -ms-flex: 100vw;
          flex: 100vw;
  fill: rgba(245, 240, 237, 0.87); }

.billboard--default {
  background: #9f2e32; }

.billboard--attention {
  background: #322c28; }

.billboard__content {
  -webkit-flex: 100vw;
      -ms-flex: 100vw;
          flex: 100vw; }

.metablock {
  -webkit-flex-flow: column wrap;
      -ms-flex-flow: column wrap;
          flex-flow: column wrap;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

@media (min-width: 708px) {
  .billboard__title,
    .metablock__title,
    .card__title {
    line-height: 1.45379; }
  .billboard__title {
    font-size: 2rem;
    line-height: 1.38141; }
  .metablock__title {
    line-height: 1.45379; }
  .grid {
    -webkit-flex-flow: row wrap;
    -ms-flex-flow: row wrap;
    flex-flow: row wrap; }
  .grid--center--v {
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
  .grid__block {
    margin-top: 0; }
  .block--fullspan--large {
    -webkit-flex: 100vw;
    -ms-flex: 100vw;
    flex: 100vw; }
  .priority--last {
    -webkit-order: 10;
    -ms-flex-order: 10;
    order: 10; }
  .priority--important {
    -webkit-order: -10;
    -ms-flex-order: -10;
    order: -10; }
  .browse-wrap {
    max-width: calc(1215px + (1.41421rem * 2));
    -webkit-flex: 0 calc(86.292vw + (1.41421rem * 2));
    -ms-flex: 0 calc(86.292vw + (1.41421rem * 2));
    flex: 0 calc(86.292vw + (1.41421rem * 2)); }
  .card {
    margin: 1.41421rem;
    -webkit-flex: 1 calc(33.33333% - (1.41421rem * 2));
    -ms-flex: 1 calc(33.33333% - (1.41421rem * 2));
    flex: 1 calc(33.33333% - (1.41421rem * 2)); }
  .card:nth-of-type(5n+1) {
    -webkit-flex: 1 calc(66.66667% - (1.41421rem * 2));
    -ms-flex: 1 calc(66.66667% - (1.41421rem * 2));
    flex: 1 calc(66.66667% - (1.41421rem * 2)); }
  .card:nth-of-type(10n+0) {
    -webkit-flex: 1 calc(100% - (1.41421rem * 2));
    -ms-flex: 1 calc(100% - (1.41421rem * 2));
    flex: 1 calc(100% - (1.41421rem * 2)); }
  .menu-label {
    display: none; }
  .nav,
  .switch:checked ~ .nav {
    top: 0;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 86vw;
    height: inherit;
    margin: 0;
    padding: inherit;
    transition: none;
    opacity: 1;
    -webkit-flex-flow: row wrap;
    -ms-flex-flow: row wrap;
    flex-flow: row wrap;
    -webkit-align-items: stretch;
    -ms-flex-align: stretch;
    align-items: stretch; }
  .nav__action,
  .nav__form {
    margin: 0;
    text-align: center; }
  .nav__action {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    padding: 0;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
  .nav__action,.nav__action--has-dropdown {
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1; }
  .nav__action--has-dropdown {
    -webkit-flex-flow: column wrap;
    -ms-flex-flow: column wrap;
    flex-flow: column wrap; }
  .nav__action--dropdown-action {
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1; }
  .nav__dropdown {
    margin: 0;
    padding: 2rem; }
  .switch:checked ~ .nav__dropdown {
    position: absolute;
    background: rgba(50, 44, 40, 0.9);
    -webkit-backdrop-filter: blur(10px) saturate(150%);
    backdrop-filter: blur(10px) saturate(150%); }
  .nav__form {
    margin: 0.25rem 0;
    -webkit-order: 10;
    -ms-flex-order: 10;
    order: 10;
    -webkit-flex: 2;
    -ms-flex: 2;
    flex: 2; }
  .footer {
    margin-top: 5.65685rem; }
  .header {
    -webkit-flex: 1 100vw;
    -ms-flex: 1 100vw;
    flex: 1 100vw;
    max-width: 100vw;
    z-index: 1;
    top: 0;
    right: 0;
    width: 100vw;
    padding: 0; }
  .header ~ .header--after {
    margin-top: 0;
    padding-top: 4rem; }
  .list__item--spacious,
    .list__link--spacious {
    padding: 0.70711em 1em; }
  .list__form--spacious {
    padding-right: 0.70711em;
    padding-left: 0.70711em; }
  .metablock {
    -webkit-flex: 0 calc(33% - 2rem);
    -ms-flex: 0 calc(33% - 2rem);
    flex: 0 calc(33% - 2rem);
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start; } }

@media (min-width: 831px) {
  .billboard__title {
    font-size: 2.82843rem;
    line-height: 1.3523;
    letter-spacing: -.03em; }
  .metablock__title {
    line-height: 1.48215; } }

@media (min-width: 1096px) {
  .billboard__title {
    line-height: 1.36757; }
  .metablock__title {
    line-height: 1.54324; } }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxpdGllcy9hbGV4YW5kZXJkZXN0ZS9fbGluZS1oZWlnaHQtaGFybW9ueS5zY3NzIiwiYmFzZS9fbm9ybWFsaXplLnNjc3MiLCJzdHlsZS5jc3MiLCJiYXNlL19iYXNlLnNjc3MiLCJ1dGlsaXRpZXMvX3ZhcmlhYmxlcy5zY3NzIiwiYmFzZS9fdHlwb2dyYXBoeS5zY3NzIiwibW9kdWxlcy9fYmlsbGJvYXJkLnNjc3MiLCJsYXlvdXQvX2Zvb3Rlci5zY3NzIiwibW9kdWxlcy9fZm9ybXMuc2NzcyIsImxheW91dC9fY2FyZC5zY3NzIiwiYmFzZS9fZ3JpZC5zY3NzIiwidXRpbGl0aWVzL19mdW5jdGlvbnMuc2NzcyIsImxheW91dC9faGVhZGVyLnNjc3MiLCJsYXlvdXQvX2NvbnN0YW50cy5zY3NzIiwibGF5b3V0L19kcm9wZG93bi5zY3NzIiwibGF5b3V0L19uYXYuc2NzcyIsIm1vZHVsZXMvX2J1dHRvbnMuc2NzcyIsIm1vZHVsZXMvX2xpbmtzLnNjc3MiLCJtb2R1bGVzL19saXN0cy5zY3NzIiwibW9kdWxlcy9fbWVkaWEuc2NzcyIsIm1vZHVsZXMvX2ljb24uc2NzcyIsInV0aWxpdGllcy9lZHVhcmRvYm91Y2FzL19pbmNsdWRlLW1lZGlhLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUNBOzs7OztHQUtHO0FBZ0JIOztHQUVHO0FBTUg7Ozs7OztHQU1HO0FBK0JIOzs7Ozs7Ozs7Ozs7R0FZRztBQ3RGSDtFQUNFLHdCQUF3QjtFQUN4QiwyQkFBMkI7RUFDM0IsK0JBQStCLEVBSWhDOztBQUlEO0VBQ0UsVUFBVSxFQUNYOztBQVNEOzs7Ozs7Ozs7Ozs7O0VBYUUsZUFBZSxFQUNoQjs7QUFLRDs7OztFQUtJLHNCQUFzQjtFQUV4Qix5QkFBeUIsRUFLMUI7O0FBS0Q7RUFDRSxjQUFjO0VBQ2QsVUFBVSxFQUNYOztBQ3ZCRDs7RURvQ0UsY0FBYyxFQUNmOztBQVFDO0VBQ0UsOEJBQThCLEVBQy9COztBQUtIOztFQUVFLFdBQVcsRUFDWjs7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LEVBV1g7RUFMRDtJQUVJLCtCQUF1QjtJQUF2QiwyQkFBdUI7SUFBdkIsdUJBQXVCLEVBRzFCO0VBRUQ7SUFFSSxnQkFBUTtJQUFSLFlBQVE7SUFBUixRQUFRLEVBRVg7RUFFRDtJQU9JLFVBQVU7SUFDVixjSmxEUSxFSW9EWDtFQUdEO0lBSUksbUJBQW1CO0lBQ25CLGtDWHBDUTtJV3FDUixtREFBb0M7SUFBcEMsMkNBQW9DLEVBRXZDO0VBRUQ7SUFJSSxrQkFBd0I7SUFDeEIsa0JBQVU7SUFBVixtQkFBVTtJQUFWLFVBQVU7SUFDVixnQkp2RVE7SUl1RVIsWUp2RVE7SUl1RVIsUUp2RVEsRUl5RVg7RVJ0SEQ7SUFRSSx1QklxQ1EsRUpuQ1g7RUtSRDtJQWFJLHNCQUFjO0lBQWQsa0JBQWM7SUFBZCxjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLFdBQWM7SUFDZCxPQUFPO0lBQ1AsU0FBUztJQUNULGFBQWE7SUFDYixXQUFXLEVBUWQ7RUEzQkQ7SUF1Qk0sY0FBYztJQUNkLGtCRG1CTSxFQ2xCUDtFTVRMOztJQUtJLHVCQUEwQixFQUU3QjtFQUVEO0lBRUkseUJQZ0JRO0lPZlIsd0JQZVEsRU9iWDtFWkdEO0lBTUksaUNBQVk7SUFBWiw2QkFBWTtJQUFaLHlCQUFZO0lBQ1osb0NBQTRCO0lBQTVCLHFCQUE0QjtJQUE1Qiw0QkFBNEIsRUFFL0IsRUREQTs7QWdCMmZHO0VmM2dCSjtJRDJCSSxzQkFBVztJQUNYLG9CTHREb0I7SUt1RHBCLHVCQUF1QixFQU0xQjtFQ2hCRDtJRHVDSSxxQkxwRm9CLEVLMEZ2QixFQTdCQTs7QWdCd2VHO0VmM2dCSjtJRGlDSSxxQkwzRG9CLEVLNkR2QjtFQ2hCRDtJRDJDSSxxQkx4Rm9CLEVLMEZ2QixFQTdCQSIsImZpbGUiOiJzdHlsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIkbGluZS1oZWlnaHQtaGFybW9ueS1zZXR0aW5nczogKFxuICAgIHJhdGlvOiAxLjYxODAzMzk4ODc1LFxuICAgIGZvbnQtc2l6ZS1yb290OiAxNnB4XG4pO1xuXG5AZnVuY3Rpb24gbGluZS1oZWlnaHQtaGFybW9ueS1nZXRSYXRpbygkcmF0aW86IG51bGwpIHtcbiAgICBAaWYgKCRyYXRpbyA9PSBudWxsIGFuZCBtYXAtaGFzLWtleSgkbGluZS1oZWlnaHQtaGFybW9ueS1zZXR0aW5ncywgcmF0aW8pID09IHRydWUpIHtcbiAgICAgICAgQHJldHVybiBtYXAtZ2V0KCRsaW5lLWhlaWdodC1oYXJtb255LXNldHRpbmdzLCByYXRpbyk7XG4gICAgfVxuICAgIEBlbHNlIGlmIG5vdCAoJHJhdGlvID09IG51bGwpIHtcbiAgICAgICAgQHJldHVybiAkcmF0aW87XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgICAgQHdhcm4gXCIncmF0aW8nIG5vdCBmb3VuZCBpbiBsaW5lLWhlaWdodC1oYXJtb255LXNldHRpbmdzLiBHb2xkZW4gcmF0aW8gYXNzdW1lZC5cIjtcbiAgICAgICAgQHJldHVybiAxLjYxODAzMzk4ODc1O1xuICAgIH1cbn1cblxuQGZ1bmN0aW9uIGxpbmUtaGVpZ2h0LWhhcm1vbnktZ2V0Rm9udFNpemVSb290KCRmb250LXNpemUtcm9vdCkge1xuICAgIEBpZiAobWFwLWhhcy1rZXkoJGxpbmUtaGVpZ2h0LWhhcm1vbnktc2V0dGluZ3MsIGZvbnQtc2l6ZS1yb290KSA9PSB0cnVlKSB7XG4gICAgICAgICRkZWZhdWx0OiBtYXAtZ2V0KCRsaW5lLWhlaWdodC1oYXJtb255LXNldHRpbmdzLCBmb250LXNpemUtcm9vdCk7XG4gICAgICAgIEBpZiAoJGRlZmF1bHQgPT0gJGZvbnQtc2l6ZS1yb290KSBvciAoJGZvbnQtc2l6ZS1yb290ID09IG51bGwpIHtcbiAgICAgICAgICAgIEByZXR1cm4gJGRlZmF1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgQGVsc2Uge1xuICAgICAgICAgICAgQHJldHVybiBsaW5lLWhlaWdodC1oYXJtb255LWNvbnZlcnQtdG8tcHgoJGZvbnQtc2l6ZS1yb290LCAkZGVmYXVsdCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgICBAd2FybiBcIidmb250LXNpemUtcm9vdCcgbm90IGZvdW5kIGluIHlvdXIgbGluZS1oZWlnaHQtaGFybW9ueS1zZXR0aW5ncy4gMTZweCByb290IGFzc3VtZWQuXCI7XG4gICAgICAgIEByZXR1cm4gMTZweDtcbiAgICB9XG59XG4vKipcbiAqIFJhaXNlIG51bWJlciB0byB0aGUgbnRoIHBvd2VyXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9ICRiYXNlICAgICAgVGhlIGJhc2UgbnVtYmVyXG4gKiBAcGFyYW0ge251bWJlcn0gJGV4cG9uZW50cyBUaGUgZXhwb25lbnQgdG8gd2hpY2ggdG8gcmFpc2UgJGJhc2VcbiAqL1xuQGZ1bmN0aW9uIHBvdygkYmFzZSwgJGV4cG9uZW50cykge1xuICAgJHJhaXNlZDogMTtcbiAgIEBpZiAkZXhwb25lbnRzID4gMCB7XG4gICAgICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkZXhwb25lbnRzIHtcbiAgICAgICAgICAgJHJhaXNlZDogJHJhaXNlZCAqICRiYXNlO1xuICAgICAgIH1cbiAgIH1cbiAgIEBlbHNlIGlmICRleHBvbmVudHMgPCAwIHtcbiAgICAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIC0kZXhwb25lbnRzIHtcbiAgICAgICAgICAgJHJhaXNlZDogJHJhaXNlZCAvICRiYXNlO1xuICAgICAgIH1cbiAgIH1cbiAgIEByZXR1cm4gJHJhaXNlZDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdW5pdCBmcm9tIG51bWJlcnNcbiAqL1xuQGZ1bmN0aW9uIHN0cmlwLXVuaXQoJG51bWJlcikge1xuICAgICRuOiAkbnVtYmVyIC8gKCRudW1iZXIgKiAwICsgMSk7XG4gICAgQHJldHVybiAkbjtcbn1cblxuLyoqXG4gKiBUaGUgbGluZSBhbGdvcnl0aG0gaXMgYmFzZWQgb24gcGl4ZWwgc2l6ZSwgc28gd2UncmUgY29udmVydGluZyBwcmVzdW1lZCBmb3IgdXNlXG4gKlxuICogQHBhcmFtIHtzdHJpbmcvbnVtYmVyfSAkbnVtYmVyICAgICAgICAgICAgIE51bWJlciB0byBjb252ZXJ0IHRvIHVuaXRsZXNzIHB4XG4gKiBAcGFyYW0ge3N0cmluZy9udW1iZXJ9ICRmb250LXNpemUtcm9vdCAgICAgTnVtYmVyIGZvciBSRU0gY29udmVyc2lvbi5cbiAqIEBwYXJhbSB7c3RyaW5nfSAgICAgICAgJGZvbnQtb3Itd2lkdGggICAgICBEZXRlcm1pbmVzIHdoaWNoIGRlZmF1bHQgdG8gZmFsbCBiYWNrIHRvXG4gKi9cbkBmdW5jdGlvbiBsaW5lLWhlaWdodC1oYXJtb255LWNvbnZlcnQtdG8tcHgoJG51bWJlciwgJGZvbnQtc2l6ZS1yb290LCAkZm9udC1vci13aWR0aDogbnVsbCkge1xuICAgICR1bml0OiB1bml0KCRudW1iZXIpO1xuICAgICRudW1iZXI6IHN0cmlwLXVuaXQoJG51bWJlcik7XG5cbiAgICBAaWYoJGZvbnQtb3Itd2lkdGggPT0gJ2ZvbnQnIGFuZCAkdW5pdCA9PSAnJykge1xuICAgICAgICBAaWYgbWFwLWhhcy1rZXkoJGxpbmUtaGVpZ2h0LWhhcm1vbnktc2V0dGluZ3MsIGZhbGxiYWNrLWZvbnQtc2l6ZS11bml0KSB7XG4gICAgICAgICAgICAkdW5pdDogbWFwLWdldCgkbGluZS1oZWlnaHQtaGFybW9ueS1zZXR0aW5ncywgZmFsbGJhY2stZm9udC1zaXplLXVuaXQpO1xuICAgICAgICB9IEBlbHNlIHtcbiAgICAgICAgICAgICR1bml0OiAnZW0nO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQGlmKCRmb250LW9yLXdpZHRoID09ICd3aWR0aCcgYW5kICR1bml0ID09ICcnKSB7XG4gICAgICAgIEBpZiBtYXAtaGFzLWtleSgkbGluZS1oZWlnaHQtaGFybW9ueS1zZXR0aW5ncywgZmFsbGJhY2std2lkdGgtdW5pdCkge1xuICAgICAgICAgICAgJHVuaXQ6IG1hcC1nZXQoJGxpbmUtaGVpZ2h0LWhhcm1vbnktc2V0dGluZ3MsIGZhbGxiYWNrLXdpZHRoLXVuaXQpO1xuICAgICAgICB9IEBlbHNlIHtcbiAgICAgICAgICAgICR1bml0OiAncHgnO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQGlmIG5vdCAoJHVuaXQgPT0gJ3B4JyBvciAkdW5pdCA9PSAnZW0nIG9yICR1bml0ID09ICdyZW0nKSB7XG4gICAgICAgIEBlcnJvciBcIlVuc3VwcG9ydGVkIHVuaXQgdXNlZDogI3skdW5pdH0uXCI7XG4gICAgfVxuXG4gICAgQGlmICgkdW5pdCA9PSBlbSBvciAkdW5pdCA9PSByZW0pIHtcbiAgICAgICAgJG51bWJlcjogJG51bWJlciAqICRmb250LXNpemUtcm9vdDtcbiAgICB9XG4gICAgQHJldHVybiAkbnVtYmVyO1xufVxuXG4vKipcbiAqIFRoZSBsaW5lIGhlaWdodCBpcyBjYWxjdWxhdGVkIHRvIG1hdGNoIHJlbGF0aXZlIHdpZHRocyB0byBmb250IHNpemVzLlxuICpcbiAqIFRoZSBmb3JtdWxhIGlzIGZyb20gaHR0cDovKnd3dy5wZWFyc29uaWZpZWQuY29tLzIwMTEvMTIvZ29sZGVuLXJhdGlvLXR5cG9ncmFwaHkucGhwXG4gKiBSQVRJTyAtIDEgLyAoIDIgKiBSQVRJTyApICogKCAxIC0gV0lEVEggLyAoICggRk9OVC1TSVpFICogUkFUSU8gKSBeIDIgKSApXG4gKiBUaGUgZm9ybXVsYSBoYXMgYmVlbiBzaW1wbGlmaWVkIGFzIHN1Y2g6XG4gKiBSQVRJTyAtICggLSBXSURUSCAvICggRk9OVC1TSVpFICogUkFUSU8gXiAyICsgMSApICkgLyAoIDIgKiBSQVRJTyApO1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nL251bWJlcn0gJGZvbnQtc2l6ZSAgICAgICAgICAgIEZvbnQgc2l6ZSB0byBjYWxjdWxhdGUgYnlcbiAqIEBwYXJhbSB7c3RyaW5nL251bWJlcn0gJHdpZHRoICAgICAgICAgICAgICAgIFdpZHRoIHRvIGNhbGN1bGF0ZSBieS5cbiAqIEBwYXJhbSB7bnVtYmVyfSAgICAgICAgJHJhZGlvICAgICAgICAgICAgICAgIEhhcm1vbmljIHJhdGlvIHVzZWQgb24gc2l0ZVxuICogQHBhcmFtIHtzdHJpbmcvbnVtYmVyfSAkZm9udC1zaXplLXJvb3QgICAgICAgUFggc2l6ZSBhcHBsaWVkIHRvIGJhc2VcbiAqL1xuQGZ1bmN0aW9uIGxpbmUtaGVpZ2h0LWhhcm1vbnkoJGZvbnQtc2l6ZSwgJHdpZHRoLCAkcmF0aW86IG51bGwsICRmb250LXNpemUtcm9vdDogbnVsbCkge1xuICAgICRyYXRpbzogbGluZS1oZWlnaHQtaGFybW9ueS1nZXRSYXRpbygkcmF0aW8pO1xuICAgICRmb250LXNpemUtcm9vdDogc3RyaXAtdW5pdChsaW5lLWhlaWdodC1oYXJtb255LWdldEZvbnRTaXplUm9vdCgkZm9udC1zaXplLXJvb3QpKTtcblxuICAgICRmb250LXNpemU6IGxpbmUtaGVpZ2h0LWhhcm1vbnktY29udmVydC10by1weCgkZm9udC1zaXplLCAkZm9udC1zaXplLXJvb3QsICdmb250Jyk7XG4gICAgJHdpZHRoOiBsaW5lLWhlaWdodC1oYXJtb255LWNvbnZlcnQtdG8tcHgoJHdpZHRoLCAkZm9udC1zaXplLXJvb3QsICd3aWR0aCcpO1xuXG4gICAgQHJldHVybiAkcmF0aW8gLSAoIC0gJHdpZHRoIC8gcG93KCRmb250LXNpemUgKiAkcmF0aW8sIDIpICsgMSkgLyAoIDIgKiAkcmF0aW8gKTtcbn1cbiIsIi8vIEJhc2VkIG9uOlxuLy8gbm9ybWFsaXplLmNzcyB2My4wLjMgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzXG4vL1xuLy8gSGF2ZSBmdW4uXG5cblxuLy8gU2V0dGluZ3Ncbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIENoYW5nZSB2YWx1ZSBpZiB5b3Ugd2FudCB0byBzdXBwb3J0IGVhcmxpZXIgdmVyc2lvbnMgb2YgSW50ZXJuZXQgRXhwbG9yZXIuXG4kb2xkZXN0LXN1cHBvcnRlZC1pZS12ZXJzaW9uOiA5ICFkZWZhdWx0O1xuXG4vL1xuLy8gQ2hhbmdlIHZhbHVlIGlmIHlvdSB3YW50IHRvIGNvbnRyb2xsIHlvdXIgb3duIG1hcmdpbnMuXG4kbG9ib3RvbWl6ZWQtb3dsOiBmYWxzZSAhZGVmYXVsdDtcblxuLy8gQmFzZVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbi8vIDIuIFByZXZlbnQgaU9TIGFuZCBJRSB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIGRldmljZSBvcmllbnRhdGlvbiBjaGFuZ2UsXG4vLyAgICB3aXRob3V0IGRpc2FibGluZyB1c2VyIHpvb20uXG4vLyAzLiBDb3JyZWN0cyB0ZXh0IHJlc2l6aW5nIG9kZGx5IGluIElFIDYvNyB3aGVuIGJvZHkgYGZvbnQtc2l6ZWAgaXMgc2V0IHVzaW5nXG4vLyAgYGVtYCB1bml0cy5cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvLyAxXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvLyAyXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLy8gMlxuICBAaWYgJG9sZGVzdC1zdXBwb3J0ZWQtaWUtdmVyc2lvbiA8IDgge1xuICAgICpmb250LXNpemU6IDEwMCU7IC8vIDNcbiAgfVxufVxuXG4vLyBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG4vLyBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuLy8gQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbi8vIGFuZCBGaXJlZm94LlxuLy8gQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8vIDEuIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXG4vLyAyLiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIEBpZiAkb2xkZXN0LXN1cHBvcnRlZC1pZS12ZXJzaW9uIDwgMTAge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLy8gMVxuICB9XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLy8gMlxuICBAaWYgJG9sZGVzdC1zdXBwb3J0ZWQtaWUtdmVyc2lvbiA8IDgge1xuICAgICpkaXNwbGF5OiBpbmxpbmU7XG4gICAgKnpvb206IDE7XG4gIH1cbn1cblxuLy8gUHJldmVudHMgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXG4vLyBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8vIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbi8vIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cblxuQGlmICRvbGRlc3Qtc3VwcG9ydGVkLWllLXZlcnNpb24gPCAxMSB7XG4gIFtoaWRkZW5dIHtcbiAgICBAZXh0ZW5kICVub3JtYWxpemUtaGlkZGVuLWV4dGVuZGVyO1xuICB9XG59XG5cbiVub3JtYWxpemUtaGlkZGVuLWV4dGVuZGVyLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vLyBMaW5rc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG5cbkBpZiAkb2xkZXN0LXN1cHBvcnRlZC1pZS12ZXJzaW9uIDwgMTEge1xuICBhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgfVxufVxuXG4vLyBJbXByb3ZlIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vycy5cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbn07XG5cbi8vIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBDaHJvbWUuXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLy8gQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8vIFNldCAxIHVuaXQgb2YgdmVydGljYWwgcmh5dGhtIG9uIHRoZSB0b3AgYW5kIGJvdHRvbSBtYXJnaW4uXG5cbkBpZiAkbG9ib3RvbWl6ZWQtb3dsID09IGZhbHNlIHtcbiAgQGlmICRvbGRlc3Qtc3VwcG9ydGVkLWllLXZlcnNpb24gPCA4IHtcbiAgICBibG9ja3F1b3RlIHtcbiAgICAgIG1hcmdpbjogMWVtIDQwcHg7XG4gICAgfVxuICB9XG59XG5cbi8vIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vLyBBZGRyZXNzIHZhcmlhYmxlIGBoMWAgZm9udC1zaXplIGFuZCBtYXJnaW4gd2l0aGluIGBzZWN0aW9uYCBhbmQgYGFydGljbGVgXG4vLyBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIEBpZiAkbG9ib3RvbWl6ZWQtb3dsID09IGZhbHNlIHtcbiAgICBtYXJnaW46IC42N2VtIDA7XG4gIH1cbn1cblxuQGlmICRvbGRlc3Qtc3VwcG9ydGVkLWllLXZlcnNpb24gPCA4IHtcbiAgaDIge1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gICAgQGlmICRsb2JvdG9taXplZC1vd2wgPT0gZmFsc2Uge1xuICAgICAgbWFyZ2luOiAuODNlbSAwO1xuICAgIH1cbiAgfVxuXG4gIGgzIHtcbiAgICBmb250LXNpemU6IDEuMTdlbTtcbiAgICBAaWYgJGxvYm90b21pemVkLW93bCA9PSBmYWxzZSB7XG4gICAgICBtYXJnaW46IDFlbSAwO1xuICAgIH1cbiAgfVxuXG4gIGg0IHtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBAaWYgJGxvYm90b21pemVkLW93bCA9PSBmYWxzZSB7XG4gICAgICBtYXJnaW46IDEuMzNlbSAwO1xuICAgIH1cbiAgfVxuXG4gIGg1IHtcbiAgICBmb250LXNpemU6IC44M2VtO1xuICAgIEBpZiAkbG9ib3RvbWl6ZWQtb3dsID09IGZhbHNlIHtcbiAgICAgIG1hcmdpbjogMS42N2VtIDA7XG4gICAgfVxuICB9XG5cbiAgaDYge1xuICAgIGZvbnQtc2l6ZTogLjY3ZW07XG4gICAgQGlmICRsb2JvdG9taXplZC1vd2wgPT0gZmFsc2Uge1xuICAgICAgbWFyZ2luOiAyLjMzZW0gMDtcbiAgICB9XG4gIH1cbn1cblxuLy8gQWRkcmVzc2VzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuXG5AaWYgJG9sZGVzdC1zdXBwb3J0ZWQtaWUtdmVyc2lvbiA8IDEwIHtcbiAgbWFyayB7XG4gICAgYmFja2dyb3VuZDogI2ZmMDtcbiAgICBjb2xvcjogIzAwMDtcbiAgfVxufVxuXG4vLyBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLy8gUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICB0b3A6IC0uNWVtO1xufVxuXG5zdWIge1xuICBib3R0b206IC0uMjVlbTtcbn1cblxuQGlmICRvbGRlc3Qtc3VwcG9ydGVkLWllLXZlcnNpb24gPCA4IHtcbiAgLy8gTGlzdHNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICAvLyBBZGRyZXNzZXMgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gSUUgNi83LlxuICAvL1xuXG4gIEBpZiAkbG9ib3RvbWl6ZWQtb3dsID09IGZhbHNlIHtcbiAgICBkbCxcbiAgICBtZW51LFxuICAgIG9sLFxuICAgIHVsIHtcbiAgICAgIG1hcmdpbjogMWVtIDA7XG4gICAgfVxuXG4gICAgZGQge1xuICAgICAgbWFyZ2luOiAwIDAgMCA0MHB4O1xuICAgIH1cbiAgfVxuXG4gIC8vIEFkZHJlc3NlcyBwYWRkaW5ncyBzZXQgZGlmZmVyZW50bHkgaW4gSUUgNi83LlxuICAvL1xuXG4gIG1lbnUsXG4gIG9sLFxuICB1bCB7XG4gICAgcGFkZGluZzogMCAwIDAgNDBweDtcbiAgfVxuXG4gIC8vIENvcnJlY3RzIGxpc3QgaW1hZ2VzIGhhbmRsZWQgaW5jb3JyZWN0bHkgaW4gSUUgNy5cbiAgLy9cblxuICBuYXYgdWwsXG4gIG5hdiBvbCB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBsaXN0LXN0eWxlLWltYWdlOiBub25lO1xuICB9XG59XG5cbi8vIEVtYmVkZGVkIGNvbnRlbnRcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIDEuIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgOC85LzEwLlxuLy8gMi4gSW1wcm92ZXMgaW1hZ2UgcXVhbGl0eSB3aGVuIHNjYWxlZCBpbiBJRSA3LlxuXG5pbWcge1xuICBib3JkZXI6IDA7XG4gIEBpZiAkb2xkZXN0LXN1cHBvcnRlZC1pZS12ZXJzaW9uIDwgOCB7XG4gICAgKi1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7IC8qIDIgKi9cbiAgfVxufVxuXG4vLyBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vLyBHcm91cGluZyBjb250ZW50XG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cblxuQGlmICRsb2JvdG9taXplZC1vd2wgPT0gZmFsc2Uge1xuICBmaWd1cmUge1xuICAgIG1hcmdpbjogMWVtIDQwcHg7XG4gIH1cbn1cblxuLy8gQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7XG59XG5cbi8vIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLlxuXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLy8gQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuLy8gQ29ycmVjdCBmb250IGZhbWlseSBzZXQgb2RkbHkgaW4gSUUgNiwgU2FmYXJpIDQvNSwgYW5kIENocm9tZS5cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIEBpZiAkb2xkZXN0LXN1cHBvcnRlZC1pZS12ZXJzaW9uIDwgNyB7XG4gICAgX2ZvbnQtZmFtaWx5OiAnY291cmllciBuZXcnLCBtb25vc3BhY2U7XG4gIH1cbiAgZm9udC1zaXplOiAxZW07XG59XG5cbi8vIEZvcm1zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxuLy8gc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxuXG4vLyAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4vLyAgICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cbi8vIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4vLyAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbi8vIDQuIEltcHJvdmVzIGFwcGVhcmFuY2UgYW5kIGNvbnNpc3RlbmN5IGluIGFsbCBicm93c2Vycy5cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7IC8vIDFcbiAgZm9udDogaW5oZXJpdDsgLy8gMlxuICBAaWYgJGxvYm90b21pemVkLW93bCA9PSBmYWxzZSB7XG4gICAgbWFyZ2luOiAwOyAvLyAzXG4gIH1cbiAgQGlmICRvbGRlc3Qtc3VwcG9ydGVkLWllLXZlcnNpb24gPCA4IHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8vIDNcbiAgICAqdmVydGljYWwtYWxpZ246IG1pZGRsZTsgLy8gM1xuICB9XG59XG5cbi8vIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLy8gQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuLy8gQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cbi8vIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCwgSUUgOC85LzEwLzExLCBhbmQgT3BlcmEuXG4vLyBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vLyAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuLy8gICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4vLyAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4vLyAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuLy8gICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuLy8gNC4gUmVtb3ZlcyBpbm5lciBzcGFjaW5nIGluIElFIDcgd2l0aG91dCBhZmZlY3Rpbmcgbm9ybWFsIHRleHQgaW5wdXRzLlxuLy8gICAgS25vd24gaXNzdWU6IGlubmVyIHNwYWNpbmcgcmVtYWlucyBpbiBJRSA2LlxuXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIC8vIDFcbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLy8gMlxuICBjdXJzb3I6IHBvaW50ZXI7IC8vIDNcbiAgQGlmICRvbGRlc3Qtc3VwcG9ydGVkLWllLXZlcnNpb24gPCA4IHtcbiAgICAqb3ZlcmZsb3c6IHZpc2libGU7IC8vIDRcbiAgfVxufVxuXG4vLyBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8vIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8vIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbi8vIHRoZSBVQSBzdHlsZXNoZWV0LlxuXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8vIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbi8vIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4vL1xuLy8gMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbi8vIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4vLyAgICBLbm93biBpc3N1ZTogZXhjZXNzIHBhZGRpbmcgcmVtYWlucyBpbiBJRSA2LlxuXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvLyAxXG4gIHBhZGRpbmc6IDA7IC8vIDJcbiAgQGlmICRvbGRlc3Qtc3VwcG9ydGVkLWllLXZlcnNpb24gPCA4IHtcbiAgICAqaGVpZ2h0OiAxM3B4OyAvLyAzXG4gICAgKndpZHRoOiAxM3B4OyAvLyAzXG4gIH1cbn1cblxuLy8gRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbi8vIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4vLyBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG5cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vLyAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbi8vIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLy8gMVxuICAvLyBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLy8gMlxufVxuXG4vLyBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbi8vIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbi8vIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8vIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBAaWYgJGxvYm90b21pemVkLW93bCA9PSBmYWxzZSB7XG4gICAgbWFyZ2luOiAwIDJweDtcbiAgfVxuICBwYWRkaW5nOiAuMzVlbSAuNjI1ZW0gLjc1ZW07XG59XG5cbi8vIDEuIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS8xMC8xMS5cbi8vIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbi8vIDMuIENvcnJlY3RzIHRleHQgbm90IHdyYXBwaW5nIGluIEZpcmVmb3ggMy5cbi8vIDQuIENvcnJlY3RzIGFsaWdubWVudCBkaXNwbGF5ZWQgb2RkbHkgaW4gSUUgNi83LlxuXG5sZWdlbmQge1xuICBib3JkZXI6IDA7IC8vIDFcbiAgcGFkZGluZzogMDsgLy8gMlxuICBAaWYgJG9sZGVzdC1zdXBwb3J0ZWQtaWUtdmVyc2lvbiA8IDgge1xuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8vIDNcbiAgICAqbWFyZ2luLWxlZnQ6IC03cHg7IC8vIDRcbiAgfVxufVxuXG4vLyBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vL1xuLy8gRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuLy8gTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4vL1xuXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vLyBUYWJsZXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7XG59XG4iLCIvKipcbiAqIFJhaXNlIG51bWJlciB0byB0aGUgbnRoIHBvd2VyXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9ICRiYXNlICAgICAgVGhlIGJhc2UgbnVtYmVyXG4gKiBAcGFyYW0ge251bWJlcn0gJGV4cG9uZW50cyBUaGUgZXhwb25lbnQgdG8gd2hpY2ggdG8gcmFpc2UgJGJhc2VcbiAqL1xuLyoqXG4gKiBSZW1vdmUgdW5pdCBmcm9tIG51bWJlcnNcbiAqL1xuLyoqXG4gKiBUaGUgbGluZSBhbGdvcnl0aG0gaXMgYmFzZWQgb24gcGl4ZWwgc2l6ZSwgc28gd2UncmUgY29udmVydGluZyBwcmVzdW1lZCBmb3IgdXNlXG4gKlxuICogQHBhcmFtIHtzdHJpbmcvbnVtYmVyfSAkbnVtYmVyICAgICAgICAgICAgIE51bWJlciB0byBjb252ZXJ0IHRvIHVuaXRsZXNzIHB4XG4gKiBAcGFyYW0ge3N0cmluZy9udW1iZXJ9ICRmb250LXNpemUtcm9vdCAgICAgTnVtYmVyIGZvciBSRU0gY29udmVyc2lvbi5cbiAqIEBwYXJhbSB7c3RyaW5nfSAgICAgICAgJGZvbnQtb3Itd2lkdGggICAgICBEZXRlcm1pbmVzIHdoaWNoIGRlZmF1bHQgdG8gZmFsbCBiYWNrIHRvXG4gKi9cbi8qKlxuICogVGhlIGxpbmUgaGVpZ2h0IGlzIGNhbGN1bGF0ZWQgdG8gbWF0Y2ggcmVsYXRpdmUgd2lkdGhzIHRvIGZvbnQgc2l6ZXMuXG4gKlxuICogVGhlIGZvcm11bGEgaXMgZnJvbSBodHRwOi8qd3d3LnBlYXJzb25pZmllZC5jb20vMjAxMS8xMi9nb2xkZW4tcmF0aW8tdHlwb2dyYXBoeS5waHBcbiAqIFJBVElPIC0gMSAvICggMiAqIFJBVElPICkgKiAoIDEgLSBXSURUSCAvICggKCBGT05ULVNJWkUgKiBSQVRJTyApIF4gMiApIClcbiAqIFRoZSBmb3JtdWxhIGhhcyBiZWVuIHNpbXBsaWZpZWQgYXMgc3VjaDpcbiAqIFJBVElPIC0gKCAtIFdJRFRIIC8gKCBGT05ULVNJWkUgKiBSQVRJTyBeIDIgKyAxICkgKSAvICggMiAqIFJBVElPICk7XG4gKlxuICogQHBhcmFtIHtzdHJpbmcvbnVtYmVyfSAkZm9udC1zaXplICAgICAgICAgICAgRm9udCBzaXplIHRvIGNhbGN1bGF0ZSBieVxuICogQHBhcmFtIHtzdHJpbmcvbnVtYmVyfSAkd2lkdGggICAgICAgICAgICAgICAgV2lkdGggdG8gY2FsY3VsYXRlIGJ5LlxuICogQHBhcmFtIHtudW1iZXJ9ICAgICAgICAkcmFkaW8gICAgICAgICAgICAgICAgSGFybW9uaWMgcmF0aW8gdXNlZCBvbiBzaXRlXG4gKiBAcGFyYW0ge3N0cmluZy9udW1iZXJ9ICRmb250LXNpemUtcm9vdCAgICAgICBQWCBzaXplIGFwcGxpZWQgdG8gYmFzZVxuICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IH1cblxuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuW2hpZGRlbl0sXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7IH1cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkOyB9XG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuaDEge1xuICBmb250LXNpemU6IDJlbTsgfVxuXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1cCB7XG4gIHRvcDogLS41ZW07IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtLjI1ZW07IH1cblxuaW1nIHtcbiAgYm9yZGVyOiAwOyB9XG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7IH1cblxucHJlIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtOyB9XG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250OiBpbmhlcml0OyB9XG5cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG5cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDsgfVxuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7IH1cblxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgcGFkZGluZzogMDsgfVxuXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IH1cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBwYWRkaW5nOiAuMzVlbSAuNjI1ZW0gLjc1ZW07IH1cblxubGVnZW5kIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwOyB9XG5cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbiosXG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0OyB9XG5cbjo6c2VsZWN0aW9uIHtcbiAgY29sb3I6IHJnYmEoMjQ1LCAyNDAsIDIzNywgMC44Nyk7XG4gIGJhY2tncm91bmQ6ICMxNDZhNmM7IH1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMThweDsgfVxuXG5ib2R5IHtcbiAgZm9udDogNDAwIDFlbSAvIDEuNSAnTGF0bycsICdIZWx2ZXRpY2EgTmV1ZScsIEhlbHZldGljYSwgQXJpYWwsICdMdWNpZGEgR3JhbmRlJywgc2Fucy1zZXJpZjtcbiAgY29sb3I6ICMzMjJjMjg7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjM1KTsgfVxuXG5wLFxubGksXG5pbnB1dCxcbnRleHRhcmVhLFxuc2VsZWN0LFxubGFiZWwge1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQta2VybmluZzogbm9ybWFsO1xuICBmb250LXZhcmlhbnQtbGlnYXR1cmVzOiBub3JtYWw7IH1cblxuLmJpbGxib2FyZF9fdGl0bGUsXG4ubWV0YWJsb2NrX190aXRsZSxcbi5jYXJkX190aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS40MTQyMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMzk4NDY7XG4gIGxldHRlci1zcGFjaW5nOiAtLjA2ZW07XG4gIGZvbnQtdmFyaWFudC1saWdhdHVyZXM6IGNvbW1vbi1saWdhdHVyZXM7XG4gIGZvbnQta2VybmluZzogbm9ybWFsOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAgIC5iaWxsYm9hcmRfX3RpdGxlLFxuICAgIC5tZXRhYmxvY2tfX3RpdGxlLFxuICAgIC5jYXJkX190aXRsZSB7XG4gICAgICBsaW5lLWhlaWdodDogMS40NTM3OTsgfSB9XG5cbi5iaWxsYm9hcmRfX3RpdGxlIHtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gICAgLmJpbGxib2FyZF9fdGl0bGUge1xuICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMzgxNDE7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogODMxcHgpIHtcbiAgICAuYmlsbGJvYXJkX190aXRsZSB7XG4gICAgICBmb250LXNpemU6IDIuODI4NDNyZW07XG4gICAgICBsaW5lLWhlaWdodDogMS4zNTIzO1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IC0uMDNlbTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDk2cHgpIHtcbiAgICAuYmlsbGJvYXJkX190aXRsZSB7XG4gICAgICBsaW5lLWhlaWdodDogMS4zNjc1NzsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAubWV0YWJsb2NrX190aXRsZSB7XG4gICAgbGluZS1oZWlnaHQ6IDEuNDUzNzk7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogODMxcHgpIHtcbiAgLm1ldGFibG9ja19fdGl0bGUge1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ4MjE1OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwOTZweCkge1xuICAubWV0YWJsb2NrX190aXRsZSB7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTQzMjQ7IH0gfVxuXG4uZm9vdGVyLCAuaGVhZGVyLCAuY2FyZF9fY3RhLCAuY2FyZF9fbWV0YS0tY291bnRyeSxcbi5jYXJkX19tZXRhLS10YWcsIC5uYXZfX2FjdGlvbixcbi5uYXZfX2Zvcm0sIC5mb3JtX19jdGEsIC5iaWxsYm9hcmQge1xuICBjb2xvcjogcmdiYSgyNDUsIDI0MCwgMjM3LCAwLjg3KTsgfVxuXG4uZm9ybV9fbGFiZWwge1xuICBmb250LXdlaWdodDogNzAwOyB9XG5cbi5jYXJkX19tZXRhLS1jb3VudHJ5LFxuLmNhcmRfX21ldGEtLXRhZyB7XG4gIGZvbnQtc2l6ZTogMC43MDcxMXJlbTsgfVxuXG4qIHtcbiAgbWFyZ2luOiAwOyB9XG4gICogKyAqIHtcbiAgICBtYXJnaW4tdG9wOiAxLjQxNDIxZW07IH1cblxuaGVhZGVyLCAuc29jaWFsID4gKiwgLmxpc3QtLWRlZmF1bHQgPiAqLCAubGlzdC0tdW5zdHlsZWQgPiAqLFxuLmNhcmRfX21ldGEtLWNvdW50cnksXG4uY2FyZF9fbWV0YS0tdGFnLFxuLnN3aXRjaCB+IGxhYmVsOmZpcnN0LW9mLXR5cGUsXG4uZm9vdGVyIHtcbiAgbWFyZ2luLXRvcDogMDsgfVxuXG4uYnJvd3NlLXdyYXAsXG4ud3JhcCB7XG4gIG1heC13aWR0aDogMTIxNXB4O1xuICBmbGV4OiAwIDg2LjI5MnZ3OyB9XG5cblxuLmdyaWQsIC5ncmlkLS1jb2x1bW4sIC5ncmlkLS1yb3csIC5ncmlkLS1jZW50ZXIsIGJvZHksIC5jYXJkX19jdGEsIC5jYXJkX19tZXRhLS1jb3VudHJ5LFxuLmNhcmRfX21ldGEtLXRhZywgLm5hdiwgLm5hdi0taGFtYnVyZ2VyLCAubmF2X19kcm9wZG93biwgLm5hdl9fZm9ybSwgLmhlYWRlciwgLmJpbGxib2FyZCwgLm1ldGFibG9jayB7XG4gIGRpc3BsYXk6IGZsZXg7IH1cblxuLmhlYWRlciwgLmJpbGxib2FyZCB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG5cblxuLmdyaWQge1xuICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gICAgXG4gICAgLmdyaWQge1xuICAgICAgZmxleC1mbG93OiByb3cgd3JhcDsgfSB9XG5cbi5ncmlkLS1jb2x1bW4ge1xuICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5ncmlkLS1yb3cge1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5ncmlkLS1zcGFjZS1hcm91bmQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsgfVxuXG4uZ3JpZC0tY2VudGVyIHtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgZmxleDogMSAxMDB2dztcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cblxuYm9keSB7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG5cbi5jYXJkX19jdGEsIC5jYXJkX19tZXRhLS1jb3VudHJ5LFxuLmNhcmRfX21ldGEtLXRhZyB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5ncmlkLS1pbml0aWFsIHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1jb250ZW50OiBmbGV4LXN0YXJ0OyB9XG5cbi5ncmlkLS1lbmQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBhbGlnbi1jb250ZW50OiBmbGV4LWVuZDsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzA4cHgpIHtcbiAgLmdyaWQtLWNlbnRlci0tdiB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAuZ3JpZF9fYmxvY2sge1xuICAgIG1hcmdpbi10b3A6IDA7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzA4cHgpIHtcbiAgLmJsb2NrLS1mdWxsc3Bhbi0tbGFyZ2Uge1xuICAgIGZsZXg6IDEwMHZ3OyB9IH1cblxuLmdyaWRfX3dpZHRoLS0xIHtcbiAgZmxleDogMCBjYWxjKDMzLjMzMzMzJSAtIDJyZW0pOyB9XG5cbi5ncmlkX193aWR0aC0tMiB7XG4gIGZsZXg6IDAgY2FsYyg2Ni42NjY2NyUgLSAycmVtKTsgfVxuXG4uZ3JpZF9fd2lkdGgtLTMge1xuICBmbGV4OiAwIGNhbGMoMTAwJSAtIDJyZW0pOyB9XG5cbi5ncmlkX19ibG9jay0tMSB7XG4gIGZsZXg6IDEuNDE0MjE7IH1cblxuLmdyaWRfX2Jsb2NrLS0yIHtcbiAgZmxleDogMjsgfVxuXG4uZ3JpZF9fYmxvY2stLTMge1xuICBmbGV4OiAyLjgyODQzOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAucHJpb3JpdHktLWxhc3Qge1xuICAgIG9yZGVyOiAxMDsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAucHJpb3JpdHktLWltcG9ydGFudCB7XG4gICAgb3JkZXI6IC0xMDsgfSB9XG5cbi5mb3JtX19jdGEsIC5mb3JtX19pbnB1dCwgLm5hdl9faW5wdXQsIC5saW5rLCAuY2FyZF9fY3RhLCAuY2FyZF9fbWV0YS0tY291bnRyeSxcbi5jYXJkX19tZXRhLS10YWcsIC5uYXZfX2FjdGlvbixcbi5uYXZfX2Zvcm0sIC5jYXJkX19hY3Rpb24ge1xuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IGVhc2UtaW4tb3V0IDE1MG1zO1xuICBib3gtc2hhZG93OiAwIDAgMXJlbSAxLjQxNDIxcmVtIHRyYW5zcGFyZW50LCBpbnNldCAwIDAgMXJlbSAxLjQxNDIxcmVtIHRyYW5zcGFyZW50OyB9XG5cbi5mb3JtX19jdGE6Zm9jdXMsIC5mb3JtX19pbnB1dDpmb2N1cywgLm5hdl9faW5wdXQ6Zm9jdXMsIC5saW5rOmZvY3VzLCAuY2FyZF9fY3RhOmZvY3VzLCAuY2FyZF9fbWV0YS0tY291bnRyeTpmb2N1cyxcbi5jYXJkX19tZXRhLS10YWc6Zm9jdXMsIC5uYXZfX2FjdGlvbjpmb2N1cyxcbi5uYXZfX2Zvcm06Zm9jdXMsIC5jYXJkX19hY3Rpb246Zm9jdXMge1xuICBib3JkZXItY29sb3I6ICMxNDZhNmM7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJveC1zaGFkb3c6IDAgMCAycmVtICM0OTk2NzEsIGluc2V0IDAgMCAwLjE3Njc4cmVtICM0OTk2NzE7IH1cblxuLmZvcm1fX2N0YSwgLmZvcm1fX2lucHV0LCAubmF2X19pbnB1dCB7XG4gIGJvcmRlci1yYWRpdXM6IDAuNzA3MTFyZW07IH1cblxuLmZvcm1fX2lucHV0LCAubmF2X19pbnB1dCB7XG4gIHBhZGRpbmc6IDAuMzUzNTVyZW0gMC41cmVtOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAuYnJvd3NlLXdyYXAge1xuICAgIG1heC13aWR0aDogY2FsYygxMjE1cHggKyAoMS40MTQyMXJlbSAqIDIpKTtcbiAgICBmbGV4OiAwIGNhbGMoODYuMjkydncgKyAoMS40MTQyMXJlbSAqIDIpKTsgfSB9XG5cbi5jYXJkIHtcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luOiAxLjQxNDIxcmVtIDA7XG4gIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgYWxpZ24tY29udGVudDogZmxleC1zdGFydDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzA4cHgpIHtcbiAgICAuY2FyZCB7XG4gICAgICBtYXJnaW46IDEuNDE0MjFyZW07XG4gICAgICBmbGV4OiAxIGNhbGMoMzMuMzMzMzMlIC0gKDEuNDE0MjFyZW0gKiAyKSk7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzA4cHgpIHtcbiAgLmNhcmQ6bnRoLW9mLXR5cGUoNW4rMSkge1xuICAgIGZsZXg6IDEgY2FsYyg2Ni42NjY2NyUgLSAoMS40MTQyMXJlbSAqIDIpKTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAuY2FyZDpudGgtb2YtdHlwZSgxMG4rMCkge1xuICAgIGZsZXg6IDEgY2FsYygxMDAlIC0gKDEuNDE0MjFyZW0gKiAyKSk7IH0gfVxuXG4uY2FyZF9fYWN0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleDogMTtcbiAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDsgfVxuXG4uY2FyZF9faW1nYmxvY2sge1xuICB3aWR0aDogMTAwJTsgfVxuXG4uY2FyZF9fYWJvdXQge1xuICBmbGV4OiAxOyB9XG5cbi5jYXJkX19mb290ZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgZmxleC1mbG93OiByb3cgd3JhcDsgfVxuXG4uY2FyZF9fY3RhIHtcbiAgaGVpZ2h0OiAyLjgyODQzcmVtO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBib3JkZXItcmFkaXVzOiAyLjgyODQzcmVtO1xuICBiYWNrZ3JvdW5kOiAjOWYyZTMyOyB9XG5cbi5jYXJkX19tZXRhIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuXG4uY2FyZF9fbWV0YS0tY291bnRyeSxcbi5jYXJkX19tZXRhLS10YWcge1xuICBoZWlnaHQ6IDEuNDE0MjFyZW07XG4gIG1hcmdpbi1yaWdodDogMC4xNzY3OHJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC4xNzY3OHJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgYm9yZGVyLXJhZGl1czogMi44Mjg0M3JlbTtcbiAgZmxleDogMSAyLjgyODQzcmVtOyB9XG5cbi5jYXJkX19tZXRhLS10YWcge1xuICBiYWNrZ3JvdW5kOiAjMTQ2YTZjOyB9XG5cbi5jYXJkX19tZXRhLS1jb3VudHJ5IHtcbiAgYmFja2dyb3VuZDogIzQ5OTY3MTsgfVxuXG4uc3dpdGNoIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBvcGFjaXR5OiAwOyB9XG5cbi5tZW51LWxhYmVsIHtcbiAgYWxpZ24tc2VsZjogZmxleC1lbmQ7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gICAgLm1lbnUtbGFiZWwge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbi5zd2l0Y2g6Y2hlY2tlZCB+IC5uYXYtLWhhbWJ1cmdlciAuaGFtYnVyZ2VyLWljb24ge1xuICB0cmFuc2Zvcm06IHNjYWxlKDApOyB9XG5cbi5zd2l0Y2g6Y2hlY2tlZCB+IC5uYXYtLWhhbWJ1cmdlciAuaGFtYnVyZ2VyOjpiZWZvcmUge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMC40ZW0pIHJvdGF0ZSg5MGRlZyk7IH1cblxuLnN3aXRjaDpjaGVja2VkIH4gLm5hdi0taGFtYnVyZ2VyIC5oYW1idXJnZXI6OmFmdGVyIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0wLjRlbSkgcm90YXRlKDE4MGRlZyk7IH1cblxuLmhhbWJ1cmdlciB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMWVtO1xuICBoZWlnaHQ6IDFlbTtcbiAgcGFkZGluZzogMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjAwbXMgZWFzZS1pbi1vdXQ7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIGJvcmRlcjogMCBub25lO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsgfVxuXG4uaGFtYnVyZ2VyOjpiZWZvcmUsXG4uaGFtYnVyZ2VyOjphZnRlciB7XG4gIGNvbnRlbnQ6ICcnOyB9XG5cbi5oYW1idXJnZXI6OmJlZm9yZSxcbi5oYW1idXJnZXI6OmFmdGVyLFxuLmhhbWJ1cmdlci1pY29uIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IC4xZW07XG4gIG1hcmdpbjogMCAwIC4yOWVtO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjAwbXMgY3ViaWMtYmV6aWVyKDAsIDEuMywgMSwgMS4yKTtcbiAgYm9yZGVyLXJhZGl1czogLjVlbTtcbiAgYmFja2dyb3VuZDogcmdiYSgyNDUsIDI0MCwgMjM3LCAwLjg3KTsgfVxuXG4ubmF2IHtcbiAgdG9wOiAtMTByZW07XG4gIHdpZHRoOiAzMHZ3O1xuICBoZWlnaHQ6IDA7XG4gIHRyYW5zaXRpb246IGFsbCA0MDBtcyBjdWJpYy1iZXppZXIoMCwgMS4zLCAxLCAxLjIpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XG4gIG9wYWNpdHk6IDA7XG4gIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDsgfVxuXG4uc3dpdGNoOmNoZWNrZWQgfiAubmF2IHtcbiAgdG9wOiAwO1xuICB3aWR0aDogMzB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgcGFkZGluZzogMS40MTQyMXJlbTtcbiAgb3BhY2l0eTogMTsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzA4cHgpIHtcbiAgLm5hdixcbiAgLnN3aXRjaDpjaGVja2VkIH4gLm5hdiB7XG4gICAgdG9wOiAwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDg2dnc7XG4gICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiBpbmhlcml0O1xuICAgIHRyYW5zaXRpb246IG5vbmU7XG4gICAgb3BhY2l0eTogMTtcbiAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoOyB9IH1cblxuLnN3aXRjaDpub3QoOmNoZWNrZWQpIH4gLm5hdiB7XG4gIG1hcmdpbjogMDsgfVxuXG4ubmF2LS1oYW1idXJnZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGhlaWdodDogMnJlbTtcbiAgcGFkZGluZzogMCAxcmVtO1xuICB3aWR0aDogMTAwdnc7XG4gIGJhY2tncm91bmQ6IHJnYmEoNTAsIDQ0LCA0MCwgMC45KTtcbiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEwcHgpIHNhdHVyYXRlKDE1MCUpOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAubmF2X19hY3Rpb24sXG4gIC5uYXZfX2Zvcm0ge1xuICAgIG1hcmdpbjogMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH0gfVxuXG4ubmF2X19hY3Rpb24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gICAgLm5hdl9fYWN0aW9uIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgZmxleDogMTtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAubmF2X19hY3Rpb24tLWhhcy1kcm9wZG93biB7XG4gICAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDtcbiAgICBmbGV4OiAxOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gIC5uYXZfX2FjdGlvbi0tZHJvcGRvd24tYWN0aW9uIHtcbiAgICBmbGV4OiAxOyB9IH1cblxuLm5hdl9fZHJvcGRvd24ge1xuICBkaXNwbGF5OiBub25lO1xuICBtYXJnaW4tdG9wOiAxLjQxNDIxcmVtO1xuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gICAgLm5hdl9fZHJvcGRvd24ge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcGFkZGluZzogMnJlbTsgfSB9XG5cbi5zd2l0Y2g6Y2hlY2tlZCB+IC5uYXZfX2Ryb3Bkb3duIHtcbiAgZGlzcGxheTogZmxleDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzA4cHgpIHtcbiAgICAuc3dpdGNoOmNoZWNrZWQgfiAubmF2X19kcm9wZG93biB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDUwLCA0NCwgNDAsIDAuOSk7XG4gICAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMTBweCkgc2F0dXJhdGUoMTUwJSk7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzA4cHgpIHtcbiAgLm5hdl9fZm9ybSB7XG4gICAgbWFyZ2luOiAwLjI1cmVtIDA7XG4gICAgb3JkZXI6IDEwO1xuICAgIGZsZXg6IDI7IH0gfVxuXG4ubmF2X19pbnB1dCB7XG4gIGZsZXg6IDE7IH1cblxuLmZvb3RlciB7XG4gIHBhZGRpbmc6IDAuMjVyZW0gMDtcbiAgYmFja2dyb3VuZDogIzMyMmMyODsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzA4cHgpIHtcbiAgICAuZm9vdGVyIHtcbiAgICAgIG1hcmdpbi10b3A6IDUuNjU2ODVyZW07IH0gfVxuXG4uaGVhZGVyIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBsZWZ0OiAwO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDUwLCA0NCwgNDAsIDAuOSk7XG4gIGZsZXg6IDAgMTB2dztcbiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEwcHgpIHNhdHVyYXRlKDE1MCUpOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3MDhweCkge1xuICAgIC5oZWFkZXIge1xuICAgICAgZmxleDogMSAxMDB2dztcbiAgICAgIG1heC13aWR0aDogMTAwdnc7XG4gICAgICB6LWluZGV4OiAxMDAwO1xuICAgICAgdG9wOiAwO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICB3aWR0aDogMTAwdnc7XG4gICAgICBwYWRkaW5nOiAwOyB9XG4gICAgICAuaGVhZGVyIH4gLmhlYWRlci0tYWZ0ZXIge1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICBwYWRkaW5nLXRvcDogNHJlbTsgfSB9XG5cbi5mb3JtX19jdGEge1xuICBwYWRkaW5nOiAwLjVlbSAxLjQxNDIxZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBib3JkZXI6IDA7IH1cblxuLmZvcm1fX2N0YSB7XG4gIGJhY2tncm91bmQ6ICM3MTA3MDc7IH1cblxuLmZvcm1fX2N0YTpob3Zlcixcbi5mb3JtX19jdGE6Zm9jdXMge1xuICBiYWNrZ3JvdW5kOiAjYTEwYTBhOyB9XG5cbi5mb3JtX19jdGE6YWN0aXZlIHtcbiAgYmFja2dyb3VuZDogI2I5MGIwYjsgfVxuXG4uZm9ybV9fZmllbGRzZXQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlci1jb2xsYXBzZTogc2VwYXJhdGU7IH1cblxuLmZvcm1fX2lucHV0LFxuLm5hdl9faW5wdXQge1xuICBjb2xvcjogIzMyMmMyODtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjAsIDEzLCAxMCwgMC4yKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLmxpbmssXG4uY2FyZF9fY3RhLFxuLmNhcmRfX21ldGEtLWNvdW50cnksXG4uY2FyZF9fbWV0YS0tdGFnLFxuLm5hdl9fYWN0aW9uLFxuLm5hdl9fZm9ybSxcbi5mb3JtX19jdGEsXG4uY2FyZF9fYWN0aW9uIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5jYXJkX19jdGE6aG92ZXIsIC5jYXJkX19tZXRhLS1jb3VudHJ5OmhvdmVyLFxuLmNhcmRfX21ldGEtLXRhZzpob3ZlciwgLm5hdl9fYWN0aW9uOmhvdmVyLFxuLm5hdl9fZm9ybTpob3ZlciwgLmZvcm1fX2N0YTpob3Zlcixcbi5jYXJkX19jdGE6Zm9jdXMsXG4uY2FyZF9fbWV0YS0tY291bnRyeTpmb2N1cyxcbi5jYXJkX19tZXRhLS10YWc6Zm9jdXMsXG4ubmF2X19hY3Rpb246Zm9jdXMsXG4ubmF2X19mb3JtOmZvY3VzLFxuLmZvcm1fX2N0YTpmb2N1cyxcbi5jYXJkX19jdGE6YWN0aXZlLFxuLmNhcmRfX21ldGEtLWNvdW50cnk6YWN0aXZlLFxuLmNhcmRfX21ldGEtLXRhZzphY3RpdmUsXG4ubmF2X19hY3Rpb246YWN0aXZlLFxuLm5hdl9fZm9ybTphY3RpdmUsXG4uZm9ybV9fY3RhOmFjdGl2ZSB7XG4gIGNvbG9yOiAjZjVmMGVkOyB9XG5cbi5jYXJkX19hY3Rpb24ge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiBpbmhlcml0OyB9XG5cbi5saXN0LS11bnN0eWxlZCB7XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxuLmxpc3RfX2xpbmstLXNwYWNpb3VzIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLmxpc3RfX2l0ZW0tLXNwYWNpb3VzLFxuLmxpc3RfX2xpbmstLXNwYWNpb3VzIHtcbiAgcGFkZGluZzogMC43MDcxMWVtIDA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gICAgLmxpc3RfX2l0ZW0tLXNwYWNpb3VzLFxuICAgIC5saXN0X19saW5rLS1zcGFjaW91cyB7XG4gICAgICBwYWRkaW5nOiAwLjcwNzExZW0gMWVtOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDcwOHB4KSB7XG4gIC5saXN0X19mb3JtLS1zcGFjaW91cyB7XG4gICAgcGFkZGluZy1yaWdodDogMC43MDcxMWVtO1xuICAgIHBhZGRpbmctbGVmdDogMC43MDcxMWVtOyB9IH1cblxuLmltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cblxuLmltZy0tcm91bmQge1xuICBib3JkZXItcmFkaXVzOiA1MCU7IH1cblxuLnN2Z2hpZGUge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi5pY29uIHtcbiAgYm9yZGVyLXJhZGl1czogNTAlOyB9XG5cbi5pY29uLS1zbWFsbCB7XG4gIHdpZHRoOiAwLjVyZW07XG4gIGhlaWdodDogMC41cmVtO1xuICBtYXJnaW46IDAgMC4yNXJlbTsgfVxuXG4uaWNvbi0tbWVkaXVtIHtcbiAgd2lkdGg6IDJyZW07XG4gIGhlaWdodDogMnJlbTtcbiAgbWFyZ2luOiAwLjI1cmVtOyB9XG5cbi5pY29uLS1sYXJnZSB7XG4gIHdpZHRoOiAyLjgyODQzcmVtO1xuICBoZWlnaHQ6IDIuODI4NDNyZW07IH1cblxuLmljb24tLWxvZ28ge1xuICB3aWR0aDogMnJlbTtcbiAgaGVpZ2h0OiAxLjQxNDIxcmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBmaWxsOiByZ2JhKDI0NSwgMjQwLCAyMzcsIDAuODcpO1xuICBtaXgtYmxlbmQtbW9kZTogZGlmZmVyZW5jZTsgfVxuXG4uaWNvbi0tZmFjZWJvb2ssIC5pY29uLS1nb29nbGVwbHVzLCAuaWNvbi0tdHdpdHRlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjQ1LCAyNDAsIDIzNywgMC44Nyk7IH1cblxuLmljb24tLWZhY2Vib29rIHtcbiAgZmlsbDogIzNiNTk5ODsgfVxuXG4uaWNvbi0tZ29vZ2xlcGx1cyB7XG4gIGZpbGw6ICNkMzQ4MzY7IH1cblxuLmljb24tLXR3aXR0ZXIge1xuICBmaWxsOiAjNDA5MGZmOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ2ljb21vb24nO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvaWNvbW9vbi5lb3RcIik7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvaWNvbW9vbi5lb3QjaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnRzL2ljb21vb24udHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIuLi9mb250cy9pY29tb29uLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvaWNvbW9vbi5zdmcjaWNvbW9vblwiKSBmb3JtYXQoXCJzdmdcIik7IH1cblxuLmZpY29uOjpiZWZvcmUge1xuICBmb250LWZhbWlseTogJ2ljb21vb24nO1xuICBsaW5lLWhlaWdodDogMTtcbiAgbWFyZ2luLXJpZ2h0OiAuM3JlbTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgc3BlYWs6IG5vbmU7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOyB9XG5cbi5maWNvbi0tbGlzdDo6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTkwMCc7IH1cblxuLmZpY29uLS1sb2NhdGlvbjo6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTkwMSc7IH1cblxuLmZpY29uLS1oZWFydDo6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTkwMic7IH1cblxuLmZpY29uLS11c2VyOjpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlOTAzJzsgfVxuXG4uZmljb24tLWdpZnQ6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU5MDQnOyB9XG5cbi5maWNvbi0tc2hvcHBpbmctY2FydDo6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTkwNSc7IH1cblxuLmJpbGxib2FyZCB7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIHBhZGRpbmc6IDIuODI4NDNlbSAwO1xuICBmbGV4OiAxMDB2dztcbiAgZmlsbDogcmdiYSgyNDUsIDI0MCwgMjM3LCAwLjg3KTsgfVxuXG4uYmlsbGJvYXJkLS1kZWZhdWx0IHtcbiAgYmFja2dyb3VuZDogIzlmMmUzMjsgfVxuXG4uYmlsbGJvYXJkLS1hdHRlbnRpb24ge1xuICBiYWNrZ3JvdW5kOiAjMzIyYzI4OyB9XG5cbi5iaWxsYm9hcmRfX2NvbnRlbnQge1xuICBmbGV4OiAxMDB2dzsgfVxuXG4ubWV0YWJsb2NrIHtcbiAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzA4cHgpIHtcbiAgICAubWV0YWJsb2NrIHtcbiAgICAgIGZsZXg6IDAgY2FsYygzMyUgLSAycmVtKTtcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsgfSB9XG4iLCIvLyBNb2Rlcm4gYm9yZGVyLWJveCBhcHBsaWVkIGV2ZXJ5d2hlcmUuXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuKixcbio6YmVmb3JlLFxuKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbi8vIE1hbmRhdG9yeSBzZWxlY3Qgc3R5bGluZy5cbjo6c2VsZWN0aW9uIHtcbiAgY29sb3I6IG1hcC1nZXQoJGNvbG9yLCBicmlnaHQpO1xuICBiYWNrZ3JvdW5kOiBtYXAtZ2V0KCRjb2xvciwgZGFyay1hY2NlbnQpO1xufVxuIiwiXG4vLyBDb21tb24gUmF0aW9zXG4vL1xuLy8gUXVhZHJhdCAob3IgU3F1YXJlL0V2ZW4pXG4vLyBIZW1pZGlhZ29uXHQxOjEuMTE4XG4vLyBUcmlvblx0MToxLjE1NFxuLy8gUXVhZHJpYWdvblx0MToxLjIwN1xuLy8gQmlhdXJvblx0MToxLjIzNlxuLy8gUGVudG9uXHQxOjEuMjcyXG4vLyBEaWFnb25cdDE6MS40MTRcbi8vIEJpcGVudG9uXHQxOjEuNDU4XG4vLyBIZW1pb2xpb25cdDE6MS41XG4vLyBBdXJvbiAodGhlIGdvbGRlbiByYXRpbylcbi8vIEhlY3RvbiAob3IgU2l4dG9uKVxuLy8gRG9wcGVscXVhZHJhdCAoSGFsdmVzKVxuLy9cbi8vIEZvbGxvd2VkIGJ5IGNvbW1vbiByYXRpb25hbCByYXRpb3MuXG4kcmF0aW86IChcbiAgcXVhcmF0OiAxLFxuICBoZW1pZGlhZ29uOiAxLjExODAzMzk4ODc0OTg5NDgsXG4gIHRyaW9uOiAxLjE1NDcwMDUzODM3OTI1MTUsXG4gIHF1YWRyaWFnb246IDEuMjA3MTA2NzgxMTg2NTQ3NSxcbiAgYmlhdXJvbjogMS4yMzYwNjc5Nzc0OTk3ODk2LFxuICBwZW50b246IDEuMjcyMDE5NjQ5NTE0MTEwMyxcbiAgZGlhZ29uOiAxLjQxNDIxMzU2MjM3MzA5NSxcbiAgYmlwZW50b246IDEuNDU4LFxuICBoZW1pb2xpb246IDEuNSxcbiAgYXVyb246IDEuNjE4MDMzOTg4NzQ5ODk0LFxuICBoZWN0b246IDEuNzMyMDUwODA3NTY4ODc3MyxcbiAgZG9wcGVscXVhZHJhdDogMixcbiAgZ29sZGVuLXJhdGlvOiAxLjYxODAzMzk4ODc0OTg5NCxcbiAgdW5pc29uOiAxLFxuICBtaW5vci1zZWNvbmQ6IDEuMDY3LFxuICBtYWpvci1zZWNvbmQ6IDEuMTI1LFxuICBtaW5vci10aGlyZDogMS4yLFxuICBtYWpvci10aGlyZDogMS4yNSxcbiAgcGVyZmVjdC1mb3VydGg6IDEuMzMzLFxuICBhdXRtZW50ZWQtZm91cnRoOiAxLjQxNCxcbiAgZGltaW5pc2hlZC1maWZ0aDogMS40MTQsXG4gIHBlcmZlY3QtZmlmdGg6IDEuNSxcbiAgbWlub3Itc2l4dGg6IDEuNixcbiAgbWFqb3Itc2l4dGg6IDEuNjY3LFxuICBtaW5vci1zZXZlbnRoOiAxLjc3OCxcbiAgbWFqb3Itc2V2ZW50aDogMS44NzUsXG4gIG9jdGF2ZTogMixcbiAgbWFqb3ItdGVudGg6IDIuNSxcbiAgbWFqb3ItZWxldmVudGg6IDIuNjY3LFxuICBtYWpvci10d2VsZnRoOiAzLFxuICBkb3VibGUtb2N0YXZlOiA0XG4pICFkZWZhdWx0O1xuXG4vLyBWYXJpYWJsZSBtYXBzXG4kaGFybW9uaWMtcmF0aW86IG1hcC1nZXQoJHJhdGlvLCBkaWFnb24pO1xuXG4kdGV4dDogKFxuICByb290OiAxOHB4LFxuICBub3JtYWwtcmVtOiAxLFxuICBzbWFsbDogMSAvICRoYXJtb25pYy1yYXRpbyxcbiAgbGFyZ2U6IHJhdGlvKDEpLFxuICBsYXJnZXI6IHJhdGlvKDIpLFxuICBsYXJnZXN0OiByYXRpbygzKVxuKSAhZGVmYXVsdDtcblxuJGNvbG9yOiAoXG4gIG1haW46ICM5ZjJlMzIsXG4gIGRhcmstbWFpbjogIzcxMDcwNyxcbiAgYWNjZW50OiAjNDk5NjcxLFxuICBicmlnaHQtYWNjZW50OiAjODc5NjhjLFxuICBkYXJrLWFjY2VudDogIzE0NmE2YyxcbiAgZGFyazogcmdiYSg1MCwgNDQsIDQwLCAxKSxcbiAgbWVkaXVtLWdyZXk6IHJnYmEoMjAsIDE0LCAxMCwgLjU3KSxcbiAgYnJpZ2h0LWdyZXk6IHJnYmEoMjAsIDEzLCAxMCwgLjIpLFxuICBicmlnaHQ6IHJnYmEoMjQ1LCAyNDAsIDIzNywgLjg3KSxcbiAgYnJpZ2h0ZXN0OiAjZmZmXG4pICFkZWZhdWx0O1xuXG4kY29sb3ItZGVmczogKFxuICBoZWFkZXI6IHJnYmEobWFwLWdldCgkY29sb3IsIGRhcmspLCAuOSksXG4pICFkZWZhdWx0O1xuXG4kY29udGFpbmVyOiAoXG4gIG1pbmk6IDM4OCxcbiAgc21hbGw6IDYyOCxcbiAgbWVkaXVtOiA3NTEsXG4gIGxhcmdlOiAxMDE2LFxuICB4bGFyZ2U6IDEyMTVcbikgIWRlZmF1bHQ7XG5cbi8vIE5vIG5lZWQgZm9yIFwib25seSBzY3JlZW4gYW5kXCIsIGRpc3BsYXkgYW5kIGRlbGl2ZXIgc2FtZSBjb250ZW50IHRvIHByaW50IGFuZCBzY3JlZW4sIGRvbid0IGhpZGUgZnJvbSBvbGQgYnJvd3NlcnMuXG4kYnJlYWtwb2ludHM6IChcbiAgeG1pbmk6IG1hcC1nZXQoJGNvbnRhaW5lciwgbWluaSksXG4gIG1pbmk6IG1hcC1nZXQoJGNvbnRhaW5lciwgbWluaSkgKyA1MHB4LFxuICBzbWFsbDogbWFwLWdldCgkY29udGFpbmVyLCBzbWFsbCkgKyA4MHB4LFxuICBtZWRpdW06IG1hcC1nZXQoJGNvbnRhaW5lciwgbWVkaXVtKSArIDgwcHgsXG4gIGxhcmdlOiBtYXAtZ2V0KCRjb250YWluZXIsIGxhcmdlKSArIDgwcHgsXG4gIHhsYXJnZTogbWFwLWdldCgkY29udGFpbmVyLCB4bGFyZ2UpICsgODBweFxuKTtcblxuLy8gU2V0dGluZ3NcblxuLy8gTm9ybWFsaXplclxuJGxvYm90b21pemVkLW93bDogdHJ1ZTtcbiRvbGRlc3Qtc3VwcG9ydGVkLWllLXZlcnNpb246IDk7XG4iLCIvLyBJTVBPUlRTXG5cbi8vIEBpbXBvcnQgdXJsKGh0dHA6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9wZW4rU2Fuczo0MDBpdGFsaWMsNDAwLDcwMCwzMDAmc3Vic2V0PWxhdGluLWV4dCx2aWV0bmFtZXNlLGdyZWVrLGN5cmlsbGljKTtcblxuLy8gU2V0IGJhc2UgZm9udCBzaXplIG9uIGh0bWwgZm9yIGVhc2llc3QgUkVNIHVzZVxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogbWFwLWdldCgkdGV4dCwgcm9vdCk7XG59XG5cbi8vIEluc3RpbGwgYm9keSBjb25zdGFudHNcbmJvZHkge1xuICBmb250OiA0MDAgMWVtIC8gMS41ICdMYXRvJywgJ0hlbHZldGljYSBOZXVlJywgSGVsdmV0aWNhLCBBcmlhbCwgJ0x1Y2lkYSBHcmFuZGUnLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogbWFwLWdldCgkY29sb3IsIGRhcmspO1xuICAvLyBiYWNrZ3JvdW5kOiBtYXAtZ2V0KCRjb2xvciwgYnJpZ2h0KTtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIC4zNSk7XG59XG5cbnAsXG5saSxcbmlucHV0LFxudGV4dGFyZWEsXG5zZWxlY3QsXG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1rZXJuaW5nOiBub3JtYWw7XG4gIGZvbnQtdmFyaWFudC1saWdhdHVyZXM6IG5vcm1hbDtcbn1cblxuJXRleHQtLWxhcmdlc3QsXG4ldGV4dC0tbGFyZ2VyLFxuJXRleHQtLWxhcmdlLFxuJXRleHQtLWJpZyB7XG4gIGZvbnQtc2l6ZTogI3ttYXAtZ2V0KCR0ZXh0LCBsYXJnZSl9cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogbGluZS1oZWlnaHQtaGFybW9ueShtYXAtZ2V0KCR0ZXh0LCBsYXJnZSksIG1hcC1nZXQoJGNvbnRhaW5lciwgbWluaSkpO1xuICBsZXR0ZXItc3BhY2luZzogLS4wNmVtO1xuICBmb250LXZhcmlhbnQtbGlnYXR1cmVzOiBjb21tb24tbGlnYXR1cmVzO1xuICBmb250LWtlcm5pbmc6IG5vcm1hbDtcblxuICBAaW5jbHVkZSBtZWRpYSgnPj1zbWFsbCcpIHtcbiAgICBsaW5lLWhlaWdodDogbGluZS1oZWlnaHQtaGFybW9ueShtYXAtZ2V0KCR0ZXh0LCBsYXJnZSksIG1hcC1nZXQoJGNvbnRhaW5lciwgc21hbGwpKTtcbiAgfVxufVxuXG4ldGV4dC0tbGFyZ2VzdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuXG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIGZvbnQtc2l6ZTogI3ttYXAtZ2V0KCR0ZXh0LCBsYXJnZXIpfXJlbTtcbiAgICBsaW5lLWhlaWdodDogbGluZS1oZWlnaHQtaGFybW9ueShtYXAtZ2V0KCR0ZXh0LCBsYXJnZXIpLCBtYXAtZ2V0KCRjb250YWluZXIsIHNtYWxsKSk7XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYSgnPj1tZWRpdW0nKSB7XG4gICAgZm9udC1zaXplOiAje21hcC1nZXQoJHRleHQsIGxhcmdlc3QpfXJlbTtcbiAgICBsaW5lLWhlaWdodDogbGluZS1oZWlnaHQtaGFybW9ueShtYXAtZ2V0KCR0ZXh0LCBsYXJnZXN0KSwgbWFwLWdldCgkY29udGFpbmVyLCBtZWRpdW0pKTtcbiAgICBsZXR0ZXItc3BhY2luZzogLS4wM2VtO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWEoJz49bGFyZ2UnKSB7XG4gICAgbGluZS1oZWlnaHQ6IGxpbmUtaGVpZ2h0LWhhcm1vbnkobWFwLWdldCgkdGV4dCwgbGFyZ2VzdCksIG1hcC1nZXQoJGNvbnRhaW5lciwgbGFyZ2UpKTtcbiAgfVxufVxuXG4ldGV4dC0tbGFyZ2VyIHtcbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgbGluZS1oZWlnaHQ6IGxpbmUtaGVpZ2h0LWhhcm1vbnkobWFwLWdldCgkdGV4dCwgbGFyZ2UpLCBtYXAtZ2V0KCRjb250YWluZXIsIHNtYWxsKSk7XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYSgnPj1tZWRpdW0nKSB7XG4gICAgZm9udC1zaXplOiAje21hcC1nZXQoJHRleHQsIGxhcmdlcil9cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiBsaW5lLWhlaWdodC1oYXJtb255KG1hcC1nZXQoJHRleHQsIGxhcmdlciksIG1hcC1nZXQoJGNvbnRhaW5lciwgbWVkaXVtKSk7XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYSgnPj1sYXJnZScpIHtcbiAgICBsaW5lLWhlaWdodDogbGluZS1oZWlnaHQtaGFybW9ueShtYXAtZ2V0KCR0ZXh0LCBsYXJnZXIpLCBtYXAtZ2V0KCRjb250YWluZXIsIGxhcmdlKSk7XG4gIH1cbn1cblxuJXRleHQtLWxhcmdlIHtcbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgbGluZS1oZWlnaHQ6IGxpbmUtaGVpZ2h0LWhhcm1vbnkobWFwLWdldCgkdGV4dCwgbGFyZ2UpLCBtYXAtZ2V0KCRjb250YWluZXIsIHNtYWxsKSk7XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYSgnPj1tZWRpdW0nKSB7XG4gICAgbGluZS1oZWlnaHQ6IGxpbmUtaGVpZ2h0LWhhcm1vbnkobWFwLWdldCgkdGV4dCwgbGFyZ2UpLCBtYXAtZ2V0KCRjb250YWluZXIsIG1lZGl1bSkpO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWEoJz49bGFyZ2UnKSB7XG4gICAgbGluZS1oZWlnaHQ6IGxpbmUtaGVpZ2h0LWhhcm1vbnkobWFwLWdldCgkdGV4dCwgbGFyZ2UpLCBtYXAtZ2V0KCRjb250YWluZXIsIGxhcmdlKSk7XG4gIH1cbn1cblxuJWJyaWdodC10ZXh0LWNvbG9yIHtcbiAgY29sb3I6IG1hcC1nZXQoJGNvbG9yLCBicmlnaHQpO1xufVxuXG4lbWVkaXVtLWdyZXktdGV4dC1jb2xvciB7XG4gIGNvbG9yOiBtYXAtZ2V0KCRjb2xvciwgbWVkaXVtLWdyZXkpO1xufVxuXG4vLyBib2xkIGZvbnQgZGVmaW5lZCBoZXJlLCBzbyBmb250IGlzIGVhc2lseSBleGNoYW5nYWJsZSBhbmQgdG8gYXZvaWQgZmF1eCBib2xkXG4lYm9sZC1mb250IHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuJXRleHQtLXNtYWxsIHtcbiAgZm9udC1zaXplOiAocmF0aW8oMSkgLyAyKSN7cmVtfTtcbn1cblxuLy8gV2lsbCBvbmx5IGJlIHNwb2tlbiBieSBzY3JlZW4gcmVhZGVycy5cbiV0ZXh0LS1zcGVhayB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIHBhZGRpbmc6IDA7XG59XG4iLCIuYmlsbGJvYXJkIHtcbiAgQGV4dGVuZCAlYnJpZ2h0LXRleHQtY29sb3I7XG4gIEBleHRlbmQgJWZsZXg7XG4gIEBleHRlbmQgJWpjLWNlbnRlcjtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgcGFkZGluZzogcmF0aW8oMywgZW0pIDA7XG4gIGZsZXg6IDEwMHZ3O1xuICBmaWxsOiBtYXAtZ2V0KCRjb2xvciwgYnJpZ2h0KTtcbn1cblxuLmJpbGxib2FyZC0tZGVmYXVsdCB7XG4gIGJhY2tncm91bmQ6IG1hcC1nZXQoJGNvbG9yLCBtYWluKTtcbn1cblxuLmJpbGxib2FyZC0tYXR0ZW50aW9uIHtcbiAgYmFja2dyb3VuZDogbWFwLWdldCgkY29sb3IsIGRhcmspO1xufVxuXG4vLyAuYmlsbGJvYXJkLS1pbWFnZSB7XG4vLyAgIG1pbi1oZWlnaHQ6IDEwdmg7XG4vLyAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgLjUpIHVybCgnaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE0NDM1MjcyMTYzMjAtN2U3NDQwODRmNWE3P2ZpdD1jcm9wJmZtPWpwZyZoPTExNTAmaXhsaWI9cmItMC4zLjUmcT04MCZ3PTEwMjUnKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlciBmaXhlZDtcbi8vICAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbi8vICAgYmFja2dyb3VuZC1ibGVuZC1tb2RlOiBtdWx0aXBseTtcbi8vICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuLy8gfVxuXG5cbi5iaWxsYm9hcmRfX3RpdGxlIHtcbiAgQGV4dGVuZCAldGV4dC0tbGFyZ2VzdDtcbn1cblxuLmJpbGxib2FyZF9fY29udGVudCB7XG4gIGZsZXg6IDEwMHZ3O1xufVxuXG4ubWV0YWJsb2NrIHtcbiAgQGV4dGVuZCAlZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICBAaW5jbHVkZSBtZWRpYSgnPj1zbWFsbCcpIHtcbiAgICBmbGV4OiAwIGNhbGMoMzMlIC0gI3tyYXRpbygyLCByZW0pfSk7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICB9XG59XG5cbi5tZXRhYmxvY2tfX3RpdGxlIHtcbiAgQGV4dGVuZCAldGV4dC0tbGFyZ2U7XG59XG4iLCIuZm9vdGVyIHtcbiAgQGV4dGVuZCAlYnJpZ2h0LXRleHQtY29sb3I7XG4gIEBleHRlbmQgJXRvcC1tYXJnaW4tb2ZmO1xuICBwYWRkaW5nOiByYXRpbygtNCwgcmVtKSAwOyAvLyBwYWRkaW5nIGluc3RlYWQgb2YgaGVpZ2h0LCBzbyBjb250ZW50IGNhbiBiZSB2YXJpZWRcbiAgLy8gZm9udC1zaXplOiByYXRpbygtMSwgcmVtKTtcbiAgYmFja2dyb3VuZDogbWFwLWdldCgkY29sb3IsIGRhcmspO1xuXG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIG1hcmdpbi10b3A6IHJhdGlvKDUsIHJlbSk7XG4gIH1cbn1cbiIsIi5mb3JtX19maWVsZHNldCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm9yZGVyLWNvbGxhcHNlOiBzZXBhcmF0ZTtcbn1cblxuLmZvcm1fX2lucHV0LFxuJWZvcm1fX2lucHV0IHtcbiAgQGV4dGVuZCAlaXMtcm91bmRlZDtcbiAgQGV4dGVuZCAlaGFzLXNoYWRvdy1mb2N1cy1lZmZlY3Q7XG4gIEBleHRlbmQgJXBhZGRpbmctLWNvbW1vbjtcbiAgY29sb3I6IG1hcC1nZXQoJGNvbG9yLCBkYXJrKTtcbiAgZGlzcGxheTogYmxvY2s7IC8vIHRleHRhcmVhXG4gIGJvcmRlcjogMXB4IHNvbGlkIG1hcC1nZXQoJGNvbG9yLCBicmlnaHQtZ3JleSk7XG4gIGJhY2tncm91bmQtY29sb3I6IG1hcC1nZXQoJGNvbG9yLCBicmlnaHRlc3QpO1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IC8vIGZvciBzZWFyY2ggZmllbGRzIGFuZCBzZWxlY3RcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lOyAvLyBmb3Igc2VhcmNoIGZpZWxkcyBhbmQgc2VsZWN0XG59XG5cbi5mb3JtX19sYWJlbCB7XG4gIEBleHRlbmQgJWJvbGQtZm9udDtcbn1cblxuLmZvcm1fX2N0YSB7XG4gIEBleHRlbmQgJWJ1dHRvbjtcbiAgQGV4dGVuZCAlYnV0dG9uLS1hY3Rpb247XG59XG4iLCIvLyBCcm93c2UgZ3JpZFxuLmJyb3dzZS13cmFwIHtcbiAgQGV4dGVuZCAld3JhcDtcblxuICBAaW5jbHVkZSBtZWRpYSgnPj1zbWFsbCcpIHtcbiAgICBtYXgtd2lkdGg6IGNhbGMoI3ttYXAtZ2V0KCRjb250YWluZXIsIHhsYXJnZSl9cHggKyAoI3tyYXRpbygxLCByZW0pfSAqIDIpKTtcbiAgICBmbGV4OiAwIGNhbGMoODYuMjkydncgKyAoI3tyYXRpbygxLCByZW0pfSAqIDIpKTtcbiAgfVxufVxuXG4uY2FyZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbjogcmF0aW8oMSwgcmVtKSAwO1xuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG5cbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgbWFyZ2luOiByYXRpbygxLCByZW0pO1xuICAgIGZsZXg6IDEgY2FsYygje3BlcmNlbnRhZ2UoMSAvIDMpfSAtICgje3JhdGlvKDEsIHJlbSl9ICogMikpO1xuICB9XG59XG5cbi5jYXJkOm50aC1vZi10eXBlKDVuKzEpIHtcbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgZmxleDogMSBjYWxjKCN7cGVyY2VudGFnZSgyIC8gMyl9IC0gKCN7cmF0aW8oMSwgcmVtKX0gKiAyKSk7XG4gIH1cbn1cblxuLmNhcmQ6bnRoLW9mLXR5cGUoMTBuKzApIHtcbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgZmxleDogMSBjYWxjKDEwMCUgLSAoI3tyYXRpbygxLCByZW0pfSAqIDIpKTtcbiAgfVxufVxuXG5cbi5jYXJkX19hY3Rpb24ge1xuICBAZXh0ZW5kICVsaW5rLS1uZXV0cmFsO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4OiAxO1xuICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xufVxuXG4uY2FyZF9faW1nYmxvY2sge1xuICB3aWR0aDogMTAwJTsgLy8gZml4ZXMgYnVnIHdoZXJlIGRpdiB3b24ndCBpbmNsdWRlIGFsbCBvZiB0aGUgcGljdHVyZTtcbn1cblxuLmNhcmRfX3RpdGxlIHtcbiAgQGV4dGVuZCAldGV4dC0tYmlnO1xufVxuXG4uY2FyZF9fYWJvdXQge1xuICBmbGV4OiAxO1xufVxuXG4uY2FyZF9fZm9vdGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG59XG5cbi5jYXJkX19jdGEge1xuICBAZXh0ZW5kICVsaW5rO1xuICBAZXh0ZW5kICVsaW5rLS1icmlnaHQ7XG4gIEBleHRlbmQgJWdyaWQtLWNlbnRlci0tZXZlcnl0aGluZztcbiAgaGVpZ2h0OiByYXRpbygzLCByZW0pO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBib3JkZXItcmFkaXVzOiByYXRpbygzLCByZW0pO1xuICBiYWNrZ3JvdW5kOiAobWFwLWdldCgkY29sb3IsIG1haW4pKTtcbn1cblxuLmNhcmRfX21ldGEge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4uY2FyZF9fbWV0YS0tY291bnRyeSxcbi5jYXJkX19tZXRhLS10YWcge1xuICBAZXh0ZW5kICVsaW5rO1xuICBAZXh0ZW5kICVsaW5rLS1icmlnaHQ7XG4gIEBleHRlbmQgJWdyaWQtLWNlbnRlci0tZXZlcnl0aGluZztcbiAgQGV4dGVuZCAldG9wLW1hcmdpbi1vZmY7XG4gIEBleHRlbmQgJXRleHQtLXNtYWxsO1xuICBoZWlnaHQ6IHJhdGlvKDEsIHJlbSk7XG4gIG1hcmdpbi1yaWdodDogcmF0aW8oLTUsIHJlbSk7XG4gIG1hcmdpbi1ib3R0b206IHJhdGlvKC01LCByZW0pO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBib3JkZXItcmFkaXVzOiByYXRpbygzLCByZW0pO1xuICBmbGV4OiAxIHJhdGlvKDMsIHJlbSk7XG59XG5cblxuLmNhcmRfX21ldGEtLXRhZyB7XG4gIGJhY2tncm91bmQ6IG1hcC1nZXQoJGNvbG9yLCBkYXJrLWFjY2VudCk7XG59XG5cbi5jYXJkX19tZXRhLS1jb3VudHJ5IHtcbiAgYmFja2dyb3VuZDogbWFwLWdldCgkY29sb3IsIGFjY2VudCk7XG59XG4iLCIvLyBMb2JvdG9taXplZCBvd2wgYXBwbGllcyBtYXJnaW4gdG9wIHRvIGV2ZXJ5IGNoaWxkIGVsZW1lbnQuXG4vLyBodHRwOi8vYWxpc3RhcGFydC5jb20vYXJ0aWNsZS9heGlvbWF0aWMtY3NzLWFuZC1sb2JvdG9taXplZC1vd2xzXG4qIHtcbiAgbWFyZ2luOiAwO1xuXG4gICsgKiB7XG4gICAgbWFyZ2luLXRvcDogcmF0aW8oMSwgZW0pO1xuICB9XG59XG5cbmhlYWRlcixcbiV0b3AtbWFyZ2luLW9mZi1vbi1jaGlsZHJlbiA+ICosXG4ldG9wLW1hcmdpbi1vZmYge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuXG4ld3JhcCxcbi53cmFwIHtcbiAgbWF4LXdpZHRoOiAje21hcC1nZXQoJGNvbnRhaW5lciwgeGxhcmdlKX1weDtcbiAgZmxleDogMCA4Ni4yOTJ2dztcbn1cblxuLy8gZmxleGJveCBiYXNlZCBncmlkIHN5c3RlbS5cbi8vIENvbnRhaW5lcnNcbiVmbGV4IHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuJWpjLXNwYWNlLWJldHdlZW4ge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbiVqYy1jZW50ZXIge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuJWZsZXgtZmxvdy1jb2x1bW4td3JhcCB7XG4gIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XG59XG5cbiVncmlkLFxuLmdyaWQge1xuICBAZXh0ZW5kICVmbGV4O1xuICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgfVxufVxuXG4uZ3JpZC0tY29sdW1uIHtcbiAgQGV4dGVuZCAlZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmdyaWQtLXJvdyB7XG4gIEBleHRlbmQgJWZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5ncmlkLS1zcGFjZS1hcm91bmQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbn1cblxuLmdyaWQtLWNlbnRlciB7XG4gIEBleHRlbmQgJWZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIGZsZXg6IDEgMTAwdnc7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG5ib2R5IHtcbiAgQGV4dGVuZCAlZmxleDtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbiVncmlkLS1jZW50ZXItLWV2ZXJ5dGhpbmcge1xuICBAZXh0ZW5kICVmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmdyaWQtLWluaXRpYWwge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG59XG5cbi5ncmlkLS1lbmQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBhbGlnbi1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmdyaWQtLWNlbnRlci0tdixcbiVncmlkLS1jZW50ZXItLXYge1xuICBAaW5jbHVkZSBtZWRpYSgnPj1zbWFsbCcpIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG59XG5cbi8vIEJsb2Nrc1xuLmdyaWRfX2Jsb2NrIHtcbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxufVxuXG4uYmxvY2stLWZ1bGxzcGFuLS1sYXJnZSB7XG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIGZsZXg6IDEwMHZ3O1xuICB9XG59XG5cbiRjb2x1bW5zOiAzO1xuQGZvciAkaSBmcm9tIDEgdG8gJGNvbHVtbnMgKyAxIHtcbiAgLmdyaWRfX3dpZHRoLS0jeyRpfSB7XG4gICAgZmxleDogMCBjYWxjKCN7cGVyY2VudGFnZSgkaSAvICRjb2x1bW5zKX0gLSAje3JhdGlvKDIsIHJlbSl9KTtcbiAgfVxufVxuXG5AZm9yICRpIGZyb20gMSB0byAkY29sdW1ucyArIDEge1xuICAuZ3JpZF9fYmxvY2stLSN7JGl9IHtcbiAgICBmbGV4OiByYXRpbygkaSk7XG4gIH1cbn1cblxuLnByaW9yaXR5LS1sYXN0IHtcbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgb3JkZXI6IDEwO1xuICB9XG59XG5cbi5wcmlvcml0eS0taW1wb3J0YW50IHtcbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgb3JkZXI6IC0xMDtcbiAgfVxufVxuIiwiLy9cbi8vIFJlbW92ZSB1bml0IChQWCwgRU0gZXRjKSBmcm9tIG51bWJlcnNcbi8vXG5AZnVuY3Rpb24gdW5pdGxlc3MoJG51bWJlcikge1xuICAkbjogJG51bWJlciAvICgkbnVtYmVyICogMCArIDEpO1xuICBAcmV0dXJuICRuO1xufVxuXG4vL1xuLy8gQ29udmVydCBQWCB0byBSRU0gc2l6ZS5cbi8vXG5AZnVuY3Rpb24gY2FsY3VsYXRlLXJlbSgkcHgtc2l6ZSkge1xuICAkcmVtLXNpemU6ICRweC1zaXplIC8gJGZvbnQtc2l6ZTtcbiAgQHJldHVybiAjeyRyZW0tc2l6ZX1yZW07XG59XG5cbi8vXG4vLyBDb252ZXJ0IFBYIHRvIFJFTSB1bml0bGVzcy5cbi8vXG5AZnVuY3Rpb24gY2FsY3VsYXRlLWhlYWRsaW5lLWxpbmUtaGVpZ2h0KCRiYXNlLWxpbmUtaGVpZ2h0LCAkaGVhZGxpbmUtcHgtc2l6ZSkge1xuICAkcmVtLXNpemU6ICRoZWFkbGluZS1weC1zaXplIC8gJGZvbnQtc2l6ZTtcbiAgQHJldHVybiAkYmFzZS1saW5lLWhlaWdodCAvICRyZW0tc2l6ZTtcbn1cblxuLy9cbi8vIENvbnZlcnQgRU0gdG8gUFgsIHVuaXRsZXNzLlxuLy9cbkBmdW5jdGlvbiBjb252ZXJ0LWVtLXRvLXB4KCR1bml0bGVzcy1lbSkge1xuICBAcmV0dXJuICR1bml0bGVzcy1lbSAqIHVuaXRsZXNzKCRmb250LXNpemUpO1xufVxuXG4vL1xuLy8gRm9udCBzaXplIHdpdGggcHggZmFsbGJhY2sgZm9yIElFOS5cbi8vXG5AbWl4aW4gZm9udC1zaXplKCRweC1zaXplKSB7XG4gIGZvbnQtc2l6ZTogJHB4LXNpemU7XG4gIGZvbnQtc2l6ZTogY2FsY3VsYXRlLXJlbSgkcHgtc2l6ZSk7XG59XG5cbi8vXG4vLyBwb3coKSAtIFJhaXNlIG51bWJlciB0byB0aGUgbnRoIHBvd2VyXG4vLyBAcGFyYW0ge251bWJlcn0gJGJhc2UgICAgICBUaGUgYmFzZSBudW1iZXJcbi8vIEBwYXJhbSB7bnVtYmVyfSAkZXhwb25lbnRzIFRoZSBleHBvbmVudCB0byB3aGljaCB0byByYWlzZSAkYmFzZVxuLy9cbkBmdW5jdGlvbiBwb3coJGJhc2UsICRleHBvbmVudHMpIHtcbiAgJHJhaXNlZDogMTtcbiAgQGlmICRleHBvbmVudHMgPiAwIHtcbiAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoICRleHBvbmVudHMge1xuICAgICAgJHJhaXNlZDogJHJhaXNlZCAqICRiYXNlO1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkZXhwb25lbnRzIDwgMCB7XG4gICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAtJGV4cG9uZW50cyB7XG4gICAgICAkcmFpc2VkOiAkcmFpc2VkIC8gJGJhc2U7XG4gICAgfVxuICB9XG4gIEByZXR1cm4gJHJhaXNlZDtcbn1cbiIsIi8vIC5ncmlkLS1jZW50ZXJcblxuLmhlYWRlciB7XG4gIEBleHRlbmQgJW1hcmdpbi1vZmY7XG4gIEBleHRlbmQgJWJyaWdodC10ZXh0LWNvbG9yO1xuICBAZXh0ZW5kICVmbGV4O1xuICBAZXh0ZW5kICVqYy1jZW50ZXI7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZDogbWFwLWdldCgkY29sb3ItZGVmcywgaGVhZGVyKTtcbiAgZmxleDogMCAxMHZ3O1xuICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMTBweCkgc2F0dXJhdGUoMTUwJSk7XG5cblxuICBAaW5jbHVkZSBtZWRpYSgnPj1zbWFsbCcpIHtcbiAgICBmbGV4OiAxIDEwMHZ3O1xuICAgIG1heC13aWR0aDogMTAwdnc7XG4gICAgei1pbmRleDogMTAwMDtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgd2lkdGg6IDEwMHZ3O1xuICAgIHBhZGRpbmc6IDA7XG5cbiAgICAvLyBNYWtlcyBzdXJlIHBhZGRpbmcgaXMgYWRkZWQgYWZ0ZXIgaGVhZGVkcyBmaXhlZCBwb3NpdGlvblxuICAgIH4gLmhlYWRlci0tYWZ0ZXIge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgIHBhZGRpbmctdG9wOiByYXRpbyg0LCByZW0pO1xuICAgIH1cbiAgfVxufVxuXG4vLyAuaGVhZGVyX193cmFwIHtcbi8vICAgZGlzcGxheTogZmxleDtcbi8vICAgd2lkdGg6IDQwdnc7XG4vLyAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuLy9cbi8vICAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4vLyAgICAgd2lkdGg6IGF1dG87XG4vLyAgIH1cbi8vIH1cbiIsIi8vIFNIT1JUIFFVSUNLIFJFVVNBQkxFIENPTlNUQU5UU1xuLy8gUmVhZGFibGUgaHVtYW5lIG5hbWVzIGNsZWFybHkgZXhwbGFpbnMgd2hhdCBlYWNoIGNsYXNzIGRvLlxuXG4vLyBGYW5jeSBjb2xvciBlZmZlY3Qgb24gZm9jdXNlZCBpdGVtc1xuJWhhcy1zaGFkb3ctZm9jdXMtZWZmZWN0IHtcbiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyBlYXNlLWluLW91dCAxNTBtcztcbiAgYm94LXNoYWRvdzogMCAwIDFyZW0gcmF0aW8oMSwgcmVtKSB0cmFuc3BhcmVudCwgaW5zZXQgMCAwIDFyZW0gcmF0aW8oMSwgcmVtKSB0cmFuc3BhcmVudDtcbn1cblxuJWhhcy1zaGFkb3ctZm9jdXMtZWZmZWN0OmZvY3VzIHtcbiAgYm9yZGVyLWNvbG9yOiBtYXAtZ2V0KCRjb2xvciwgZGFyay1hY2NlbnQpO1xuICBvdXRsaW5lOiBub25lO1xuICBib3gtc2hhZG93OiAwIDAgcmF0aW8oMiwgcmVtKSBtYXAtZ2V0KCRjb2xvciwgYWNjZW50KSwgaW5zZXQgMCAwIHJhdGlvKC01LCByZW0pIG1hcC1nZXQoJGNvbG9yLCBhY2NlbnQpO1xufVxuXG4vLyBFeHRlbmRhYmxlIHJvdW5kZWQgY29ybmVycywgY29uc3RhbnQgcm91bmRlZCBzaGFwZXNcbiVpcy1yb3VuZGVkIHtcbiAgYm9yZGVyLXJhZGl1czogcmF0aW8oLTEsIHJlbSk7XG59XG5cbi8vIENvbW1vbiBwYWRkaW5ncywgY29uc3RhbnQgc3BhY2luZyBhcm91bmQgY2VydGFpbiBlbGVtZW50c1xuJXBhZGRpbmctLWNvbW1vbiB7XG4gIHBhZGRpbmc6IHJhdGlvKC0zLCByZW0pIHJhdGlvKC0yLCByZW0pO1xufVxuIiwiLy8gTWVudVxuXG4vLyBoaWRlIGNoZWNrYm94XG4uc3dpdGNoIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBvcGFjaXR5OiAwO1xuXG4gIH4gbGFiZWw6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgLy8gUmVtb3ZlcyB0aGUgbG9ib3RvbWl6ZWQgb3dsLlxuICAgIEBleHRlbmQgJXRvcC1tYXJnaW4tb2ZmO1xuICB9XG59XG5cbi5tZW51LWxhYmVsIHtcbiAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG5cbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgLy8gSGlkZSBvbiBsYXJnZSBzY3JlZW5cbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi5zd2l0Y2g6Y2hlY2tlZCB+IC5uYXYtLWhhbWJ1cmdlciB7XG4gIC5oYW1idXJnZXItaWNvbiB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcbiAgfVxuXG4gIC5oYW1idXJnZXI6OmJlZm9yZSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC40ZW0pIHJvdGF0ZSg5MGRlZyk7XG4gIH1cblxuICAuaGFtYnVyZ2VyOjphZnRlciB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0uNGVtKSByb3RhdGUoMTgwZGVnKTtcbiAgfVxufVxuXG4uaGFtYnVyZ2VyIHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxZW07XG4gIGhlaWdodDogMWVtO1xuICBwYWRkaW5nOiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAyMDBtcyBlYXNlLWluLW91dDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgYm9yZGVyOiAwIG5vbmU7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4uaGFtYnVyZ2VyOjpiZWZvcmUsXG4uaGFtYnVyZ2VyOjphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xufVxuXG4uaGFtYnVyZ2VyOjpiZWZvcmUsXG4uaGFtYnVyZ2VyOjphZnRlcixcbi5oYW1idXJnZXItaWNvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAuMWVtO1xuICBtYXJnaW46IDAgMCAuMjllbTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDIwMG1zIGN1YmljLWJlemllcigwLCAxLjMsIDEsIDEuMik7XG4gIGJvcmRlci1yYWRpdXM6IC41ZW07XG4gIGJhY2tncm91bmQ6IG1hcC1nZXQoJGNvbG9yLCBicmlnaHQpO1xufVxuIiwiLm5hdiB7XG4gIEBleHRlbmQgJWZsZXg7XG4gIEBleHRlbmQgJW1hcmdpbi10b3Atb2ZmO1xuICB0b3A6IC0xMHJlbTtcbiAgd2lkdGg6IDMwdnc7XG4gIGhlaWdodDogMDtcbiAgdHJhbnNpdGlvbjogYWxsIDQwMG1zIGN1YmljLWJlemllcigwLCAxLjMsIDEsIDEuMik7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgb3BhY2l0eTogMDtcbiAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xufVxuXG4uc3dpdGNoOmNoZWNrZWQgfiAubmF2IHtcbiAgdG9wOiAwO1xuICB3aWR0aDogMzB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgcGFkZGluZzogcmF0aW8oMSwgcmVtKTtcbiAgb3BhY2l0eTogMTtcbn1cblxuLm5hdixcbi5zd2l0Y2g6Y2hlY2tlZCB+IC5uYXYge1xuICBAaW5jbHVkZSBtZWRpYSgnPj1zbWFsbCcpIHtcbiAgICB0b3A6IDA7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogODZ2dztcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IGluaGVyaXQ7XG4gICAgdHJhbnNpdGlvbjogbm9uZTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gIH1cbn1cblxuLnN3aXRjaDpub3QoOmNoZWNrZWQpIH4gLm5hdiB7XG4gIG1hcmdpbjogMDtcbn1cblxuLm5hdi0taGFtYnVyZ2VyIHtcbiAgQGV4dGVuZCAlZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBoZWlnaHQ6IDJyZW07XG4gIHBhZGRpbmc6IDAgMXJlbTtcbiAgd2lkdGg6IDEwMHZ3O1xuICBiYWNrZ3JvdW5kOiBtYXAtZ2V0KCRjb2xvci1kZWZzLCBoZWFkZXIpO1xuICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMTBweCkgc2F0dXJhdGUoMTUwJSk7XG59XG5cblxuLm5hdl9fYWN0aW9uLFxuLm5hdl9fZm9ybSB7XG4gIEBleHRlbmQgJWxpbmstLWJyaWdodDtcblxuICBAaW5jbHVkZSBtZWRpYSgnPj1zbWFsbCcpIHtcbiAgICBtYXJnaW46IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG5cbi5uYXZfX2FjdGlvbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLy8gSUUgMTAgZG9lc24ndCByZWNvZ25pemUgb3JkZXIsIHNvIHdlIGRvIHRoaXMgdG8gYXZvaWQgb2RkIGxheW91dHMgdGhlcmUuXG5cbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGZsZXg6IDE7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxufVxuXG4ubmF2X19hY3Rpb24tLWhhcy1kcm9wZG93biB7XG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XG4gICAgZmxleDogMTtcbiAgfVxufVxuXG4ubmF2X19hY3Rpb24tLWRyb3Bkb3duLWFjdGlvbiB7XG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIGZsZXg6IDE7XG4gIH1cbn1cblxuLm5hdl9fZHJvcGRvd24ge1xuICBAZXh0ZW5kICVmbGV4O1xuICBkaXNwbGF5OiBub25lO1xuICBtYXJnaW4tdG9wOiByYXRpbygxLCByZW0pO1xuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG5cbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IHJhdGlvKDIsIHJlbSk7XG4gIH1cbn1cblxuXG4uc3dpdGNoOmNoZWNrZWQgfiAubmF2X19kcm9wZG93biB7XG4gIGRpc3BsYXk6IGZsZXg7XG5cbiAgQGluY2x1ZGUgbWVkaWEoJz49c21hbGwnKSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJhY2tncm91bmQ6IG1hcC1nZXQoJGNvbG9yLWRlZnMsIGhlYWRlcik7XG4gICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEwcHgpIHNhdHVyYXRlKDE1MCUpO1xuICB9XG59XG5cbi5uYXZfX2Zvcm0ge1xuICBAZXh0ZW5kICVmbGV4O1xuXG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIG1hcmdpbjogcmF0aW8oLTQsIHJlbSkgMDtcbiAgICBvcmRlcjogMTA7XG4gICAgZmxleDogcmF0aW8oMik7XG4gIH1cbn1cblxuLm5hdl9faW5wdXQge1xuICBAZXh0ZW5kICVmb3JtX19pbnB1dDtcbiAgZmxleDogMTtcbn1cbiIsIi8vXG4vLyAxLiBSZW1vdmVzIHN1cGVyIHNlbnNldGl2ZSBzZWxlY3Rpb24gb24gdG91Y2ggaW50ZXJmYWNlc1xuLy9cblxuJWJ1dHRvbiB7XG4gIEBleHRlbmQgJWxpbmstLWJyaWdodDtcbiAgQGV4dGVuZCAlaXMtcm91bmRlZDtcbiAgQGV4dGVuZCAlaGFzLXNoYWRvdy1mb2N1cy1lZmZlY3Q7XG4gIHBhZGRpbmc6IHJhdGlvKC0yLCBlbSkgcmF0aW8oMSwgZW0pO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHVzZXItc2VsZWN0OiBub25lOyAvLyAxXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBib3JkZXI6IDA7XG59XG5cblxuQG1peGluIGJ1dHRvbigkY29sb3IpIHtcbiAgYmFja2dyb3VuZDogJGNvbG9yO1xuICA6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6IGxpZ2h0ZW4oJGNvbG9yLCAzMCUpO1xuICB9XG59XG5cbiVidXR0b24tLWFjdGlvbiB7XG4gIGJhY2tncm91bmQ6IG1hcC1nZXQoJGNvbG9yLCBkYXJrLW1haW4pO1xufVxuXG4lYnV0dG9uLS1hY3Rpb246aG92ZXIsXG4lYnV0dG9uLS1hY3Rpb246Zm9jdXMge1xuICBiYWNrZ3JvdW5kOiBsaWdodGVuKG1hcC1nZXQoJGNvbG9yLCBkYXJrLW1haW4pLCAxMCk7XG59XG5cbiVidXR0b24tLWFjdGlvbjphY3RpdmUge1xuICBiYWNrZ3JvdW5kOiBsaWdodGVuKG1hcC1nZXQoJGNvbG9yLCBkYXJrLW1haW4pLCAxNSk7XG59XG5cbiVidXR0b24tLWRlY2xpbmUge1xuICBiYWNrZ3JvdW5kOiBtYXAtZ2V0KCRjb2xvciwgYnJpZ2h0LWFjY2VudCk7XG59XG5cbiVidXR0b24tLWRlY2xpbmU6aG92ZXIsXG4lYnV0dG9uLS1kZWNsaW5lOmZvY3VzIHtcbiAgYmFja2dyb3VuZDogbGlnaHRlbihtYXAtZ2V0KCRjb2xvciwgYnJpZ2h0LWFjY2VudCksIDEwKTtcblxufVxuXG4lYnV0dG9uLS1kZWNsaW5lOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6IGxpZ2h0ZW4obWFwLWdldCgkY29sb3IsIGJyaWdodC1hY2NlbnQpLCAxNSk7XG59XG4iLCIubGluayxcbiVsaW5rIHtcbiAgQGV4dGVuZCAlaGFzLXNoYWRvdy1mb2N1cy1lZmZlY3Q7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuJWxpbmstLW9wYWNpdHk6aG92ZXIsXG4lbGluay0tb3BhY2l0eTpmb2N1cyB7XG4gIG9wYWNpdHk6IC44O1xufVxuXG4lbGluay0tYnJpZ2h0IHtcbiAgQGV4dGVuZCAlbGluaztcbiAgQGV4dGVuZCAlYnJpZ2h0LXRleHQtY29sb3I7XG59XG5cbiVsaW5rLS1icmlnaHQ6aG92ZXIsXG4lbGluay0tYnJpZ2h0OmZvY3VzLFxuJWxpbmstLWJyaWdodDphY3RpdmUge1xuICBjb2xvcjogb3BhY2lmeShtYXAtZ2V0KCRjb2xvciwgYnJpZ2h0KSwgLjIpO1xufVxuXG4lbGluay0tbmV1dHJhbCB7XG4gIEBleHRlbmQgJWxpbms7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6IGluaGVyaXQ7XG59XG4iLCIubGlzdC0tZGVmYXVsdCB7XG4gIEBleHRlbmQgJXRvcC1tYXJnaW4tb2ZmLW9uLWNoaWxkcmVuO1xufVxuXG4ubGlzdC0tdW5zdHlsZWQge1xuICBAZXh0ZW5kICVsaXN0LS11bnN0eWxlZDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcblxuICBAaW5jbHVkZSBtZWRpYSgnPj1zbWFsbCcpIHtcbiAgICBAZXh0ZW5kICV0b3AtbWFyZ2luLW9mZi1vbi1jaGlsZHJlbjtcbiAgfVxufVxuXG4ubGlzdF9fbGluay0tc3BhY2lvdXMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmxpc3RfX2l0ZW0tLXNwYWNpb3VzLFxuLmxpc3RfX2xpbmstLXNwYWNpb3VzIHtcbiAgcGFkZGluZzogcmF0aW8oLTEsIGVtKSAwO1xuXG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIHBhZGRpbmc6IHJhdGlvKC0xLCBlbSkgMWVtO1xuICB9XG59XG5cbi5saXN0X19mb3JtLS1zcGFjaW91cyB7XG4gIEBpbmNsdWRlIG1lZGlhKCc+PXNtYWxsJykge1xuICAgIHBhZGRpbmctcmlnaHQ6IHJhdGlvKC0xLCBlbSk7XG4gICAgcGFkZGluZy1sZWZ0OiByYXRpbygtMSwgZW0pO1xuICB9XG59XG4iLCIuaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLmltZy0tcm91bmQge1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG59XG4iLCIvLyBTVkcgaWNvbnNcbi5zdmdoaWRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmljb24ge1xuICAvLyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG59XG5cbi5pY29uLS1zbWFsbCB7XG4gIHdpZHRoOiByYXRpbygtMiwgcmVtKTtcbiAgaGVpZ2h0OiByYXRpbygtMiwgcmVtKTtcbiAgbWFyZ2luOiAwIHJhdGlvKC00LCByZW0pO1xufVxuXG4uaWNvbi0tbWVkaXVtIHtcbiAgd2lkdGg6IHJhdGlvKDIsIHJlbSk7XG4gIGhlaWdodDogcmF0aW8oMiwgcmVtKTtcbiAgbWFyZ2luOiByYXRpbygtNCwgcmVtKTtcbn1cblxuLmljb24tLWxhcmdlIHtcbiAgd2lkdGg6IHJhdGlvKDMsIHJlbSk7XG4gIGhlaWdodDogcmF0aW8oMywgcmVtKTtcbn1cblxuLmljb24tLWxvZ28ge1xuICB3aWR0aDogcmF0aW8oMiwgcmVtKTtcbiAgaGVpZ2h0OiByYXRpbygxLCByZW0pO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBmaWxsOiBtYXAtZ2V0KCRjb2xvciwgYnJpZ2h0KTtcbiAgbWl4LWJsZW5kLW1vZGU6IGRpZmZlcmVuY2U7XG59XG5cbiV3aGl0ZS1iYWNrZ3JvdW5kIHtcbiAgYmFja2dyb3VuZDogbWFwLWdldCgkY29sb3IsIGJyaWdodCk7XG59XG5cbi5pY29uLS1mYWNlYm9vayB7XG4gIEBleHRlbmQgJXdoaXRlLWJhY2tncm91bmQ7XG4gIGZpbGw6ICMzYjU5OTg7XG59XG5cbi5pY29uLS1nb29nbGVwbHVzIHtcbiAgQGV4dGVuZCAld2hpdGUtYmFja2dyb3VuZDtcbiAgZmlsbDogI2QzNDgzNjtcbn1cblxuLmljb24tLXR3aXR0ZXIge1xuICBAZXh0ZW5kICV3aGl0ZS1iYWNrZ3JvdW5kO1xuICBmaWxsOiAjNDA5MGZmO1xufVxuXG4vLyBGb250IGljb25zXG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ2ljb21vb24nO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKCcuLi9mb250cy9pY29tb29uLmVvdCcpO1xuICBzcmM6IHVybCgnLi4vZm9udHMvaWNvbW9vbi5lb3QjaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2ljb21vb24udHRmJykgZm9ybWF0KCd0cnVldHlwZScpLFxuICAgICAgICAgdXJsKCcuLi9mb250cy9pY29tb29uLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgIHVybCgnLi4vZm9udHMvaWNvbW9vbi5zdmcjaWNvbW9vbicpIGZvcm1hdCgnc3ZnJyk7XG59XG5cbi5maWNvbjo6YmVmb3JlIHtcbiAgZm9udC1mYW1pbHk6ICdpY29tb29uJztcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIG1hcmdpbi1yaWdodDogLjNyZW07XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHNwZWFrOiBub25lO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbn1cblxuLmZpY29uLS1saXN0OjpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlOTAwJztcbn1cblxuLmZpY29uLS1sb2NhdGlvbjo6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTkwMSc7XG59XG5cbi5maWNvbi0taGVhcnQ6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU5MDInO1xufVxuXG4uZmljb24tLXVzZXI6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU5MDMnO1xufVxuXG4uZmljb24tLWdpZnQ6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU5MDQnO1xufVxuXG4uZmljb24tLXNob3BwaW5nLWNhcnQ6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU5MDUnO1xufVxuIiwiLy8gICAgIF8gICAgICAgICAgICBfICAgICAgICAgICBfICAgICAgICAgICAgICAgICAgICAgICAgICAgXyBfXG4vLyAgICAoXykgICAgICAgICAgfCB8ICAgICAgICAgfCB8ICAgICAgICAgICAgICAgICAgICAgICAgIHwgKF8pXG4vLyAgICAgXyBfIF9fICAgX19ffCB8XyAgIF8gIF9ffCB8IF9fXyAgIF8gX18gX19fICAgX19fICBfX3wgfF8gIF9fIF9cbi8vICAgIHwgfCAnXyBcXCAvIF9ffCB8IHwgfCB8LyBfYCB8LyBfIFxcIHwgJ18gYCBfIFxcIC8gXyBcXC8gX2AgfCB8LyBfYCB8XG4vLyAgICB8IHwgfCB8IHwgKF9ffCB8IHxffCB8IChffCB8ICBfXy8gfCB8IHwgfCB8IHwgIF9fLyAoX3wgfCB8IChffCB8XG4vLyAgICB8X3xffCB8X3xcXF9fX3xffFxcX18sX3xcXF9fLF98XFxfX198IHxffCB8X3wgfF98XFxfX198XFxfXyxffF98XFxfXyxffFxuLy9cbi8vICAgICAgU2ltcGxlLCBlbGVnYW50IGFuZCBtYWludGFpbmFibGUgbWVkaWEgcXVlcmllcyBpbiBTYXNzXG4vLyAgICAgICAgICAgICAgICAgICAgICAgIHYxLjQuMVxuLy9cbi8vICAgICAgICAgICAgICAgIGh0dHA6Ly9pbmNsdWRlLW1lZGlhLmNvbVxuLy9cbi8vICAgICAgICAgQXV0aG9yczogRWR1YXJkbyBCb3VjYXMgKEBlZHVhcmRvYm91Y2FzKVxuLy8gICAgICAgICAgICAgICAgICBIdWdvIEdpcmF1ZGVsIChAaHVnb2dpcmF1ZGVsKVxuLy9cbi8vICAgICAgVGhpcyBwcm9qZWN0IGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgTUlUIGxpY2Vuc2VcblxuXG4vLy8vXG4vLy8gaW5jbHVkZS1tZWRpYSBsaWJyYXJ5IHB1YmxpYyBjb25maWd1cmF0aW9uXG4vLy8gQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8vXG5cblxuLy8vXG4vLy8gQ3JlYXRlcyBhIGxpc3Qgb2YgZ2xvYmFsIGJyZWFrcG9pbnRzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHNpbmdsZSBicmVha3BvaW50IHdpdGggdGhlIGxhYmVsIGBwaG9uZWBcbi8vLyAgJGJyZWFrcG9pbnRzOiAoJ3Bob25lJzogMzIwcHgpO1xuLy8vXG4kYnJlYWtwb2ludHM6IChcbiAgJ3Bob25lJzogMzIwcHgsXG4gICd0YWJsZXQnOiA3NjhweCxcbiAgJ2Rlc2t0b3AnOiAxMDI0cHhcbikgIWRlZmF1bHQ7XG5cblxuLy8vXG4vLy8gQ3JlYXRlcyBhIGxpc3Qgb2Ygc3RhdGljIGV4cHJlc3Npb25zIG9yIG1lZGlhIHR5cGVzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHNpbmdsZSBtZWRpYSB0eXBlIChzY3JlZW4pXG4vLy8gICRtZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nOiAnc2NyZWVuJyk7XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHN0YXRpYyBleHByZXNzaW9uIHdpdGggbG9naWNhbCBkaXNqdW5jdGlvbiAoT1Igb3BlcmF0b3IpXG4vLy8gICRtZWRpYS1leHByZXNzaW9uczogKFxuLy8vICAgICdyZXRpbmEyeCc6ICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpJ1xuLy8vICApO1xuLy8vXG4kbWVkaWEtZXhwcmVzc2lvbnM6IChcbiAgJ3NjcmVlbic6ICdzY3JlZW4nLFxuICAncHJpbnQnOiAncHJpbnQnLFxuICAnaGFuZGhlbGQnOiAnaGFuZGhlbGQnLFxuICAnbGFuZHNjYXBlJzogJyhvcmllbnRhdGlvbjogbGFuZHNjYXBlKScsXG4gICdwb3J0cmFpdCc6ICcob3JpZW50YXRpb246IHBvcnRyYWl0KScsXG4gICdyZXRpbmEyeCc6ICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpJyxcbiAgJ3JldGluYTN4JzogJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpLCAobWluLXJlc29sdXRpb246IDM1MGRwaSknXG4pICFkZWZhdWx0O1xuXG5cbi8vL1xuLy8vIERlZmluZXMgYSBudW1iZXIgdG8gYmUgYWRkZWQgb3Igc3VidHJhY3RlZCBmcm9tIGVhY2ggdW5pdCB3aGVuIGRlY2xhcmluZyBicmVha3BvaW50cyB3aXRoIGV4Y2x1c2l2ZSBpbnRlcnZhbHNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgcGl4ZWxzIGlzIGRlZmluZWQgYXMgYDFgIGJ5IGRlZmF1bHRcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz4xMjhweCcpIHt9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICBAbWVkaWEgKG1pbi13aWR0aDogMTI5cHgpIHt9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIGVtcyBpcyBkZWZpbmVkIGFzIGAwLjAxYCBieSBkZWZhdWx0XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+MjBlbScpIHt9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICBAbWVkaWEgKG1pbi13aWR0aDogMjAuMDFlbSkge31cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgcmVtcyBpcyBkZWZpbmVkIGFzIGAwLjFgIGJ5IGRlZmF1bHQsIHRvIGJlIHVzZWQgd2l0aCBgZm9udC1zaXplOiA2Mi41JTtgXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+Mi4wcmVtJykge31cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIEBtZWRpYSAobWluLXdpZHRoOiAyLjFyZW0pIHt9XG4vLy9cbiR1bml0LWludGVydmFsczogKFxuICAncHgnOiAxLFxuICAnZW0nOiAwLjAxLFxuICAncmVtJzogMC4xXG4pICFkZWZhdWx0O1xuXG4vLy9cbi8vLyBEZWZpbmVzIHdoZXRoZXIgc3VwcG9ydCBmb3IgbWVkaWEgcXVlcmllcyBpcyBhdmFpbGFibGUsIHVzZWZ1bCBmb3IgY3JlYXRpbmcgc2VwYXJhdGUgc3R5bGVzaGVldHNcbi8vLyBmb3IgYnJvd3NlcnMgdGhhdCBkb24ndCBzdXBwb3J0IG1lZGlhIHF1ZXJpZXMuXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRGlzYWJsZXMgc3VwcG9ydCBmb3IgbWVkaWEgcXVlcmllc1xuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICAuZm9vIHtcbi8vLyAgICBjb2xvcjogdG9tYXRvO1xuLy8vICB9XG4vLy9cbiRpbS1tZWRpYS1zdXBwb3J0OiB0cnVlICFkZWZhdWx0O1xuXG4vLy9cbi8vLyBTZWxlY3RzIHdoaWNoIGJyZWFrcG9pbnQgdG8gZW11bGF0ZSB3aGVuIHN1cHBvcnQgZm9yIG1lZGlhIHF1ZXJpZXMgaXMgZGlzYWJsZWQuIE1lZGlhIHF1ZXJpZXMgdGhhdCBzdGFydCBhdCBvclxuLy8vIGludGVyY2VwdCB0aGUgYnJlYWtwb2ludCB3aWxsIGJlIGRpc3BsYXllZCwgYW55IG90aGVycyB3aWxsIGJlIGlnbm9yZWQuXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVGhpcyBtZWRpYSBxdWVyeSB3aWxsIHNob3cgYmVjYXVzZSBpdCBpbnRlcmNlcHRzIHRoZSBzdGF0aWMgYnJlYWtwb2ludFxuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gICRpbS1uby1tZWRpYS1icmVha3BvaW50OiAnZGVza3RvcCc7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICAuZm9vIHtcbi8vLyAgICBjb2xvcjogdG9tYXRvO1xuLy8vICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVGhpcyBtZWRpYSBxdWVyeSB3aWxsIE5PVCBzaG93IGJlY2F1c2UgaXQgZG9lcyBub3QgaW50ZXJjZXB0IHRoZSBkZXNrdG9wIGJyZWFrcG9pbnRcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ3RhYmxldCc7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PWRlc2t0b3AnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIE5vIG91dHB1dCAqL1xuLy8vXG4kaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnICFkZWZhdWx0O1xuXG4vLy9cbi8vLyBTZWxlY3RzIHdoaWNoIG1lZGlhIGV4cHJlc3Npb25zIGFyZSBhbGxvd2VkIGluIGFuIGV4cHJlc3Npb24gZm9yIGl0IHRvIGJlIHVzZWQgd2hlbiBtZWRpYSBxdWVyaWVzXG4vLy8gYXJlIG5vdCBzdXBwb3J0ZWQuXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVGhpcyBtZWRpYSBxdWVyeSB3aWxsIHNob3cgYmVjYXVzZSBpdCBpbnRlcmNlcHRzIHRoZSBzdGF0aWMgYnJlYWtwb2ludCBhbmQgY29udGFpbnMgb25seSBhY2NlcHRlZCBtZWRpYSBleHByZXNzaW9uc1xuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gICRpbS1uby1tZWRpYS1icmVha3BvaW50OiAnZGVza3RvcCc7XG4vLy8gICRpbS1uby1tZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nKTtcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49dGFibGV0JywgJ3NjcmVlbicpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgIC5mb28ge1xuLy8vICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBOT1Qgc2hvdyBiZWNhdXNlIGl0IGludGVyY2VwdHMgdGhlIHN0YXRpYyBicmVha3BvaW50IGJ1dCBjb250YWlucyBhIG1lZGlhIGV4cHJlc3Npb24gdGhhdCBpcyBub3QgYWNjZXB0ZWRcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnO1xuLy8vICAkaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJyk7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcsICdyZXRpbmEyeCcpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgLyogTm8gb3V0cHV0ICovXG4vLy9cbiRpbS1uby1tZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nLCAncG9ydHJhaXQnLCAnbGFuZHNjYXBlJykgIWRlZmF1bHQ7XG5cbi8vLy9cbi8vLyBDcm9zcy1lbmdpbmUgbG9nZ2luZyBlbmdpbmVcbi8vLyBAYXV0aG9yIEh1Z28gR2lyYXVkZWxcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLy9cblxuXG4vLy9cbi8vLyBMb2cgYSBtZXNzYWdlIGVpdGhlciB3aXRoIGBAZXJyb3JgIGlmIHN1cHBvcnRlZFxuLy8vIGVsc2Ugd2l0aCBgQHdhcm5gLCB1c2luZyBgZmVhdHVyZS1leGlzdHMoJ2F0LWVycm9yJylgXG4vLy8gdG8gZGV0ZWN0IHN1cHBvcnQuXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG1lc3NhZ2UgLSBNZXNzYWdlIHRvIGxvZ1xuLy8vXG5AZnVuY3Rpb24gbG9nKCRtZXNzYWdlKSB7XG4gIEBpZiBmZWF0dXJlLWV4aXN0cygnYXQtZXJyb3InKSB7XG4gICAgQGVycm9yICRtZXNzYWdlO1xuICB9IEBlbHNlIHtcbiAgICBAd2FybiAkbWVzc2FnZTtcbiAgICAkXzogbm9vcCgpO1xuICB9XG5cbiAgQHJldHVybiAkbWVzc2FnZTtcbn1cblxuXG4vLy9cbi8vLyBXcmFwcGVyIG1peGluIGZvciB0aGUgbG9nIGZ1bmN0aW9uIHNvIGl0IGNhbiBiZSB1c2VkIHdpdGggYSBtb3JlIGZyaWVuZGx5XG4vLy8gQVBJIHRoYW4gYEBpZiBsb2coJy4uJykge31gIG9yIGAkXzogbG9nKCcuLicpYC4gQmFzaWNhbGx5LCB1c2UgdGhlIGZ1bmN0aW9uXG4vLy8gd2l0aGluIGZ1bmN0aW9ucyBiZWNhdXNlIGl0IGlzIG5vdCBwb3NzaWJsZSB0byBpbmNsdWRlIGEgbWl4aW4gaW4gYSBmdW5jdGlvblxuLy8vIGFuZCB1c2UgdGhlIG1peGluIGV2ZXJ5d2hlcmUgZWxzZSBiZWNhdXNlIGl0J3MgbXVjaCBtb3JlIGVsZWdhbnQuXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG1lc3NhZ2UgLSBNZXNzYWdlIHRvIGxvZ1xuLy8vXG5AbWl4aW4gbG9nKCRtZXNzYWdlKSB7XG4gIEBpZiBsb2coJG1lc3NhZ2UpIHt9XG59XG5cblxuLy8vXG4vLy8gRnVuY3Rpb24gd2l0aCBubyBgQHJldHVybmAgY2FsbGVkIG5leHQgdG8gYEB3YXJuYCBpbiBTYXNzIDMuM1xuLy8vIHRvIHRyaWdnZXIgYSBjb21waWxpbmcgZXJyb3IgYW5kIHN0b3AgdGhlIHByb2Nlc3MuXG4vLy9cbkBmdW5jdGlvbiBub29wKCkge31cblxuLy8vXG4vLy8gRGV0ZXJtaW5lcyB3aGV0aGVyIGEgbGlzdCBvZiBjb25kaXRpb25zIGlzIGludGVyY2VwdGVkIGJ5IHRoZSBzdGF0aWMgYnJlYWtwb2ludC5cbi8vL1xuLy8vIEBwYXJhbSB7QXJnbGlzdH0gICAkY29uZGl0aW9ucyAgLSBNZWRpYSBxdWVyeSBjb25kaXRpb25zXG4vLy9cbi8vLyBAcmV0dXJuIHtCb29sZWFufSAtIFJldHVybnMgdHJ1ZSBpZiB0aGUgY29uZGl0aW9ucyBhcmUgaW50ZXJjZXB0ZWQgYnkgdGhlIHN0YXRpYyBicmVha3BvaW50XG4vLy9cbkBmdW5jdGlvbiBpbS1pbnRlcmNlcHRzLXN0YXRpYy1icmVha3BvaW50KCRjb25kaXRpb25zLi4uKSB7XG4gICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQpO1xuXG4gIEBpZiBub3QgJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWUge1xuICAgIEBpZiBsb2coJ2AjeyRpbS1uby1tZWRpYS1icmVha3BvaW50fWAgaXMgbm90IGEgdmFsaWQgYnJlYWtwb2ludC4nKSB7fVxuICB9XG5cbiAgQGVhY2ggJGNvbmRpdGlvbiBpbiAkY29uZGl0aW9ucyB7XG4gICAgQGlmIG5vdCBtYXAtaGFzLWtleSgkbWVkaWEtZXhwcmVzc2lvbnMsICRjb25kaXRpb24pIHtcbiAgICAgICRvcGVyYXRvcjogZ2V0LWV4cHJlc3Npb24tb3BlcmF0b3IoJGNvbmRpdGlvbik7XG4gICAgICAkcHJlZml4OiBnZXQtZXhwcmVzc2lvbi1wcmVmaXgoJG9wZXJhdG9yKTtcbiAgICAgICR2YWx1ZTogZ2V0LWV4cHJlc3Npb24tdmFsdWUoJGNvbmRpdGlvbiwgJG9wZXJhdG9yKTtcblxuICAgICAgQGlmICgkcHJlZml4ID09ICdtYXgnIGFuZCAkdmFsdWUgPD0gJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWUpIG9yXG4gICAgICAgICAgKCRwcmVmaXggPT0gJ21pbicgYW5kICR2YWx1ZSA+ICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlKSB7XG4gICAgICAgIEByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfSBAZWxzZSBpZiBub3QgaW5kZXgoJGltLW5vLW1lZGlhLWV4cHJlc3Npb25zLCAkY29uZGl0aW9uKSB7XG4gICAgICBAcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gdHJ1ZTtcbn1cblxuLy8vL1xuLy8vIFBhcnNpbmcgZW5naW5lXG4vLy8gQGF1dGhvciBIdWdvIEdpcmF1ZGVsXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8vXG5cblxuLy8vXG4vLy8gR2V0IG9wZXJhdG9yIG9mIGFuIGV4cHJlc3Npb25cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gZXh0cmFjdCBvcGVyYXRvciBmcm9tXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gQW55IG9mIGA+PWAsIGA+YCwgYDw9YCwgYDxgLCBg4omlYCwgYOKJpGBcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLW9wZXJhdG9yKCRleHByZXNzaW9uKSB7XG4gIEBlYWNoICRvcGVyYXRvciBpbiAoJz49JywgJz4nLCAnPD0nLCAnPCcsICfiiaUnLCAn4omkJykge1xuICAgIEBpZiBzdHItaW5kZXgoJGV4cHJlc3Npb24sICRvcGVyYXRvcikge1xuICAgICAgQHJldHVybiAkb3BlcmF0b3I7XG4gICAgfVxuICB9XG5cbiAgLy8gSXQgaXMgbm90IHBvc3NpYmxlIHRvIGluY2x1ZGUgYSBtaXhpbiBpbnNpZGUgYSBmdW5jdGlvbiwgc28gd2UgaGF2ZSB0b1xuICAvLyByZWx5IG9uIHRoZSBgbG9nKC4uKWAgZnVuY3Rpb24gcmF0aGVyIHRoYW4gdGhlIGBsb2coLi4pYCBtaXhpbi4gQmVjYXVzZVxuICAvLyBmdW5jdGlvbnMgY2Fubm90IGJlIGNhbGxlZCBhbnl3aGVyZSBpbiBTYXNzLCB3ZSBuZWVkIHRvIGhhY2sgdGhlIGNhbGwgaW5cbiAgLy8gYSBkdW1teSB2YXJpYWJsZSwgc3VjaCBhcyBgJF9gLiBJZiBhbnlib2R5IGV2ZXIgcmFpc2UgYSBzY29waW5nIGlzc3VlIHdpdGhcbiAgLy8gU2FzcyAzLjMsIGNoYW5nZSB0aGlzIGxpbmUgaW4gYEBpZiBsb2coLi4pIHt9YCBpbnN0ZWFkLlxuICAkXzogbG9nKCdObyBvcGVyYXRvciBmb3VuZCBpbiBgI3skZXhwcmVzc2lvbn1gLicpO1xufVxuXG5cbi8vL1xuLy8vIEdldCBkaW1lbnNpb24gb2YgYW4gZXhwcmVzc2lvbiwgYmFzZWQgb24gYSBmb3VuZCBvcGVyYXRvclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRleHByZXNzaW9uIC0gRXhwcmVzc2lvbiB0byBleHRyYWN0IGRpbWVuc2lvbiBmcm9tXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRvcGVyYXRvciAtIE9wZXJhdG9yIGZyb20gYCRleHByZXNzaW9uYFxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIGB3aWR0aGAgb3IgYGhlaWdodGAgKG9yIHBvdGVudGlhbGx5IGFueXRoaW5nIGVsc2UpXG4vLy9cbkBmdW5jdGlvbiBnZXQtZXhwcmVzc2lvbi1kaW1lbnNpb24oJGV4cHJlc3Npb24sICRvcGVyYXRvcikge1xuICAkb3BlcmF0b3ItaW5kZXg6IHN0ci1pbmRleCgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKTtcbiAgJHBhcnNlZC1kaW1lbnNpb246IHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgMCwgJG9wZXJhdG9yLWluZGV4IC0gMSk7XG4gICRkaW1lbnNpb246ICd3aWR0aCc7XG5cbiAgQGlmIHN0ci1sZW5ndGgoJHBhcnNlZC1kaW1lbnNpb24pID4gMCB7XG4gICAgJGRpbWVuc2lvbjogJHBhcnNlZC1kaW1lbnNpb247XG4gIH1cblxuICBAcmV0dXJuICRkaW1lbnNpb247XG59XG5cblxuLy8vXG4vLy8gR2V0IGRpbWVuc2lvbiBwcmVmaXggYmFzZWQgb24gYW4gb3BlcmF0b3Jcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkb3BlcmF0b3IgLSBPcGVyYXRvclxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIGBtaW5gIG9yIGBtYXhgXG4vLy9cbkBmdW5jdGlvbiBnZXQtZXhwcmVzc2lvbi1wcmVmaXgoJG9wZXJhdG9yKSB7XG4gIEByZXR1cm4gaWYoaW5kZXgoKCc8JywgJzw9JywgJ+KJpCcpLCAkb3BlcmF0b3IpLCAnbWF4JywgJ21pbicpO1xufVxuXG5cbi8vL1xuLy8vIEdldCB2YWx1ZSBvZiBhbiBleHByZXNzaW9uLCBiYXNlZCBvbiBhIGZvdW5kIG9wZXJhdG9yXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIGV4dHJhY3QgdmFsdWUgZnJvbVxuLy8vIEBwYXJhbSB7U3RyaW5nfSAkb3BlcmF0b3IgLSBPcGVyYXRvciBmcm9tIGAkZXhwcmVzc2lvbmBcbi8vL1xuLy8vIEByZXR1cm4ge051bWJlcn0gLSBBIG51bWVyaWMgdmFsdWVcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLXZhbHVlKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpIHtcbiAgJG9wZXJhdG9yLWluZGV4OiBzdHItaW5kZXgoJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG4gICR2YWx1ZTogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAkb3BlcmF0b3ItaW5kZXggKyBzdHItbGVuZ3RoKCRvcGVyYXRvcikpO1xuXG4gIEBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICR2YWx1ZSkge1xuICAgICR2YWx1ZTogbWFwLWdldCgkYnJlYWtwb2ludHMsICR2YWx1ZSk7XG4gIH0gQGVsc2Uge1xuICAgICR2YWx1ZTogdG8tbnVtYmVyKCR2YWx1ZSk7XG4gIH1cblxuICAkaW50ZXJ2YWw6IG1hcC1nZXQoJHVuaXQtaW50ZXJ2YWxzLCB1bml0KCR2YWx1ZSkpO1xuXG4gIEBpZiBub3QgJGludGVydmFsIHtcbiAgICAvLyBJdCBpcyBub3QgcG9zc2libGUgdG8gaW5jbHVkZSBhIG1peGluIGluc2lkZSBhIGZ1bmN0aW9uLCBzbyB3ZSBoYXZlIHRvXG4gICAgLy8gcmVseSBvbiB0aGUgYGxvZyguLilgIGZ1bmN0aW9uIHJhdGhlciB0aGFuIHRoZSBgbG9nKC4uKWAgbWl4aW4uIEJlY2F1c2VcbiAgICAvLyBmdW5jdGlvbnMgY2Fubm90IGJlIGNhbGxlZCBhbnl3aGVyZSBpbiBTYXNzLCB3ZSBuZWVkIHRvIGhhY2sgdGhlIGNhbGwgaW5cbiAgICAvLyBhIGR1bW15IHZhcmlhYmxlLCBzdWNoIGFzIGAkX2AuIElmIGFueWJvZHkgZXZlciByYWlzZSBhIHNjb3BpbmcgaXNzdWUgd2l0aFxuICAgIC8vIFNhc3MgMy4zLCBjaGFuZ2UgdGhpcyBsaW5lIGluIGBAaWYgbG9nKC4uKSB7fWAgaW5zdGVhZC5cbiAgICAkXzogbG9nKCdVbmtub3duIHVuaXQgYCN7dW5pdCgkdmFsdWUpfWAuJyk7XG4gIH1cblxuICBAaWYgJG9wZXJhdG9yID09ICc+JyB7XG4gICAgJHZhbHVlOiAkdmFsdWUgKyAkaW50ZXJ2YWw7XG4gIH0gQGVsc2UgaWYgJG9wZXJhdG9yID09ICc8JyB7XG4gICAgJHZhbHVlOiAkdmFsdWUgLSAkaW50ZXJ2YWw7XG4gIH1cblxuICBAcmV0dXJuICR2YWx1ZTtcbn1cblxuXG4vLy9cbi8vLyBQYXJzZSBhbiBleHByZXNzaW9uIHRvIHJldHVybiBhIHZhbGlkIG1lZGlhLXF1ZXJ5IGV4cHJlc3Npb25cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gcGFyc2Vcbi8vL1xuLy8vIEByZXR1cm4ge1N0cmluZ30gLSBWYWxpZCBtZWRpYSBxdWVyeVxuLy8vXG5AZnVuY3Rpb24gcGFyc2UtZXhwcmVzc2lvbigkZXhwcmVzc2lvbikge1xuICAvLyBJZiBpdCBpcyBwYXJ0IG9mICRtZWRpYS1leHByZXNzaW9ucywgaXQgaGFzIG5vIG9wZXJhdG9yXG4gIC8vIHRoZW4gdGhlcmUgaXMgbm8gbmVlZCB0byBnbyBhbnkgZnVydGhlciwganVzdCByZXR1cm4gdGhlIHZhbHVlXG4gIEBpZiBtYXAtaGFzLWtleSgkbWVkaWEtZXhwcmVzc2lvbnMsICRleHByZXNzaW9uKSB7XG4gICAgQHJldHVybiBtYXAtZ2V0KCRtZWRpYS1leHByZXNzaW9ucywgJGV4cHJlc3Npb24pO1xuICB9XG5cbiAgJG9wZXJhdG9yOiBnZXQtZXhwcmVzc2lvbi1vcGVyYXRvcigkZXhwcmVzc2lvbik7XG4gICRkaW1lbnNpb246IGdldC1leHByZXNzaW9uLWRpbWVuc2lvbigkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKTtcbiAgJHByZWZpeDogZ2V0LWV4cHJlc3Npb24tcHJlZml4KCRvcGVyYXRvcik7XG4gICR2YWx1ZTogZ2V0LWV4cHJlc3Npb24tdmFsdWUoJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG5cbiAgQHJldHVybiAnKCN7JHByZWZpeH0tI3skZGltZW5zaW9ufTogI3skdmFsdWV9KSc7XG59XG5cbi8vL1xuLy8vIFNsaWNlIGAkbGlzdGAgYmV0d2VlbiBgJHN0YXJ0YCBhbmQgYCRlbmRgIGluZGV4ZXNcbi8vL1xuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fSAkbGlzdCAtIExpc3QgdG8gc2xpY2Vcbi8vLyBAcGFyYW0ge051bWJlcn0gJHN0YXJ0IFsxXSAtIFN0YXJ0IGluZGV4XG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRlbmQgW2xlbmd0aCgkbGlzdCldIC0gRW5kIGluZGV4XG4vLy9cbi8vLyBAcmV0dXJuIHtMaXN0fSBTbGljZWQgbGlzdFxuLy8vXG5AZnVuY3Rpb24gc2xpY2UoJGxpc3QsICRzdGFydDogMSwgJGVuZDogbGVuZ3RoKCRsaXN0KSkge1xuICBAaWYgbGVuZ3RoKCRsaXN0KSA8IDEgb3IgJHN0YXJ0ID4gJGVuZCB7XG4gICAgQHJldHVybiAoKTtcbiAgfVxuXG4gICRyZXN1bHQ6ICgpO1xuXG4gIEBmb3IgJGkgZnJvbSAkc3RhcnQgdGhyb3VnaCAkZW5kIHtcbiAgICAkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgbnRoKCRsaXN0LCAkaSkpO1xuICB9XG5cbiAgQHJldHVybiAkcmVzdWx0O1xufVxuXG4vLy8vXG4vLy8gU3RyaW5nIHRvIG51bWJlciBjb252ZXJ0ZXJcbi8vLyBAYXV0aG9yIEh1Z28gR2lyYXVkZWxcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLy9cblxuXG4vLy9cbi8vLyBDYXN0cyBhIHN0cmluZyBpbnRvIGEgbnVtYmVyXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZyB8IE51bWJlcn0gJHZhbHVlIC0gVmFsdWUgdG8gYmUgcGFyc2VkXG4vLy9cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9XG4vLy9cbkBmdW5jdGlvbiB0by1udW1iZXIoJHZhbHVlKSB7XG4gIEBpZiB0eXBlLW9mKCR2YWx1ZSkgPT0gJ251bWJlcicge1xuICAgIEByZXR1cm4gJHZhbHVlO1xuICB9IEBlbHNlIGlmIHR5cGUtb2YoJHZhbHVlKSAhPSAnc3RyaW5nJyB7XG4gICAgJF86IGxvZygnVmFsdWUgZm9yIGB0by1udW1iZXJgIHNob3VsZCBiZSBhIG51bWJlciBvciBhIHN0cmluZy4nKTtcbiAgfVxuXG4gICRyZXN1bHQ6IDA7XG4gICRkaWdpdHM6IDA7XG4gICRtaW51czogc3RyLXNsaWNlKCR2YWx1ZSwgMSwgMSkgPT0gJy0nO1xuICAkbnVtYmVyczogKCcwJzogMCwgJzEnOiAxLCAnMic6IDIsICczJzogMywgJzQnOiA0LCAnNSc6IDUsICc2JzogNiwgJzcnOiA3LCAnOCc6IDgsICc5JzogOSk7XG5cbiAgQGZvciAkaSBmcm9tIGlmKCRtaW51cywgMiwgMSkgdGhyb3VnaCBzdHItbGVuZ3RoKCR2YWx1ZSkge1xuICAgICRjaGFyYWN0ZXI6IHN0ci1zbGljZSgkdmFsdWUsICRpLCAkaSk7XG5cbiAgICBAaWYgbm90IChpbmRleChtYXAta2V5cygkbnVtYmVycyksICRjaGFyYWN0ZXIpIG9yICRjaGFyYWN0ZXIgPT0gJy4nKSB7XG4gICAgICBAcmV0dXJuIHRvLWxlbmd0aChpZigkbWludXMsIC0kcmVzdWx0LCAkcmVzdWx0KSwgc3RyLXNsaWNlKCR2YWx1ZSwgJGkpKVxuICAgIH1cblxuICAgIEBpZiAkY2hhcmFjdGVyID09ICcuJyB7XG4gICAgICAkZGlnaXRzOiAxO1xuICAgIH0gQGVsc2UgaWYgJGRpZ2l0cyA9PSAwIHtcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKiAxMCArIG1hcC1nZXQoJG51bWJlcnMsICRjaGFyYWN0ZXIpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJGRpZ2l0czogJGRpZ2l0cyAqIDEwO1xuICAgICAgJHJlc3VsdDogJHJlc3VsdCArIG1hcC1nZXQoJG51bWJlcnMsICRjaGFyYWN0ZXIpIC8gJGRpZ2l0cztcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuIGlmKCRtaW51cywgLSRyZXN1bHQsICRyZXN1bHQpOztcbn1cblxuXG4vLy9cbi8vLyBBZGQgYCR1bml0YCB0byBgJHZhbHVlYFxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICR2YWx1ZSAtIFZhbHVlIHRvIGFkZCB1bml0IHRvXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICR1bml0IC0gU3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSB1bml0XG4vLy9cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9IC0gYCR2YWx1ZWAgZXhwcmVzc2VkIGluIGAkdW5pdGBcbi8vL1xuQGZ1bmN0aW9uIHRvLWxlbmd0aCgkdmFsdWUsICR1bml0KSB7XG4gICR1bml0czogKCdweCc6IDFweCwgJ2NtJzogMWNtLCAnbW0nOiAxbW0sICclJzogMSUsICdjaCc6IDFjaCwgJ3BjJzogMXBjLCAnaW4nOiAxaW4sICdlbSc6IDFlbSwgJ3JlbSc6IDFyZW0sICdwdCc6IDFwdCwgJ2V4JzogMWV4LCAndncnOiAxdncsICd2aCc6IDF2aCwgJ3ZtaW4nOiAxdm1pbiwgJ3ZtYXgnOiAxdm1heCk7XG5cbiAgQGlmIG5vdCBpbmRleChtYXAta2V5cygkdW5pdHMpLCAkdW5pdCkge1xuICAgICRfOiBsb2coJ0ludmFsaWQgdW5pdCBgI3skdW5pdH1gLicpO1xuICB9XG5cbiAgQHJldHVybiAkdmFsdWUgKiBtYXAtZ2V0KCR1bml0cywgJHVuaXQpO1xufVxuXG4vLy9cbi8vLyBUaGlzIG1peGluIGFpbXMgYXQgcmVkZWZpbmluZyB0aGUgY29uZmlndXJhdGlvbiBqdXN0IGZvciB0aGUgc2NvcGUgb2Zcbi8vLyB0aGUgY2FsbC4gSXQgaXMgaGVscGZ1bCB3aGVuIGhhdmluZyBhIGNvbXBvbmVudCBuZWVkaW5nIGFuIGV4dGVuZGVkXG4vLy8gY29uZmlndXJhdGlvbiBzdWNoIGFzIGN1c3RvbSBicmVha3BvaW50cyAocmVmZXJyZWQgdG8gYXMgdHdlYWtwb2ludHMpXG4vLy8gZm9yIGluc3RhbmNlLlxuLy8vXG4vLy8gQGF1dGhvciBIdWdvIEdpcmF1ZGVsXG4vLy9cbi8vLyBAcGFyYW0ge01hcH0gJHR3ZWFrcG9pbnRzIFsoKV0gLSBNYXAgb2YgdHdlYWtwb2ludHMgdG8gYmUgbWVyZ2VkIHdpdGggYCRicmVha3BvaW50c2Bcbi8vLyBAcGFyYW0ge01hcH0gJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zIFsoKV0gLSBNYXAgb2YgdHdlYWtlZCBtZWRpYSBleHByZXNzaW9ucyB0byBiZSBtZXJnZWQgd2l0aCBgJG1lZGlhLWV4cHJlc3Npb25gXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRXh0ZW5kIHRoZSBnbG9iYWwgYnJlYWtwb2ludHMgd2l0aCBhIHR3ZWFrcG9pbnRcbi8vLyAgQGluY2x1ZGUgbWVkaWEtY29udGV4dCgoJ2N1c3RvbSc6IDY3OHB4KSkge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgQGluY2x1ZGUgbWVkaWEoJz5waG9uZScsICc8PWN1c3RvbScpIHtcbi8vLyAgICAgICAvLyAuLi5cbi8vLyAgICAgIH1cbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBFeHRlbmQgdGhlIGdsb2JhbCBtZWRpYSBleHByZXNzaW9ucyB3aXRoIGEgY3VzdG9tIG9uZVxuLy8vICBAaW5jbHVkZSBtZWRpYS1jb250ZXh0KCR0d2Vhay1tZWRpYS1leHByZXNzaW9uczogKCdhbGwnOiAnYWxsJykpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIEBpbmNsdWRlIG1lZGlhKCdhbGwnLCAnPnBob25lJykge1xuLy8vICAgICAgIC8vIC4uLlxuLy8vICAgICAgfVxuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEV4dGVuZCBib3RoIGNvbmZpZ3VyYXRpb24gbWFwc1xuLy8vICBAaW5jbHVkZSBtZWRpYS1jb250ZXh0KCgnY3VzdG9tJzogNjc4cHgpLCAoJ2FsbCc6ICdhbGwnKSkge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgQGluY2x1ZGUgbWVkaWEoJ2FsbCcsICc+cGhvbmUnLCAnPD1jdXN0b20nKSB7XG4vLy8gICAgICAgLy8gLi4uXG4vLy8gICAgICB9XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbkBtaXhpbiBtZWRpYS1jb250ZXh0KCR0d2Vha3BvaW50czogKCksICR0d2Vhay1tZWRpYS1leHByZXNzaW9uczogKCkpIHtcbiAgLy8gU2F2ZSBnbG9iYWwgY29uZmlndXJhdGlvblxuICAkZ2xvYmFsLWJyZWFrcG9pbnRzOiAkYnJlYWtwb2ludHM7XG4gICRnbG9iYWwtbWVkaWEtZXhwcmVzc2lvbnM6ICRtZWRpYS1leHByZXNzaW9ucztcblxuICAvLyBVcGRhdGUgZ2xvYmFsIGNvbmZpZ3VyYXRpb25cbiAgJGJyZWFrcG9pbnRzOiBtYXAtbWVyZ2UoJGJyZWFrcG9pbnRzLCAkdHdlYWtwb2ludHMpICFnbG9iYWw7XG4gICRtZWRpYS1leHByZXNzaW9uczogbWFwLW1lcmdlKCRtZWRpYS1leHByZXNzaW9ucywgJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zKSAhZ2xvYmFsO1xuXG4gIEBjb250ZW50O1xuXG4gIC8vIFJlc3RvcmUgZ2xvYmFsIGNvbmZpZ3VyYXRpb25cbiAgJGJyZWFrcG9pbnRzOiAkZ2xvYmFsLWJyZWFrcG9pbnRzICFnbG9iYWw7XG4gICRtZWRpYS1leHByZXNzaW9uczogJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zICFnbG9iYWw7XG59XG5cbi8vLy9cbi8vLyBpbmNsdWRlLW1lZGlhIHB1YmxpYyBleHBvc2VkIEFQSVxuLy8vIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vL1xuXG5cbi8vL1xuLy8vIEdlbmVyYXRlcyBhIG1lZGlhIHF1ZXJ5IGJhc2VkIG9uIGEgbGlzdCBvZiBjb25kaXRpb25zXG4vLy9cbi8vLyBAcGFyYW0ge0FyZ2xpc3R9ICAgJGNvbmRpdGlvbnMgIC0gTWVkaWEgcXVlcnkgY29uZGl0aW9uc1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggYSBzaW5nbGUgc2V0IGJyZWFrcG9pbnRcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz5waG9uZScpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggdHdvIHNldCBicmVha3BvaW50c1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPnBob25lJywgJzw9dGFibGV0JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBjdXN0b20gdmFsdWVzXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PTM1OHB4JywgJzw4NTBweCcpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggc2V0IGJyZWFrcG9pbnRzIHdpdGggY3VzdG9tIHZhbHVlc1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPmRlc2t0b3AnLCAnPD0xMzUwcHgnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIGEgc3RhdGljIGV4cHJlc3Npb25cbi8vLyAgQGluY2x1ZGUgbWVkaWEoJ3JldGluYTJ4JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gTWl4aW5nIGV2ZXJ5dGhpbmdcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49MzUwcHgnLCAnPHRhYmxldCcsICdyZXRpbmEzeCcpIHsgfVxuLy8vXG5AbWl4aW4gbWVkaWEoJGNvbmRpdGlvbnMuLi4pIHtcbiAgQGlmICgkaW0tbWVkaWEtc3VwcG9ydCBhbmQgbGVuZ3RoKCRjb25kaXRpb25zKSA9PSAwKSBvclxuICAgICAgKG5vdCAkaW0tbWVkaWEtc3VwcG9ydCBhbmQgaW0taW50ZXJjZXB0cy1zdGF0aWMtYnJlYWtwb2ludCgkY29uZGl0aW9ucy4uLikpIHtcbiAgICBAY29udGVudDtcbiAgfSBAZWxzZSBpZiAoJGltLW1lZGlhLXN1cHBvcnQgYW5kIGxlbmd0aCgkY29uZGl0aW9ucykgPiAwKSB7XG4gICAgQG1lZGlhICN7dW5xdW90ZShwYXJzZS1leHByZXNzaW9uKG50aCgkY29uZGl0aW9ucywgMSkpKX0ge1xuICAgICAgLy8gUmVjdXJzaXZlIGNhbGxcbiAgICAgIEBpbmNsdWRlIG1lZGlhKHNsaWNlKCRjb25kaXRpb25zLCAyKS4uLikge1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
